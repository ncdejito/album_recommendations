
/*
 * Lazy Load - jQuery plugin for lazy loading images
 *
 * Copyright (c) 2007-2013 Mika Tuupola
 *
 * Licensed under the MIT license:
 *   http://www.opensource.org/licenses/mit-license.php
 *
 * Project home:
 *   http://www.appelsiini.net/projects/lazyload
 *
 * Version:  1.8.4
 *
 */
(function(a,b,c,d){var e=a(b);a.fn.lazyload=function(c){function i(){var b=0;f.each(function(){var c=a(this);if(h.skip_invisible&&!c.is(":visible"))return;if(!a.abovethetop(this,h)&&!a.leftofbegin(this,h))if(!a.belowthefold(this,h)&&!a.rightoffold(this,h))c.trigger("appear"),b=0;else if(++b>h.failure_limit)return!1})}var f=this,g,h={threshold:0,failure_limit:0,event:"scroll",effect:"show",container:b,data_attribute:"original",skip_invisible:!0,appear:null,load:null};return c&&(d!==c.failurelimit&&(c.failure_limit=c.failurelimit,delete c.failurelimit),d!==c.effectspeed&&(c.effect_speed=c.effectspeed,delete c.effectspeed),a.extend(h,c)),g=h.container===d||h.container===b?e:a(h.container),0===h.event.indexOf("scroll")&&g.bind(h.event,function(a){return i()}),this.each(function(){var b=this,c=a(b);b.loaded=!1,c.one("appear",function(){if(!this.loaded){if(h.appear){var d=f.length;h.appear.call(b,d,h)}a("<img />").bind("load",function(){c.hide().attr("src",c.data(h.data_attribute))[h.effect](h.effect_speed),b.loaded=!0;var d=a.grep(f,function(a){return!a.loaded});f=a(d);if(h.load){var e=f.length;h.load.call(b,e,h)}}).attr("src",c.data(h.data_attribute))}}),0!==h.event.indexOf("scroll")&&c.bind(h.event,function(a){b.loaded||c.trigger("appear")})}),e.bind("resize",function(a){i()}),/iphone|ipod|ipad.*os 5/gi.test(navigator.appVersion)&&e.bind("pageshow",function(b){b.originalEvent.persisted&&f.each(function(){a(this).trigger("appear")})}),a(b).load(function(){i()}),this},a.belowthefold=function(c,f){var g;return f.container===d||f.container===b?g=e.height()+e.scrollTop():g=a(f.container).offset().top+a(f.container).height(),g<=a(c).offset().top-f.threshold},a.rightoffold=function(c,f){var g;return f.container===d||f.container===b?g=e.width()+e.scrollLeft():g=a(f.container).offset().left+a(f.container).width(),g<=a(c).offset().left-f.threshold},a.abovethetop=function(c,f){var g;return f.container===d||f.container===b?g=e.scrollTop():g=a(f.container).offset().top,g>=a(c).offset().top+f.threshold+a(c).height()},a.leftofbegin=function(c,f){var g;return f.container===d||f.container===b?g=e.scrollLeft():g=a(f.container).offset().left,g>=a(c).offset().left+f.threshold+a(c).width()},a.inviewport=function(b,c){return!a.rightoffold(b,c)&&!a.leftofbegin(b,c)&&!a.belowthefold(b,c)&&!a.abovethetop(b,c)},a.extend(a.expr[":"],{"below-the-fold":function(b){return a.belowthefold(b,{threshold:0})},"above-the-top":function(b){return!a.belowthefold(b,{threshold:0})},"right-of-screen":function(b){return a.rightoffold(b,{threshold:0})},"left-of-screen":function(b){return!a.rightoffold(b,{threshold:0})},"in-viewport":function(b){return a.inviewport(b,{threshold:0})},"above-the-fold":function(b){return!a.belowthefold(b,{threshold:0})},"right-of-fold":function(b){return a.rightoffold(b,{threshold:0})},"left-of-fold":function(b){return!a.rightoffold(b,{threshold:0})}})})(jQuery,window,document)
;
/**!
 * project-site: http://plugins.jquery.com/project/AjaxManager
 * repository: http://github.com/aFarkas/Ajaxmanager
 * @author Alexander Farkas
 * @version 3.12
 * Copyright 2010, Alexander Farkas
 * Dual licensed under the MIT or GPL Version 2 licenses.
 */

(function($){
    "use strict";
    var managed = {},
        cache   = {}
    ;
    $.manageAjax = (function(){
        function create(name, opts){
            managed[name] = new $.manageAjax._manager(name, opts);
            return managed[name];
        }
        
        function destroy(name){
            if(managed[name]){
                managed[name].clear(true);
                delete managed[name];
            }
        }

        
        var publicFns = {
            create: create,
            destroy: destroy
        };
        
        return publicFns;
    })();
    
    $.manageAjax._manager = function(name, opts){
        this.requests = {};
        this.inProgress = 0;
        this.name = name;
        this.qName = name;
        
        this.opts = $.extend({}, $.manageAjax.defaults, opts);
        if(opts && opts.queue && opts.queue !== true && typeof opts.queue === 'string' && opts.queue !== 'clear'){
            this.qName = opts.queue;
        }
    };
    
    $.manageAjax._manager.prototype = {
        add: function(url, o){
            if(typeof url == 'object'){
                o = url;
            } else if(typeof url == 'string'){
                o = $.extend(o || {}, {url: url});
            }
            o = $.extend({}, this.opts, o);
            
            var origCom     = o.complete || $.noop,
                origSuc     = o.success || $.noop,
                beforeSend  = o.beforeSend || $.noop,
                origError   = o.error || $.noop,
                strData     = (typeof o.data == 'string') ? o.data : $.param(o.data || {}),
                xhrID       = o.type + o.url + strData,
                that        = this,
                ajaxFn      = this._createAjax(xhrID, o, origSuc, origCom)
            ;
            if(o.preventDoubleRequests && o.queueDuplicateRequests){
                if(o.preventDoubleRequests){
                    o.queueDuplicateRequests = false;
                }
                setTimeout(function(){
                    throw("preventDoubleRequests and queueDuplicateRequests can't be both true");
                }, 0);
            }
            if(this.requests[xhrID] && o.preventDoubleRequests){
                return;
            }
            ajaxFn.xhrID = xhrID;
            o.xhrID = xhrID;
            
            o.beforeSend = function(xhr, opts){
                var ret = beforeSend.call(this, xhr, opts);
                if(ret === false){
                    that._removeXHR(xhrID);
                }
                xhr = null;
                return ret;
            };
            o.complete = function(xhr, status){
                that._complete.call(that, this, origCom, xhr, status, xhrID, o);
                xhr = null;
            };
            
            o.success = function(data, status, xhr){
                that._success.call(that, this, origSuc, data, status, xhr, o);
                xhr = null;
            };
                        
            //always add some error callback
            o.error =  function(ahr, status, errorStr){
                var httpStatus  = '',
                    content     = ''
                ;
                if(status !== 'timeout' && ahr){
                    httpStatus = ahr.status;
                    content = ahr.responseXML || ahr.responseText;
                }
                if(origError) {
                    origError.call(this, ahr, status, errorStr, o);
                } else {
                    setTimeout(function(){
                        throw status + '| status: ' + httpStatus + ' | URL: ' + o.url + ' | data: '+ strData + ' | thrown: '+ errorStr + ' | response: '+ content;
                    }, 0);
                }
                ahr = null;
            };
            
            if(o.queue === 'clear'){
                $(document).clearQueue(this.qName);
            }
            
            if(o.queue || (o.queueDuplicateRequests && this.requests[xhrID])){
                $.queue(document, this.qName, ajaxFn);
                if(this.inProgress < o.maxRequests && (!this.requests[xhrID] || !o.queueDuplicateRequests)){
                    $.dequeue(document, this.qName);
                }
                return xhrID;
            }
            return ajaxFn();
        },
        _createAjax: function(id, o, origSuc, origCom){
            var that = this;
            return function(){
                if(o.beforeCreate.call(o.context || that, id, o) === false){return;}
                that.inProgress++;
                if(that.inProgress === 1){
                    $.event.trigger(that.name +'AjaxStart');
                }
                if(o.cacheResponse && cache[id]){
                    if(!cache[id].cacheTTL || cache[id].cacheTTL < 0 || ((new Date().getTime() - cache[id].timestamp) < cache[id].cacheTTL)){
                        that.requests[id] = {};
                        setTimeout(function(){
                            that._success.call(that, o.context || o, origSuc, cache[id]._successData, 'success', cache[id], o);
                            that._complete.call(that, o.context || o, origCom, cache[id], 'success', id, o);
                        }, 0);
                    } else {
                         delete cache[id];
                    }
                } 
                if(!o.cacheResponse || !cache[id]) {
                    if (o.async) {
                        that.requests[id] = $.ajax(o);
                    } else {
                        $.ajax(o);
                    }
                }
                return id;
            };
        },
        _removeXHR: function(xhrID){
            if(this.opts.queue || this.opts.queueDuplicateRequests){
                $.dequeue(document, this.qName);
            }
            this.inProgress--;
            this.requests[xhrID] = null;
            delete this.requests[xhrID];
        },
        clearCache: function () {
            cache = {};
        },
        _isAbort: function(xhr, status, o){
            if(!o.abortIsNoSuccess || (!xhr && !status)){
                return false;
            }
            var ret = !!(  ( !xhr || xhr.readyState === 0 || this.lastAbort === o.xhrID ) );
            xhr = null;
            return ret;
        },
        _complete: function(context, origFn, xhr, status, xhrID, o){
            if(this._isAbort(xhr, status, o)){
                status = 'abort';
                o.abort.call(context, xhr, status, o);
            }
            origFn.call(context, xhr, status, o);
            
            $.event.trigger(this.name +'AjaxComplete', [xhr, status, o]);
            
            if(o.domCompleteTrigger){
                $(o.domCompleteTrigger)
                    .trigger(this.name +'DOMComplete', [xhr, status, o])
                    .trigger('DOMComplete', [xhr, status, o])
                ;
            }
            
            this._removeXHR(xhrID);
            if(!this.inProgress){
                $.event.trigger(this.name +'AjaxStop');
            }
            xhr = null;
        },
        _success: function(context, origFn, data, status, xhr, o){
            var that = this;
            if(this._isAbort(xhr, status, o)){
                xhr = null;
                return;
            }
            if(o.abortOld){
                $.each(this.requests, function(name){
                    if(name === o.xhrID){
                        return false;
                    }
                    that.abort(name);
                });
            }
            if(o.cacheResponse && !cache[o.xhrID]){
                if(!xhr){
                    xhr = {};
                }
                cache[o.xhrID] = {
                    status: xhr.status,
                    statusText: xhr.statusText,
                    responseText: xhr.responseText,
                    responseXML: xhr.responseXML,
                    _successData: data,
                    cacheTTL: o.cacheTTL, 
                    timestamp: new Date().getTime()
                };
                if('getAllResponseHeaders' in xhr){
                    var responseHeaders = xhr.getAllResponseHeaders();
                    var parsedHeaders;
                    var parseHeaders = function(){
                        if(parsedHeaders){return;}
                        parsedHeaders = {};
                        $.each(responseHeaders.split("\n"), function(i, headerLine){
                            var delimiter = headerLine.indexOf(":");
                            parsedHeaders[headerLine.substr(0, delimiter)] = headerLine.substr(delimiter + 2);
                        });
                    };
                    $.extend(cache[o.xhrID], {
                        getAllResponseHeaders: function() {return responseHeaders;},
                        getResponseHeader: function(name) {
                            parseHeaders();
                            return (name in parsedHeaders) ? parsedHeaders[name] : null;
                        }
                    });
                }
            }
            origFn.call(context, data, status, xhr, o);
            $.event.trigger(this.name +'AjaxSuccess', [xhr, o, data]);
            if(o.domSuccessTrigger){
                $(o.domSuccessTrigger)
                    .trigger(this.name +'DOMSuccess', [data, o])
                    .trigger('DOMSuccess', [data, o])
                ;
            }
            xhr = null;
        },
        getData: function(id){
            if( id ){
                var ret = this.requests[id];
                if(!ret && this.opts.queue) {
                    ret = $.grep($(document).queue(this.qName), function(fn, i){
                        return (fn.xhrID === id);
                    })[0];
                }
                return ret;
            }
            return {
                requests: this.requests,
                queue: (this.opts.queue) ? $(document).queue(this.qName) : [],
                inProgress: this.inProgress
            };
        },
        abort: function(id){
            var xhr;
            if(id){
                xhr = this.getData(id);
                
                if(xhr && xhr.abort){
                    this.lastAbort = id;
                    xhr.abort();
                    this.lastAbort = false;
                } else {
                    $(document).queue(
                        this.qName, $.grep($(document).queue(this.qName), function(fn, i){
                            return (fn !== xhr);
                        })
                    );
                }
                xhr = null;
                return;
            }
            
            var that    = this,
                ids     = []
            ;
            $.each(this.requests, function(id){
                ids.push(id);
            });
            $.each(ids, function(i, id){
                that.abort(id);
            });
        },
        clear: function(shouldAbort){
            $(document).clearQueue(this.qName); 
            if(shouldAbort){
                this.abort();
            }
        }
    };
    $.manageAjax._manager.prototype.getXHR = $.manageAjax._manager.prototype.getData;
    $.manageAjax.defaults = {
        beforeCreate: $.noop,
        abort: $.noop,
        abortIsNoSuccess: true,
        maxRequests: 1,
        cacheResponse: false,
        async: true,
        domCompleteTrigger: false,
        domSuccessTrigger: false,
        preventDoubleRequests: true,
        queueDuplicateRequests: false,
        cacheTTL: -1,
        queue: false // true, false, clear
    };
    
    $.each($.manageAjax._manager.prototype, function(n, fn){
        if(n.indexOf('_') === 0 || !$.isFunction(fn)){return;}
        $.manageAjax[n] =  function(name, o){
            if(!managed[name]){
                if(n === 'add'){
                    $.manageAjax.create(name, o);
                } else {
                    return;
                }
            }
            var args = Array.prototype.slice.call(arguments, 1);
            managed[name][n].apply(managed[name], args);
        };
    });
    
})(jQuery);
﻿/* http://keith-wood.name/backgroundPos.html
   Background position animation for jQuery v1.1.0.
   Written by Keith Wood (kbwood{at}iinet.com.au) November 2010.
   Dual licensed under the GPL (http://dev.jquery.com/browser/trunk/jquery/GPL-LICENSE.txt) and 
   MIT (http://dev.jquery.com/browser/trunk/jquery/MIT-LICENSE.txt) licenses. 
   Please attribute the author if you use it. */
(function($){var g='bgPos';var h=!!$.Tween;if(h){$.Tween.propHooks['backgroundPosition']={get:function(a){return parseBackgroundPosition($(a.elem).css(a.prop))},set:function(a){setBackgroundPosition(a)}}}else{$.fx.step['backgroundPosition']=setBackgroundPosition};function parseBackgroundPosition(c){var d=(c||'').split(/ /);var e={center:'50%',left:'0%',right:'100%',top:'0%',bottom:'100%'};var f=function(a){var b=(e[d[a]]||d[a]||'50%').match(/^([+-]=)?([+-]?\d+(\.\d*)?)(.*)$/);d[a]=[b[1],parseFloat(b[2]),b[4]||'px']};if(d.length==1&&$.inArray(d[0],['top','bottom'])>-1){d[1]=d[0];d[0]='50%'}f(0);f(1);return d}function setBackgroundPosition(a){if(!a.set){initBackgroundPosition(a)}$(a.elem).css('background-position',((a.pos*(a.end[0][1]-a.start[0][1])+a.start[0][1])+a.end[0][2])+' '+((a.pos*(a.end[1][1]-a.start[1][1])+a.start[1][1])+a.end[1][2]))}function initBackgroundPosition(a){var b=$(a.elem);var c=b.data(g);b.css('backgroundPosition',c);a.start=parseBackgroundPosition(c);a.end=parseBackgroundPosition($.fn.jquery>='1.6'?a.end:a.options.curAnim['backgroundPosition']||a.options.curAnim['background-position']);for(var i=0;i<a.end.length;i++){if(a.end[i][0]){a.end[i][1]=a.start[i][1]+(a.end[i][0]=='-='?-1:+1)*a.end[i][1]}}a.set=true}$.fn.animate=function(e){return function(a,b,c,d){if(a['backgroundPosition']||a['background-position']){this.data(g,this.css('backgroundPosition')||'left top')}return e.apply(this,[a,b,c,d])}}($.fn.animate)})(jQuery);
/*
* Browser plugin for jQuery to enable qtip2 plugin,
* until we are able to get the latest release.
*/
(function( jQuery, window, undefined ) {
"use strict";

var matched, browser;

jQuery.uaMatch = function( ua ) {
    ua = ua.toLowerCase();

    var match = /(chrome)[ \/]([\w.]+)/.exec( ua ) ||
        /(webkit)[ \/]([\w.]+)/.exec( ua ) ||
        /(opera)(?:.*version|)[ \/]([\w.]+)/.exec( ua ) ||
        /(msie) ([\w.]+)/.exec( ua ) ||
        ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec( ua ) ||
        [];

    return {
        browser: match[ 1 ] || "",
        version: match[ 2 ] || "0"
    };
};

// Don't clobber any existing jQuery.browser in case it's different
if ( !jQuery.browser ) {
    matched = jQuery.uaMatch( window.navigator.userAgent );
    browser = {};

    if ( matched.browser ) {
        browser[ matched.browser ] = true;
        browser.version = matched.version;
    }

    // Chrome is Webkit, but Webkit is also Safari.
    if ( browser.chrome ) {
        browser.webkit = true;
    } else if ( browser.webkit ) {
        browser.safari = true;
    }

    jQuery.browser = browser;
}

})( jQuery, window );
/* qTip2 v2.2.0 tips viewport imagemap svg modal ie6 | qtip2.com | Licensed MIT, GPL | Sat Mar 15 2014 08:00:37 */

!function(a,b,c){!function(a){"use strict";"function"==typeof define&&define.amd?define(["jquery"],a):jQuery&&!jQuery.fn.qtip&&a(jQuery)}(function(d){"use strict";function e(a,b,c,e){this.id=c,this.target=a,this.tooltip=G,this.elements={target:a},this._id=T+"-"+c,this.timers={img:{}},this.options=b,this.plugins={},this.cache={event:{},target:d(),disabled:F,attr:e,onTooltip:F,lastClass:""},this.rendered=this.destroyed=this.disabled=this.waiting=this.hiddenDuringWait=this.positioning=this.triggering=F}function f(a){return a===G||"object"!==d.type(a)}function g(a){return!(d.isFunction(a)||a&&a.attr||a.length||"object"===d.type(a)&&(a.jquery||a.then))}function h(a){var b,c,e,h;return f(a)?F:(f(a.metadata)&&(a.metadata={type:a.metadata}),"content"in a&&(b=a.content,f(b)||b.jquery||b.done?b=a.content={text:c=g(b)?F:b}:c=b.text,"ajax"in b&&(e=b.ajax,h=e&&e.once!==F,delete b.ajax,b.text=function(a,b){var f=c||d(this).attr(b.options.content.attr)||"Loading...",g=d.ajax(d.extend({},e,{context:b})).then(e.success,G,e.error).then(function(a){return a&&h&&b.set("content.text",a),a},function(a,c,d){b.destroyed||0===a.status||b.set("content.text",c+": "+d)});return h?f:(b.set("content.text",f),g)}),"title"in b&&(f(b.title)||(b.button=b.title.button,b.title=b.title.text),g(b.title||F)&&(b.title=F))),"position"in a&&f(a.position)&&(a.position={my:a.position,at:a.position}),"show"in a&&f(a.show)&&(a.show=a.show.jquery?{target:a.show}:a.show===E?{ready:E}:{event:a.show}),"hide"in a&&f(a.hide)&&(a.hide=a.hide.jquery?{target:a.hide}:{event:a.hide}),"style"in a&&f(a.style)&&(a.style={classes:a.style}),d.each(S,function(){this.sanitize&&this.sanitize(a)}),a)}function i(a,b){for(var c,d=0,e=a,f=b.split(".");e=e[f[d++]];)d<f.length&&(c=e);return[c||a,f.pop()]}function j(a,b){var c,d,e;for(c in this.checks)for(d in this.checks[c])(e=new RegExp(d,"i").exec(a))&&(b.push(e),("builtin"===c||this.plugins[c])&&this.checks[c][d].apply(this.plugins[c]||this,b))}function k(a){return W.concat("").join(a?"-"+a+" ":" ")}function l(c){return c&&{type:c.type,pageX:c.pageX,pageY:c.pageY,target:c.target,relatedTarget:c.relatedTarget,scrollX:c.scrollX||a.pageXOffset||b.body.scrollLeft||b.documentElement.scrollLeft,scrollY:c.scrollY||a.pageYOffset||b.body.scrollTop||b.documentElement.scrollTop}||{}}function m(a,b){return b>0?setTimeout(d.proxy(a,this),b):(a.call(this),void 0)}function n(a){return this.tooltip.hasClass(bb)?F:(clearTimeout(this.timers.show),clearTimeout(this.timers.hide),this.timers.show=m.call(this,function(){this.toggle(E,a)},this.options.show.delay),void 0)}function o(a){if(this.tooltip.hasClass(bb))return F;var b=d(a.relatedTarget),c=b.closest(X)[0]===this.tooltip[0],e=b[0]===this.options.show.target[0];if(clearTimeout(this.timers.show),clearTimeout(this.timers.hide),this!==b[0]&&"mouse"===this.options.position.target&&c||this.options.hide.fixed&&/mouse(out|leave|move)/.test(a.type)&&(c||e))try{a.preventDefault(),a.stopImmediatePropagation()}catch(f){}else this.timers.hide=m.call(this,function(){this.toggle(F,a)},this.options.hide.delay,this)}function p(a){return this.tooltip.hasClass(bb)||!this.options.hide.inactive?F:(clearTimeout(this.timers.inactive),this.timers.inactive=m.call(this,function(){this.hide(a)},this.options.hide.inactive),void 0)}function q(a){this.rendered&&this.tooltip[0].offsetWidth>0&&this.reposition(a)}function r(a,c,e){d(b.body).delegate(a,(c.split?c:c.join(ib+" "))+ib,function(){var a=z.api[d.attr(this,V)];a&&!a.disabled&&e.apply(a,arguments)})}function s(a,c,f){var g,i,j,k,l,m=d(b.body),n=a[0]===b?m:a,o=a.metadata?a.metadata(f.metadata):G,p="html5"===f.metadata.type&&o?o[f.metadata.name]:G,q=a.data(f.metadata.name||"qtipopts");try{q="string"==typeof q?d.parseJSON(q):q}catch(r){}if(k=d.extend(E,{},z.defaults,f,"object"==typeof q?h(q):G,h(p||o)),i=k.position,k.id=c,"boolean"==typeof k.content.text){if(j=a.attr(k.content.attr),k.content.attr===F||!j)return F;k.content.text=j}if(i.container.length||(i.container=m),i.target===F&&(i.target=n),k.show.target===F&&(k.show.target=n),k.show.solo===E&&(k.show.solo=i.container.closest("body")),k.hide.target===F&&(k.hide.target=n),k.position.viewport===E&&(k.position.viewport=i.container),i.container=i.container.eq(0),i.at=new B(i.at,E),i.my=new B(i.my),a.data(T))if(k.overwrite)a.qtip("destroy",!0);else if(k.overwrite===F)return F;return a.attr(U,c),k.suppress&&(l=a.attr("title"))&&a.removeAttr("title").attr(db,l).attr("title",""),g=new e(a,k,c,!!j),a.data(T,g),a.one("remove.qtip-"+c+" removeqtip.qtip-"+c,function(){var a;(a=d(this).data(T))&&a.destroy(!0)}),g}function t(a){return a.charAt(0).toUpperCase()+a.slice(1)}function u(a,b){var d,e,f=b.charAt(0).toUpperCase()+b.slice(1),g=(b+" "+tb.join(f+" ")+f).split(" "),h=0;if(sb[b])return a.css(sb[b]);for(;d=g[h++];)if((e=a.css(d))!==c)return sb[b]=d,e}function v(a,b){return Math.ceil(parseFloat(u(a,b)))}function w(a,b){this._ns="tip",this.options=b,this.offset=b.offset,this.size=[b.width,b.height],this.init(this.qtip=a)}function x(a,b){this.options=b,this._ns="-modal",this.init(this.qtip=a)}function y(a){this._ns="ie6",this.init(this.qtip=a)}var z,A,B,C,D,E=!0,F=!1,G=null,H="x",I="y",J="width",K="height",L="top",M="left",N="bottom",O="right",P="center",Q="flipinvert",R="shift",S={},T="qtip",U="data-hasqtip",V="data-qtip-id",W=["ui-widget","ui-tooltip"],X="."+T,Y="click dblclick mousedown mouseup mousemove mouseleave mouseenter".split(" "),Z=T+"-fixed",$=T+"-default",_=T+"-focus",ab=T+"-hover",bb=T+"-disabled",cb="_replacedByqTip",db="oldtitle",eb={ie:function(){for(var a=3,c=b.createElement("div");(c.innerHTML="<!--[if gt IE "+ ++a+"]><i></i><![endif]-->")&&c.getElementsByTagName("i")[0];);return a>4?a:0/0}(),iOS:parseFloat((""+(/CPU.*OS ([0-9_]{1,5})|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent)||[0,""])[1]).replace("undefined","3_2").replace("_",".").replace("_",""))||F};A=e.prototype,A._when=function(a){return d.when.apply(d,a)},A.render=function(a){if(this.rendered||this.destroyed)return this;var b,c=this,e=this.options,f=this.cache,g=this.elements,h=e.content.text,i=e.content.title,j=e.content.button,k=e.position,l=("."+this._id+" ",[]);return d.attr(this.target[0],"aria-describedby",this._id),this.tooltip=g.tooltip=b=d("<div/>",{id:this._id,"class":[T,$,e.style.classes,T+"-pos-"+e.position.my.abbrev()].join(" "),width:e.style.width||"",height:e.style.height||"",tracking:"mouse"===k.target&&k.adjust.mouse,role:"alert","aria-live":"polite","aria-atomic":F,"aria-describedby":this._id+"-content","aria-hidden":E}).toggleClass(bb,this.disabled).attr(V,this.id).data(T,this).appendTo(k.container).append(g.content=d("<div />",{"class":T+"-content",id:this._id+"-content","aria-atomic":E})),this.rendered=-1,this.positioning=E,i&&(this._createTitle(),d.isFunction(i)||l.push(this._updateTitle(i,F))),j&&this._createButton(),d.isFunction(h)||l.push(this._updateContent(h,F)),this.rendered=E,this._setWidget(),d.each(S,function(a){var b;"render"===this.initialize&&(b=this(c))&&(c.plugins[a]=b)}),this._unassignEvents(),this._assignEvents(),this._when(l).then(function(){c._trigger("render"),c.positioning=F,c.hiddenDuringWait||!e.show.ready&&!a||c.toggle(E,f.event,F),c.hiddenDuringWait=F}),z.api[this.id]=this,this},A.destroy=function(a){function b(){if(!this.destroyed){this.destroyed=E;var a=this.target,b=a.attr(db);this.rendered&&this.tooltip.stop(1,0).find("*").remove().end().remove(),d.each(this.plugins,function(){this.destroy&&this.destroy()}),clearTimeout(this.timers.show),clearTimeout(this.timers.hide),this._unassignEvents(),a.removeData(T).removeAttr(V).removeAttr(U).removeAttr("aria-describedby"),this.options.suppress&&b&&a.attr("title",b).removeAttr(db),this._unbind(a),this.options=this.elements=this.cache=this.timers=this.plugins=this.mouse=G,delete z.api[this.id]}}return this.destroyed?this.target:(a===E&&"hide"!==this.triggering||!this.rendered?b.call(this):(this.tooltip.one("tooltiphidden",d.proxy(b,this)),!this.triggering&&this.hide()),this.target)},C=A.checks={builtin:{"^id$":function(a,b,c,e){var f=c===E?z.nextid:c,g=T+"-"+f;f!==F&&f.length>0&&!d("#"+g).length?(this._id=g,this.rendered&&(this.tooltip[0].id=this._id,this.elements.content[0].id=this._id+"-content",this.elements.title[0].id=this._id+"-title")):a[b]=e},"^prerender":function(a,b,c){c&&!this.rendered&&this.render(this.options.show.ready)},"^content.text$":function(a,b,c){this._updateContent(c)},"^content.attr$":function(a,b,c,d){this.options.content.text===this.target.attr(d)&&this._updateContent(this.target.attr(c))},"^content.title$":function(a,b,c){return c?(c&&!this.elements.title&&this._createTitle(),this._updateTitle(c),void 0):this._removeTitle()},"^content.button$":function(a,b,c){this._updateButton(c)},"^content.title.(text|button)$":function(a,b,c){this.set("content."+b,c)},"^position.(my|at)$":function(a,b,c){"string"==typeof c&&(a[b]=new B(c,"at"===b))},"^position.container$":function(a,b,c){this.rendered&&this.tooltip.appendTo(c)},"^show.ready$":function(a,b,c){c&&(!this.rendered&&this.render(E)||this.toggle(E))},"^style.classes$":function(a,b,c,d){this.rendered&&this.tooltip.removeClass(d).addClass(c)},"^style.(width|height)":function(a,b,c){this.rendered&&this.tooltip.css(b,c)},"^style.widget|content.title":function(){this.rendered&&this._setWidget()},"^style.def":function(a,b,c){this.rendered&&this.tooltip.toggleClass($,!!c)},"^events.(render|show|move|hide|focus|blur)$":function(a,b,c){this.rendered&&this.tooltip[(d.isFunction(c)?"":"un")+"bind"]("tooltip"+b,c)},"^(show|hide|position).(event|target|fixed|inactive|leave|distance|viewport|adjust)":function(){if(this.rendered){var a=this.options.position;this.tooltip.attr("tracking","mouse"===a.target&&a.adjust.mouse),this._unassignEvents(),this._assignEvents()}}}},A.get=function(a){if(this.destroyed)return this;var b=i(this.options,a.toLowerCase()),c=b[0][b[1]];return c.precedance?c.string():c};var fb=/^position\.(my|at|adjust|target|container|viewport)|style|content|show\.ready/i,gb=/^prerender|show\.ready/i;A.set=function(a,b){if(this.destroyed)return this;{var c,e=this.rendered,f=F,g=this.options;this.checks}return"string"==typeof a?(c=a,a={},a[c]=b):a=d.extend({},a),d.each(a,function(b,c){if(e&&gb.test(b))return delete a[b],void 0;var h,j=i(g,b.toLowerCase());h=j[0][j[1]],j[0][j[1]]=c&&c.nodeType?d(c):c,f=fb.test(b)||f,a[b]=[j[0],j[1],c,h]}),h(g),this.positioning=E,d.each(a,d.proxy(j,this)),this.positioning=F,this.rendered&&this.tooltip[0].offsetWidth>0&&f&&this.reposition("mouse"===g.position.target?G:this.cache.event),this},A._update=function(a,b){var c=this,e=this.cache;return this.rendered&&a?(d.isFunction(a)&&(a=a.call(this.elements.target,e.event,this)||""),d.isFunction(a.then)?(e.waiting=E,a.then(function(a){return e.waiting=F,c._update(a,b)},G,function(a){return c._update(a,b)})):a===F||!a&&""!==a?F:(a.jquery&&a.length>0?b.empty().append(a.css({display:"block",visibility:"visible"})):b.html(a),this._waitForContent(b).then(function(a){a.images&&a.images.length&&c.rendered&&c.tooltip[0].offsetWidth>0&&c.reposition(e.event,!a.length)}))):F},A._waitForContent=function(a){var b=this.cache;return b.waiting=E,(d.fn.imagesLoaded?a.imagesLoaded():d.Deferred().resolve([])).done(function(){b.waiting=F}).promise()},A._updateContent=function(a,b){this._update(a,this.elements.content,b)},A._updateTitle=function(a,b){this._update(a,this.elements.title,b)===F&&this._removeTitle(F)},A._createTitle=function(){var a=this.elements,b=this._id+"-title";a.titlebar&&this._removeTitle(),a.titlebar=d("<div />",{"class":T+"-titlebar "+(this.options.style.widget?k("header"):"")}).append(a.title=d("<div />",{id:b,"class":T+"-title","aria-atomic":E})).insertBefore(a.content).delegate(".qtip-close","mousedown keydown mouseup keyup mouseout",function(a){d(this).toggleClass("ui-state-active ui-state-focus","down"===a.type.substr(-4))}).delegate(".qtip-close","mouseover mouseout",function(a){d(this).toggleClass("ui-state-hover","mouseover"===a.type)}),this.options.content.button&&this._createButton()},A._removeTitle=function(a){var b=this.elements;b.title&&(b.titlebar.remove(),b.titlebar=b.title=b.button=G,a!==F&&this.reposition())},A.reposition=function(c,e){if(!this.rendered||this.positioning||this.destroyed)return this;this.positioning=E;var f,g,h=this.cache,i=this.tooltip,j=this.options.position,k=j.target,l=j.my,m=j.at,n=j.viewport,o=j.container,p=j.adjust,q=p.method.split(" "),r=i.outerWidth(F),s=i.outerHeight(F),t=0,u=0,v=i.css("position"),w={left:0,top:0},x=i[0].offsetWidth>0,y=c&&"scroll"===c.type,z=d(a),A=o[0].ownerDocument,B=this.mouse;if(d.isArray(k)&&2===k.length)m={x:M,y:L},w={left:k[0],top:k[1]};else if("mouse"===k)m={x:M,y:L},!B||!B.pageX||!p.mouse&&c&&c.pageX?c&&c.pageX||((!p.mouse||this.options.show.distance)&&h.origin&&h.origin.pageX?c=h.origin:(!c||c&&("resize"===c.type||"scroll"===c.type))&&(c=h.event)):c=B,"static"!==v&&(w=o.offset()),A.body.offsetWidth!==(a.innerWidth||A.documentElement.clientWidth)&&(g=d(b.body).offset()),w={left:c.pageX-w.left+(g&&g.left||0),top:c.pageY-w.top+(g&&g.top||0)},p.mouse&&y&&B&&(w.left-=(B.scrollX||0)-z.scrollLeft(),w.top-=(B.scrollY||0)-z.scrollTop());else{if("event"===k?c&&c.target&&"scroll"!==c.type&&"resize"!==c.type?h.target=d(c.target):c.target||(h.target=this.elements.target):"event"!==k&&(h.target=d(k.jquery?k:this.elements.target)),k=h.target,k=d(k).eq(0),0===k.length)return this;k[0]===b||k[0]===a?(t=eb.iOS?a.innerWidth:k.width(),u=eb.iOS?a.innerHeight:k.height(),k[0]===a&&(w={top:(n||k).scrollTop(),left:(n||k).scrollLeft()})):S.imagemap&&k.is("area")?f=S.imagemap(this,k,m,S.viewport?q:F):S.svg&&k&&k[0].ownerSVGElement?f=S.svg(this,k,m,S.viewport?q:F):(t=k.outerWidth(F),u=k.outerHeight(F),w=k.offset()),f&&(t=f.width,u=f.height,g=f.offset,w=f.position),w=this.reposition.offset(k,w,o),(eb.iOS>3.1&&eb.iOS<4.1||eb.iOS>=4.3&&eb.iOS<4.33||!eb.iOS&&"fixed"===v)&&(w.left-=z.scrollLeft(),w.top-=z.scrollTop()),(!f||f&&f.adjustable!==F)&&(w.left+=m.x===O?t:m.x===P?t/2:0,w.top+=m.y===N?u:m.y===P?u/2:0)}return w.left+=p.x+(l.x===O?-r:l.x===P?-r/2:0),w.top+=p.y+(l.y===N?-s:l.y===P?-s/2:0),S.viewport?(w.adjusted=S.viewport(this,w,j,t,u,r,s),g&&w.adjusted.left&&(w.left+=g.left),g&&w.adjusted.top&&(w.top+=g.top)):w.adjusted={left:0,top:0},this._trigger("move",[w,n.elem||n],c)?(delete w.adjusted,e===F||!x||isNaN(w.left)||isNaN(w.top)||"mouse"===k||!d.isFunction(j.effect)?i.css(w):d.isFunction(j.effect)&&(j.effect.call(i,this,d.extend({},w)),i.queue(function(a){d(this).css({opacity:"",height:""}),eb.ie&&this.style.removeAttribute("filter"),a()})),this.positioning=F,this):this},A.reposition.offset=function(a,c,e){function f(a,b){c.left+=b*a.scrollLeft(),c.top+=b*a.scrollTop()}if(!e[0])return c;var g,h,i,j,k=d(a[0].ownerDocument),l=!!eb.ie&&"CSS1Compat"!==b.compatMode,m=e[0];do"static"!==(h=d.css(m,"position"))&&("fixed"===h?(i=m.getBoundingClientRect(),f(k,-1)):(i=d(m).position(),i.left+=parseFloat(d.css(m,"borderLeftWidth"))||0,i.top+=parseFloat(d.css(m,"borderTopWidth"))||0),c.left-=i.left+(parseFloat(d.css(m,"marginLeft"))||0),c.top-=i.top+(parseFloat(d.css(m,"marginTop"))||0),g||"hidden"===(j=d.css(m,"overflow"))||"visible"===j||(g=d(m)));while(m=m.offsetParent);return g&&(g[0]!==k[0]||l)&&f(g,1),c};var hb=(B=A.reposition.Corner=function(a,b){a=(""+a).replace(/([A-Z])/," $1").replace(/middle/gi,P).toLowerCase(),this.x=(a.match(/left|right/i)||a.match(/center/)||["inherit"])[0].toLowerCase(),this.y=(a.match(/top|bottom|center/i)||["inherit"])[0].toLowerCase(),this.forceY=!!b;var c=a.charAt(0);this.precedance="t"===c||"b"===c?I:H}).prototype;hb.invert=function(a,b){this[a]=this[a]===M?O:this[a]===O?M:b||this[a]},hb.string=function(){var a=this.x,b=this.y;return a===b?a:this.precedance===I||this.forceY&&"center"!==b?b+" "+a:a+" "+b},hb.abbrev=function(){var a=this.string().split(" ");return a[0].charAt(0)+(a[1]&&a[1].charAt(0)||"")},hb.clone=function(){return new B(this.string(),this.forceY)},A.toggle=function(a,c){var e=this.cache,f=this.options,g=this.tooltip;if(c){if(/over|enter/.test(c.type)&&/out|leave/.test(e.event.type)&&f.show.target.add(c.target).length===f.show.target.length&&g.has(c.relatedTarget).length)return this;e.event=l(c)}if(this.waiting&&!a&&(this.hiddenDuringWait=E),!this.rendered)return a?this.render(1):this;if(this.destroyed||this.disabled)return this;var h,i,j,k=a?"show":"hide",m=this.options[k],n=(this.options[a?"hide":"show"],this.options.position),o=this.options.content,p=this.tooltip.css("width"),q=this.tooltip.is(":visible"),r=a||1===m.target.length,s=!c||m.target.length<2||e.target[0]===c.target;return(typeof a).search("boolean|number")&&(a=!q),h=!g.is(":animated")&&q===a&&s,i=h?G:!!this._trigger(k,[90]),this.destroyed?this:(i!==F&&a&&this.focus(c),!i||h?this:(d.attr(g[0],"aria-hidden",!a),a?(e.origin=l(this.mouse),d.isFunction(o.text)&&this._updateContent(o.text,F),d.isFunction(o.title)&&this._updateTitle(o.title,F),!D&&"mouse"===n.target&&n.adjust.mouse&&(d(b).bind("mousemove."+T,this._storeMouse),D=E),p||g.css("width",g.outerWidth(F)),this.reposition(c,arguments[2]),p||g.css("width",""),m.solo&&("string"==typeof m.solo?d(m.solo):d(X,m.solo)).not(g).not(m.target).qtip("hide",d.Event("tooltipsolo"))):(clearTimeout(this.timers.show),delete e.origin,D&&!d(X+'[tracking="true"]:visible',m.solo).not(g).length&&(d(b).unbind("mousemove."+T),D=F),this.blur(c)),j=d.proxy(function(){a?(eb.ie&&g[0].style.removeAttribute("filter"),g.css("overflow",""),"string"==typeof m.autofocus&&d(this.options.show.autofocus,g).focus(),this.options.show.target.trigger("qtip-"+this.id+"-inactive")):g.css({display:"",visibility:"",opacity:"",left:"",top:""}),this._trigger(a?"visible":"hidden")},this),m.effect===F||r===F?(g[k](),j()):d.isFunction(m.effect)?(g.stop(1,1),m.effect.call(g,this),g.queue("fx",function(a){j(),a()})):g.fadeTo(90,a?1:0,j),a&&m.target.trigger("qtip-"+this.id+"-inactive"),this))},A.show=function(a){return this.toggle(E,a)},A.hide=function(a){return this.toggle(F,a)},A.focus=function(a){if(!this.rendered||this.destroyed)return this;var b=d(X),c=this.tooltip,e=parseInt(c[0].style.zIndex,10),f=z.zindex+b.length;return c.hasClass(_)||this._trigger("focus",[f],a)&&(e!==f&&(b.each(function(){this.style.zIndex>e&&(this.style.zIndex=this.style.zIndex-1)}),b.filter("."+_).qtip("blur",a)),c.addClass(_)[0].style.zIndex=f),this},A.blur=function(a){return!this.rendered||this.destroyed?this:(this.tooltip.removeClass(_),this._trigger("blur",[this.tooltip.css("zIndex")],a),this)},A.disable=function(a){return this.destroyed?this:("toggle"===a?a=!(this.rendered?this.tooltip.hasClass(bb):this.disabled):"boolean"!=typeof a&&(a=E),this.rendered&&this.tooltip.toggleClass(bb,a).attr("aria-disabled",a),this.disabled=!!a,this)},A.enable=function(){return this.disable(F)},A._createButton=function(){var a=this,b=this.elements,c=b.tooltip,e=this.options.content.button,f="string"==typeof e,g=f?e:"Close tooltip";b.button&&b.button.remove(),b.button=e.jquery?e:d("<a />",{"class":"qtip-close "+(this.options.style.widget?"":T+"-icon"),title:g,"aria-label":g}).prepend(d("<span />",{"class":"ui-icon ui-icon-close",html:"&times;"})),b.button.appendTo(b.titlebar||c).attr("role","button").click(function(b){return c.hasClass(bb)||a.hide(b),F})},A._updateButton=function(a){if(!this.rendered)return F;var b=this.elements.button;a?this._createButton():b.remove()},A._setWidget=function(){var a=this.options.style.widget,b=this.elements,c=b.tooltip,d=c.hasClass(bb);c.removeClass(bb),bb=a?"ui-state-disabled":"qtip-disabled",c.toggleClass(bb,d),c.toggleClass("ui-helper-reset "+k(),a).toggleClass($,this.options.style.def&&!a),b.content&&b.content.toggleClass(k("content"),a),b.titlebar&&b.titlebar.toggleClass(k("header"),a),b.button&&b.button.toggleClass(T+"-icon",!a)},A._storeMouse=function(a){(this.mouse=l(a)).type="mousemove"},A._bind=function(a,b,c,e,f){var g="."+this._id+(e?"-"+e:"");b.length&&d(a).bind((b.split?b:b.join(g+" "))+g,d.proxy(c,f||this))},A._unbind=function(a,b){d(a).unbind("."+this._id+(b?"-"+b:""))};var ib="."+T;d(function(){r(X,["mouseenter","mouseleave"],function(a){var b="mouseenter"===a.type,c=d(a.currentTarget),e=d(a.relatedTarget||a.target),f=this.options;b?(this.focus(a),c.hasClass(Z)&&!c.hasClass(bb)&&clearTimeout(this.timers.hide)):"mouse"===f.position.target&&f.hide.event&&f.show.target&&!e.closest(f.show.target[0]).length&&this.hide(a),c.toggleClass(ab,b)}),r("["+V+"]",Y,p)}),A._trigger=function(a,b,c){var e=d.Event("tooltip"+a);return e.originalEvent=c&&d.extend({},c)||this.cache.event||G,this.triggering=a,this.tooltip.trigger(e,[this].concat(b||[])),this.triggering=F,!e.isDefaultPrevented()},A._bindEvents=function(a,b,c,e,f,g){if(e.add(c).length===e.length){var h=[];b=d.map(b,function(b){var c=d.inArray(b,a);return c>-1?(h.push(a.splice(c,1)[0]),void 0):b}),h.length&&this._bind(c,h,function(a){var b=this.rendered?this.tooltip[0].offsetWidth>0:!1;(b?g:f).call(this,a)})}this._bind(c,a,f),this._bind(e,b,g)},A._assignInitialEvents=function(a){function b(a){return this.disabled||this.destroyed?F:(this.cache.event=l(a),this.cache.target=a?d(a.target):[c],clearTimeout(this.timers.show),this.timers.show=m.call(this,function(){this.render("object"==typeof a||e.show.ready)},e.show.delay),void 0)}var e=this.options,f=e.show.target,g=e.hide.target,h=e.show.event?d.trim(""+e.show.event).split(" "):[],i=e.hide.event?d.trim(""+e.hide.event).split(" "):[];/mouse(over|enter)/i.test(e.show.event)&&!/mouse(out|leave)/i.test(e.hide.event)&&i.push("mouseleave"),this._bind(f,"mousemove",function(a){this._storeMouse(a),this.cache.onTarget=E}),this._bindEvents(h,i,f,g,b,function(){clearTimeout(this.timers.show)}),(e.show.ready||e.prerender)&&b.call(this,a)},A._assignEvents=function(){var c=this,e=this.options,f=e.position,g=this.tooltip,h=e.show.target,i=e.hide.target,j=f.container,k=f.viewport,l=d(b),m=(d(b.body),d(a)),r=e.show.event?d.trim(""+e.show.event).split(" "):[],s=e.hide.event?d.trim(""+e.hide.event).split(" "):[];d.each(e.events,function(a,b){c._bind(g,"toggle"===a?["tooltipshow","tooltiphide"]:["tooltip"+a],b,null,g)}),/mouse(out|leave)/i.test(e.hide.event)&&"window"===e.hide.leave&&this._bind(l,["mouseout","blur"],function(a){/select|option/.test(a.target.nodeName)||a.relatedTarget||this.hide(a)}),e.hide.fixed?i=i.add(g.addClass(Z)):/mouse(over|enter)/i.test(e.show.event)&&this._bind(i,"mouseleave",function(){clearTimeout(this.timers.show)}),(""+e.hide.event).indexOf("unfocus")>-1&&this._bind(j.closest("html"),["mousedown","touchstart"],function(a){var b=d(a.target),c=this.rendered&&!this.tooltip.hasClass(bb)&&this.tooltip[0].offsetWidth>0,e=b.parents(X).filter(this.tooltip[0]).length>0;b[0]===this.target[0]||b[0]===this.tooltip[0]||e||this.target.has(b[0]).length||!c||this.hide(a)}),"number"==typeof e.hide.inactive&&(this._bind(h,"qtip-"+this.id+"-inactive",p),this._bind(i.add(g),z.inactiveEvents,p,"-inactive")),this._bindEvents(r,s,h,i,n,o),this._bind(h.add(g),"mousemove",function(a){if("number"==typeof e.hide.distance){var b=this.cache.origin||{},c=this.options.hide.distance,d=Math.abs;(d(a.pageX-b.pageX)>=c||d(a.pageY-b.pageY)>=c)&&this.hide(a)}this._storeMouse(a)}),"mouse"===f.target&&f.adjust.mouse&&(e.hide.event&&this._bind(h,["mouseenter","mouseleave"],function(a){this.cache.onTarget="mouseenter"===a.type}),this._bind(l,"mousemove",function(a){this.rendered&&this.cache.onTarget&&!this.tooltip.hasClass(bb)&&this.tooltip[0].offsetWidth>0&&this.reposition(a)})),(f.adjust.resize||k.length)&&this._bind(d.event.special.resize?k:m,"resize",q),f.adjust.scroll&&this._bind(m.add(f.container),"scroll",q)},A._unassignEvents=function(){var c=[this.options.show.target[0],this.options.hide.target[0],this.rendered&&this.tooltip[0],this.options.position.container[0],this.options.position.viewport[0],this.options.position.container.closest("html")[0],a,b];this._unbind(d([]).pushStack(d.grep(c,function(a){return"object"==typeof a})))},z=d.fn.qtip=function(a,b,e){var f=(""+a).toLowerCase(),g=G,i=d.makeArray(arguments).slice(1),j=i[i.length-1],k=this[0]?d.data(this[0],T):G;return!arguments.length&&k||"api"===f?k:"string"==typeof a?(this.each(function(){var a=d.data(this,T);if(!a)return E;if(j&&j.timeStamp&&(a.cache.event=j),!b||"option"!==f&&"options"!==f)a[f]&&a[f].apply(a,i);else{if(e===c&&!d.isPlainObject(b))return g=a.get(b),F;a.set(b,e)}}),g!==G?g:this):"object"!=typeof a&&arguments.length?void 0:(k=h(d.extend(E,{},a)),this.each(function(a){var b,c;return c=d.isArray(k.id)?k.id[a]:k.id,c=!c||c===F||c.length<1||z.api[c]?z.nextid++:c,b=s(d(this),c,k),b===F?E:(z.api[c]=b,d.each(S,function(){"initialize"===this.initialize&&this(b)}),b._assignInitialEvents(j),void 0)}))},d.qtip=e,z.api={},d.each({attr:function(a,b){if(this.length){var c=this[0],e="title",f=d.data(c,"qtip");if(a===e&&f&&"object"==typeof f&&f.options.suppress)return arguments.length<2?d.attr(c,db):(f&&f.options.content.attr===e&&f.cache.attr&&f.set("content.text",b),this.attr(db,b))}return d.fn["attr"+cb].apply(this,arguments)},clone:function(a){var b=(d([]),d.fn["clone"+cb].apply(this,arguments));return a||b.filter("["+db+"]").attr("title",function(){return d.attr(this,db)}).removeAttr(db),b}},function(a,b){if(!b||d.fn[a+cb])return E;var c=d.fn[a+cb]=d.fn[a];d.fn[a]=function(){return b.apply(this,arguments)||c.apply(this,arguments)}}),d.ui||(d["cleanData"+cb]=d.cleanData,d.cleanData=function(a){for(var b,c=0;(b=d(a[c])).length;c++)if(b.attr(U))try{b.triggerHandler("removeqtip")}catch(e){}d["cleanData"+cb].apply(this,arguments)}),z.version="2.2.0",z.nextid=0,z.inactiveEvents=Y,z.zindex=15e3,z.defaults={prerender:F,id:F,overwrite:E,suppress:E,content:{text:E,attr:"title",title:F,button:F},position:{my:"top left",at:"bottom right",target:F,container:F,viewport:F,adjust:{x:0,y:0,mouse:E,scroll:E,resize:E,method:"flipinvert flipinvert"},effect:function(a,b){d(this).animate(b,{duration:200,queue:F})}},show:{target:F,event:"mouseenter",effect:E,delay:90,solo:F,ready:F,autofocus:F},hide:{target:F,event:"mouseleave",effect:E,delay:0,fixed:F,inactive:F,leave:"window",distance:F},style:{classes:"",widget:F,width:F,height:F,def:E},events:{render:G,move:G,show:G,hide:G,toggle:G,visible:G,hidden:G,focus:G,blur:G}};var jb,kb="margin",lb="border",mb="color",nb="background-color",ob="transparent",pb=" !important",qb=!!b.createElement("canvas").getContext,rb=/rgba?\(0, 0, 0(, 0)?\)|transparent|#123456/i,sb={},tb=["Webkit","O","Moz","ms"];if(qb)var ub=a.devicePixelRatio||1,vb=function(){var a=b.createElement("canvas").getContext("2d");return a.backingStorePixelRatio||a.webkitBackingStorePixelRatio||a.mozBackingStorePixelRatio||a.msBackingStorePixelRatio||a.oBackingStorePixelRatio||1}(),wb=ub/vb;else var xb=function(a,b,c){return"<qtipvml:"+a+' xmlns="urn:schemas-microsoft.com:vml" class="qtip-vml" '+(b||"")+' style="behavior: url(#default#VML); '+(c||"")+'" />'};d.extend(w.prototype,{init:function(a){var b,c;c=this.element=a.elements.tip=d("<div />",{"class":T+"-tip"}).prependTo(a.tooltip),qb?(b=d("<canvas />").appendTo(this.element)[0].getContext("2d"),b.lineJoin="miter",b.miterLimit=1e5,b.save()):(b=xb("shape",'coordorigin="0,0"',"position:absolute;"),this.element.html(b+b),a._bind(d("*",c).add(c),["click","mousedown"],function(a){a.stopPropagation()},this._ns)),a._bind(a.tooltip,"tooltipmove",this.reposition,this._ns,this),this.create()},_swapDimensions:function(){this.size[0]=this.options.height,this.size[1]=this.options.width},_resetDimensions:function(){this.size[0]=this.options.width,this.size[1]=this.options.height},_useTitle:function(a){var b=this.qtip.elements.titlebar;return b&&(a.y===L||a.y===P&&this.element.position().top+this.size[1]/2+this.options.offset<b.outerHeight(E))},_parseCorner:function(a){var b=this.qtip.options.position.my;return a===F||b===F?a=F:a===E?a=new B(b.string()):a.string||(a=new B(a),a.fixed=E),a},_parseWidth:function(a,b,c){var d=this.qtip.elements,e=lb+t(b)+"Width";return(c?v(c,e):v(d.content,e)||v(this._useTitle(a)&&d.titlebar||d.content,e)||v(d.tooltip,e))||0},_parseRadius:function(a){var b=this.qtip.elements,c=lb+t(a.y)+t(a.x)+"Radius";return eb.ie<9?0:v(this._useTitle(a)&&b.titlebar||b.content,c)||v(b.tooltip,c)||0},_invalidColour:function(a,b,c){var d=a.css(b);return!d||c&&d===a.css(c)||rb.test(d)?F:d},_parseColours:function(a){var b=this.qtip.elements,c=this.element.css("cssText",""),e=lb+t(a[a.precedance])+t(mb),f=this._useTitle(a)&&b.titlebar||b.content,g=this._invalidColour,h=[];return h[0]=g(c,nb)||g(f,nb)||g(b.content,nb)||g(b.tooltip,nb)||c.css(nb),h[1]=g(c,e,mb)||g(f,e,mb)||g(b.content,e,mb)||g(b.tooltip,e,mb)||b.tooltip.css(e),d("*",c).add(c).css("cssText",nb+":"+ob+pb+";"+lb+":0"+pb+";"),h},_calculateSize:function(a){var b,c,d,e=a.precedance===I,f=this.options.width,g=this.options.height,h="c"===a.abbrev(),i=(e?f:g)*(h?.5:1),j=Math.pow,k=Math.round,l=Math.sqrt(j(i,2)+j(g,2)),m=[this.border/i*l,this.border/g*l];return m[2]=Math.sqrt(j(m[0],2)-j(this.border,2)),m[3]=Math.sqrt(j(m[1],2)-j(this.border,2)),b=l+m[2]+m[3]+(h?0:m[0]),c=b/l,d=[k(c*f),k(c*g)],e?d:d.reverse()},_calculateTip:function(a,b,c){c=c||1,b=b||this.size;var d=b[0]*c,e=b[1]*c,f=Math.ceil(d/2),g=Math.ceil(e/2),h={br:[0,0,d,e,d,0],bl:[0,0,d,0,0,e],tr:[0,e,d,0,d,e],tl:[0,0,0,e,d,e],tc:[0,e,f,0,d,e],bc:[0,0,d,0,f,e],rc:[0,0,d,g,0,e],lc:[d,0,d,e,0,g]};return h.lt=h.br,h.rt=h.bl,h.lb=h.tr,h.rb=h.tl,h[a.abbrev()]},_drawCoords:function(a,b){a.beginPath(),a.moveTo(b[0],b[1]),a.lineTo(b[2],b[3]),a.lineTo(b[4],b[5]),a.closePath()},create:function(){var a=this.corner=(qb||eb.ie)&&this._parseCorner(this.options.corner);return(this.enabled=!!this.corner&&"c"!==this.corner.abbrev())&&(this.qtip.cache.corner=a.clone(),this.update()),this.element.toggle(this.enabled),this.corner},update:function(b,c){if(!this.enabled)return this;var e,f,g,h,i,j,k,l,m=this.qtip.elements,n=this.element,o=n.children(),p=this.options,q=this.size,r=p.mimic,s=Math.round;b||(b=this.qtip.cache.corner||this.corner),r===F?r=b:(r=new B(r),r.precedance=b.precedance,"inherit"===r.x?r.x=b.x:"inherit"===r.y?r.y=b.y:r.x===r.y&&(r[b.precedance]=b[b.precedance])),f=r.precedance,b.precedance===H?this._swapDimensions():this._resetDimensions(),e=this.color=this._parseColours(b),e[1]!==ob?(l=this.border=this._parseWidth(b,b[b.precedance]),p.border&&1>l&&!rb.test(e[1])&&(e[0]=e[1]),this.border=l=p.border!==E?p.border:l):this.border=l=0,k=this.size=this._calculateSize(b),n.css({width:k[0],height:k[1],lineHeight:k[1]+"px"}),j=b.precedance===I?[s(r.x===M?l:r.x===O?k[0]-q[0]-l:(k[0]-q[0])/2),s(r.y===L?k[1]-q[1]:0)]:[s(r.x===M?k[0]-q[0]:0),s(r.y===L?l:r.y===N?k[1]-q[1]-l:(k[1]-q[1])/2)],qb?(g=o[0].getContext("2d"),g.restore(),g.save(),g.clearRect(0,0,6e3,6e3),h=this._calculateTip(r,q,wb),i=this._calculateTip(r,this.size,wb),o.attr(J,k[0]*wb).attr(K,k[1]*wb),o.css(J,k[0]).css(K,k[1]),this._drawCoords(g,i),g.fillStyle=e[1],g.fill(),g.translate(j[0]*wb,j[1]*wb),this._drawCoords(g,h),g.fillStyle=e[0],g.fill()):(h=this._calculateTip(r),h="m"+h[0]+","+h[1]+" l"+h[2]+","+h[3]+" "+h[4]+","+h[5]+" xe",j[2]=l&&/^(r|b)/i.test(b.string())?8===eb.ie?2:1:0,o.css({coordsize:k[0]+l+" "+(k[1]+l),antialias:""+(r.string().indexOf(P)>-1),left:j[0]-j[2]*Number(f===H),top:j[1]-j[2]*Number(f===I),width:k[0]+l,height:k[1]+l}).each(function(a){var b=d(this);b[b.prop?"prop":"attr"]({coordsize:k[0]+l+" "+(k[1]+l),path:h,fillcolor:e[0],filled:!!a,stroked:!a}).toggle(!(!l&&!a)),!a&&b.html(xb("stroke",'weight="'+2*l+'px" color="'+e[1]+'" miterlimit="1000" joinstyle="miter"'))})),a.opera&&setTimeout(function(){m.tip.css({display:"inline-block",visibility:"visible"})},1),c!==F&&this.calculate(b,k)},calculate:function(a,b){if(!this.enabled)return F;var c,e,f=this,g=this.qtip.elements,h=this.element,i=this.options.offset,j=(g.tooltip.hasClass("ui-widget"),{});return a=a||this.corner,c=a.precedance,b=b||this._calculateSize(a),e=[a.x,a.y],c===H&&e.reverse(),d.each(e,function(d,e){var h,k,l;e===P?(h=c===I?M:L,j[h]="50%",j[kb+"-"+h]=-Math.round(b[c===I?0:1]/2)+i):(h=f._parseWidth(a,e,g.tooltip),k=f._parseWidth(a,e,g.content),l=f._parseRadius(a),j[e]=Math.max(-f.border,d?k:i+(l>h?l:-h)))
}),j[a[c]]-=b[c===H?0:1],h.css({margin:"",top:"",bottom:"",left:"",right:""}).css(j),j},reposition:function(a,b,d){function e(a,b,c,d,e){a===R&&j.precedance===b&&k[d]&&j[c]!==P?j.precedance=j.precedance===H?I:H:a!==R&&k[d]&&(j[b]=j[b]===P?k[d]>0?d:e:j[b]===d?e:d)}function f(a,b,e){j[a]===P?p[kb+"-"+b]=o[a]=g[kb+"-"+b]-k[b]:(h=g[e]!==c?[k[b],-g[b]]:[-k[b],g[b]],(o[a]=Math.max(h[0],h[1]))>h[0]&&(d[b]-=k[b],o[b]=F),p[g[e]!==c?e:b]=o[a])}if(this.enabled){var g,h,i=b.cache,j=this.corner.clone(),k=d.adjusted,l=b.options.position.adjust.method.split(" "),m=l[0],n=l[1]||l[0],o={left:F,top:F,x:0,y:0},p={};this.corner.fixed!==E&&(e(m,H,I,M,O),e(n,I,H,L,N),j.string()===i.corner.string()||i.cornerTop===k.top&&i.cornerLeft===k.left||this.update(j,F)),g=this.calculate(j),g.right!==c&&(g.left=-g.right),g.bottom!==c&&(g.top=-g.bottom),g.user=this.offset,(o.left=m===R&&!!k.left)&&f(H,M,O),(o.top=n===R&&!!k.top)&&f(I,L,N),this.element.css(p).toggle(!(o.x&&o.y||j.x===P&&o.y||j.y===P&&o.x)),d.left-=g.left.charAt?g.user:m!==R||o.top||!o.left&&!o.top?g.left+this.border:0,d.top-=g.top.charAt?g.user:n!==R||o.left||!o.left&&!o.top?g.top+this.border:0,i.cornerLeft=k.left,i.cornerTop=k.top,i.corner=j.clone()}},destroy:function(){this.qtip._unbind(this.qtip.tooltip,this._ns),this.qtip.elements.tip&&this.qtip.elements.tip.find("*").remove().end().remove()}}),jb=S.tip=function(a){return new w(a,a.options.style.tip)},jb.initialize="render",jb.sanitize=function(a){if(a.style&&"tip"in a.style){var b=a.style.tip;"object"!=typeof b&&(b=a.style.tip={corner:b}),/string|boolean/i.test(typeof b.corner)||(b.corner=E)}},C.tip={"^position.my|style.tip.(corner|mimic|border)$":function(){this.create(),this.qtip.reposition()},"^style.tip.(height|width)$":function(a){this.size=[a.width,a.height],this.update(),this.qtip.reposition()},"^content.title|style.(classes|widget)$":function(){this.update()}},d.extend(E,z.defaults,{style:{tip:{corner:E,mimic:F,width:6,height:6,border:E,offset:0}}}),S.viewport=function(c,d,e,f,g,h,i){function j(a,b,c,e,f,g,h,i,j){var k=d[f],m=v[a],t=w[a],u=c===R,x=m===f?j:m===g?-j:-j/2,y=t===f?i:t===g?-i:-i/2,z=r[f]+s[f]-(o?0:n[f]),A=z-k,B=k+j-(h===J?p:q)-z,C=x-(v.precedance===a||m===v[b]?y:0)-(t===P?i/2:0);return u?(C=(m===f?1:-1)*x,d[f]+=A>0?A:B>0?-B:0,d[f]=Math.max(-n[f]+s[f],k-C,Math.min(Math.max(-n[f]+s[f]+(h===J?p:q),k+C),d[f],"center"===m?k-x:1e9))):(e*=c===Q?2:0,A>0&&(m!==f||B>0)?(d[f]-=C+e,l.invert(a,f)):B>0&&(m!==g||A>0)&&(d[f]-=(m===P?-C:C)+e,l.invert(a,g)),d[f]<r&&-d[f]>B&&(d[f]=k,l=v.clone())),d[f]-k}var k,l,m,n,o,p,q,r,s,t=e.target,u=c.elements.tooltip,v=e.my,w=e.at,x=e.adjust,y=x.method.split(" "),z=y[0],A=y[1]||y[0],B=e.viewport,C=e.container,D=c.cache,E={left:0,top:0};return B.jquery&&t[0]!==a&&t[0]!==b.body&&"none"!==x.method?(n=C.offset()||E,o="static"===C.css("position"),k="fixed"===u.css("position"),p=B[0]===a?B.width():B.outerWidth(F),q=B[0]===a?B.height():B.outerHeight(F),r={left:k?0:B.scrollLeft(),top:k?0:B.scrollTop()},s=B.offset()||E,("shift"!==z||"shift"!==A)&&(l=v.clone()),E={left:"none"!==z?j(H,I,z,x.x,M,O,J,f,h):0,top:"none"!==A?j(I,H,A,x.y,L,N,K,g,i):0},l&&D.lastClass!==(m=T+"-pos-"+l.abbrev())&&u.removeClass(c.cache.lastClass).addClass(c.cache.lastClass=m),E):E},S.polys={polygon:function(a,b){var c,d,e,f={width:0,height:0,position:{top:1e10,right:0,bottom:0,left:1e10},adjustable:F},g=0,h=[],i=1,j=1,k=0,l=0;for(g=a.length;g--;)c=[parseInt(a[--g],10),parseInt(a[g+1],10)],c[0]>f.position.right&&(f.position.right=c[0]),c[0]<f.position.left&&(f.position.left=c[0]),c[1]>f.position.bottom&&(f.position.bottom=c[1]),c[1]<f.position.top&&(f.position.top=c[1]),h.push(c);if(d=f.width=Math.abs(f.position.right-f.position.left),e=f.height=Math.abs(f.position.bottom-f.position.top),"c"===b.abbrev())f.position={left:f.position.left+f.width/2,top:f.position.top+f.height/2};else{for(;d>0&&e>0&&i>0&&j>0;)for(d=Math.floor(d/2),e=Math.floor(e/2),b.x===M?i=d:b.x===O?i=f.width-d:i+=Math.floor(d/2),b.y===L?j=e:b.y===N?j=f.height-e:j+=Math.floor(e/2),g=h.length;g--&&!(h.length<2);)k=h[g][0]-f.position.left,l=h[g][1]-f.position.top,(b.x===M&&k>=i||b.x===O&&i>=k||b.x===P&&(i>k||k>f.width-i)||b.y===L&&l>=j||b.y===N&&j>=l||b.y===P&&(j>l||l>f.height-j))&&h.splice(g,1);f.position={left:h[0][0],top:h[0][1]}}return f},rect:function(a,b,c,d){return{width:Math.abs(c-a),height:Math.abs(d-b),position:{left:Math.min(a,c),top:Math.min(b,d)}}},_angles:{tc:1.5,tr:7/4,tl:5/4,bc:.5,br:.25,bl:.75,rc:2,lc:1,c:0},ellipse:function(a,b,c,d,e){var f=S.polys._angles[e.abbrev()],g=0===f?0:c*Math.cos(f*Math.PI),h=d*Math.sin(f*Math.PI);return{width:2*c-Math.abs(g),height:2*d-Math.abs(h),position:{left:a+g,top:b+h},adjustable:F}},circle:function(a,b,c,d){return S.polys.ellipse(a,b,c,c,d)}},S.imagemap=function(a,b,c){b.jquery||(b=d(b));var e,f,g,h,i,j=b.attr("shape").toLowerCase().replace("poly","polygon"),k=d('img[usemap="#'+b.parent("map").attr("name")+'"]'),l=d.trim(b.attr("coords")),m=l.replace(/,$/,"").split(",");if(!k.length)return F;if("polygon"===j)h=S.polys.polygon(m,c);else{if(!S.polys[j])return F;for(g=-1,i=m.length,f=[];++g<i;)f.push(parseInt(m[g],10));h=S.polys[j].apply(this,f.concat(c))}return e=k.offset(),e.left+=Math.ceil((k.outerWidth(F)-k.width())/2),e.top+=Math.ceil((k.outerHeight(F)-k.height())/2),h.position.left+=e.left,h.position.top+=e.top,h},S.svg=function(a,c,e){for(var f,g,h,i,j,k,l,m,n,o,p,q=d(b),r=c[0],s=d(r.ownerSVGElement),t=1,u=1,v=!0;!r.getBBox;)r=r.parentNode;if(!r.getBBox||!r.parentNode)return F;f=s.attr("width")||s.width()||parseInt(s.css("width"),10),g=s.attr("height")||s.height()||parseInt(s.css("height"),10);var w=(parseInt(c.css("stroke-width"),10)||0)/2;switch(w&&(t+=w/f,u+=w/g),r.nodeName){case"ellipse":case"circle":o=S.polys.ellipse(r.cx.baseVal.value,r.cy.baseVal.value,(r.rx||r.r).baseVal.value+w,(r.ry||r.r).baseVal.value+w,e);break;case"line":case"polygon":case"polyline":for(n=r.points||[{x:r.x1.baseVal.value,y:r.y1.baseVal.value},{x:r.x2.baseVal.value,y:r.y2.baseVal.value}],o=[],m=-1,k=n.numberOfItems||n.length;++m<k;)l=n.getItem?n.getItem(m):n[m],o.push.apply(o,[l.x,l.y]);o=S.polys.polygon(o,e);break;default:o=r.getBoundingClientRect(),o={width:o.width,height:o.height,position:{left:o.left,top:o.top}},v=!1}return p=o.position,s=s[0],v&&(s.createSVGPoint&&(h=r.getScreenCTM(),n=s.createSVGPoint(),n.x=p.left,n.y=p.top,i=n.matrixTransform(h),p.left=i.x,p.top=i.y),s.viewBox&&(j=s.viewBox.baseVal)&&j.width&&j.height&&(t*=f/j.width,u*=g/j.height)),p.left+=q.scrollLeft(),p.top+=q.scrollTop(),o};var yb,zb,Ab="qtip-modal",Bb="."+Ab;zb=function(){function a(a){if(d.expr[":"].focusable)return d.expr[":"].focusable;var b,c,e,f=!isNaN(d.attr(a,"tabindex")),g=a.nodeName&&a.nodeName.toLowerCase();return"area"===g?(b=a.parentNode,c=b.name,a.href&&c&&"map"===b.nodeName.toLowerCase()?(e=d("img[usemap=#"+c+"]")[0],!!e&&e.is(":visible")):!1):/input|select|textarea|button|object/.test(g)?!a.disabled:"a"===g?a.href||f:f}function c(a){k.length<1&&a.length?a.not("body").blur():k.first().focus()}function e(a){if(i.is(":visible")){var b,e=d(a.target),h=f.tooltip,j=e.closest(X);b=j.length<1?F:parseInt(j[0].style.zIndex,10)>parseInt(h[0].style.zIndex,10),b||e.closest(X)[0]===h[0]||c(e),g=a.target===k[k.length-1]}}var f,g,h,i,j=this,k={};d.extend(j,{init:function(){return i=j.elem=d("<div />",{id:"qtip-overlay",html:"<div></div>",mousedown:function(){return F}}).hide(),d(b.body).bind("focusin"+Bb,e),d(b).bind("keydown"+Bb,function(a){f&&f.options.show.modal.escape&&27===a.keyCode&&f.hide(a)}),i.bind("click"+Bb,function(a){f&&f.options.show.modal.blur&&f.hide(a)}),j},update:function(b){f=b,k=b.options.show.modal.stealfocus!==F?b.tooltip.find("*").filter(function(){return a(this)}):[]},toggle:function(a,e,g){var k=(d(b.body),a.tooltip),l=a.options.show.modal,m=l.effect,n=e?"show":"hide",o=i.is(":visible"),p=d(Bb).filter(":visible:not(:animated)").not(k);return j.update(a),e&&l.stealfocus!==F&&c(d(":focus")),i.toggleClass("blurs",l.blur),e&&i.appendTo(b.body),i.is(":animated")&&o===e&&h!==F||!e&&p.length?j:(i.stop(E,F),d.isFunction(m)?m.call(i,e):m===F?i[n]():i.fadeTo(parseInt(g,10)||90,e?1:0,function(){e||i.hide()}),e||i.queue(function(a){i.css({left:"",top:""}),d(Bb).length||i.detach(),a()}),h=e,f.destroyed&&(f=G),j)}}),j.init()},zb=new zb,d.extend(x.prototype,{init:function(a){var b=a.tooltip;return this.options.on?(a.elements.overlay=zb.elem,b.addClass(Ab).css("z-index",z.modal_zindex+d(Bb).length),a._bind(b,["tooltipshow","tooltiphide"],function(a,c,e){var f=a.originalEvent;if(a.target===b[0])if(f&&"tooltiphide"===a.type&&/mouse(leave|enter)/.test(f.type)&&d(f.relatedTarget).closest(zb.elem[0]).length)try{a.preventDefault()}catch(g){}else(!f||f&&"tooltipsolo"!==f.type)&&this.toggle(a,"tooltipshow"===a.type,e)},this._ns,this),a._bind(b,"tooltipfocus",function(a,c){if(!a.isDefaultPrevented()&&a.target===b[0]){var e=d(Bb),f=z.modal_zindex+e.length,g=parseInt(b[0].style.zIndex,10);zb.elem[0].style.zIndex=f-1,e.each(function(){this.style.zIndex>g&&(this.style.zIndex-=1)}),e.filter("."+_).qtip("blur",a.originalEvent),b.addClass(_)[0].style.zIndex=f,zb.update(c);try{a.preventDefault()}catch(h){}}},this._ns,this),a._bind(b,"tooltiphide",function(a){a.target===b[0]&&d(Bb).filter(":visible").not(b).last().qtip("focus",a)},this._ns,this),void 0):this},toggle:function(a,b,c){return a&&a.isDefaultPrevented()?this:(zb.toggle(this.qtip,!!b,c),void 0)},destroy:function(){this.qtip.tooltip.removeClass(Ab),this.qtip._unbind(this.qtip.tooltip,this._ns),zb.toggle(this.qtip,F),delete this.qtip.elements.overlay}}),yb=S.modal=function(a){return new x(a,a.options.show.modal)},yb.sanitize=function(a){a.show&&("object"!=typeof a.show.modal?a.show.modal={on:!!a.show.modal}:"undefined"==typeof a.show.modal.on&&(a.show.modal.on=E))},z.modal_zindex=z.zindex-200,yb.initialize="render",C.modal={"^show.modal.(on|blur)$":function(){this.destroy(),this.init(),this.qtip.elems.overlay.toggle(this.qtip.tooltip[0].offsetWidth>0)}},d.extend(E,z.defaults,{show:{modal:{on:F,effect:E,blur:E,stealfocus:E,escape:E}}});var Cb,Db='<iframe class="qtip-bgiframe" frameborder="0" tabindex="-1" src="javascript:\'\';"  style="display:block; position:absolute; z-index:-1; filter:alpha(opacity=0); -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";"></iframe>';d.extend(y.prototype,{_scroll:function(){var b=this.qtip.elements.overlay;b&&(b[0].style.top=d(a).scrollTop()+"px")},init:function(c){var e=c.tooltip;d("select, object").length<1&&(this.bgiframe=c.elements.bgiframe=d(Db).appendTo(e),c._bind(e,"tooltipmove",this.adjustBGIFrame,this._ns,this)),this.redrawContainer=d("<div/>",{id:T+"-rcontainer"}).appendTo(b.body),c.elements.overlay&&c.elements.overlay.addClass("qtipmodal-ie6fix")&&(c._bind(a,["scroll","resize"],this._scroll,this._ns,this),c._bind(e,["tooltipshow"],this._scroll,this._ns,this)),this.redraw()},adjustBGIFrame:function(){var a,b,c=this.qtip.tooltip,d={height:c.outerHeight(F),width:c.outerWidth(F)},e=this.qtip.plugins.tip,f=this.qtip.elements.tip;b=parseInt(c.css("borderLeftWidth"),10)||0,b={left:-b,top:-b},e&&f&&(a="x"===e.corner.precedance?[J,M]:[K,L],b[a[1]]-=f[a[0]]()),this.bgiframe.css(b).css(d)},redraw:function(){if(this.qtip.rendered<1||this.drawing)return this;var a,b,c,d,e=this.qtip.tooltip,f=this.qtip.options.style,g=this.qtip.options.position.container;return this.qtip.drawing=1,f.height&&e.css(K,f.height),f.width?e.css(J,f.width):(e.css(J,"").appendTo(this.redrawContainer),b=e.width(),1>b%2&&(b+=1),c=e.css("maxWidth")||"",d=e.css("minWidth")||"",a=(c+d).indexOf("%")>-1?g.width()/100:0,c=(c.indexOf("%")>-1?a:1)*parseInt(c,10)||b,d=(d.indexOf("%")>-1?a:1)*parseInt(d,10)||0,b=c+d?Math.min(Math.max(b,d),c):b,e.css(J,Math.round(b)).appendTo(g)),this.drawing=0,this},destroy:function(){this.bgiframe&&this.bgiframe.remove(),this.qtip._unbind([a,this.qtip.tooltip],this._ns)}}),Cb=S.ie6=function(a){return 6===eb.ie?new y(a):F},Cb.initialize="render",C.ie6={"^content|style$":function(){this.redraw()}}})}(window,document);

/** @license
 *
 * SoundManager 2: JavaScript Sound for the Web
 * ----------------------------------------------
 * http://schillmania.com/projects/soundmanager2/
 *
 * Copyright (c) 2007, Scott Schiller. All rights reserved.
 * Code provided under the BSD License:
 * http://schillmania.com/projects/soundmanager2/license.txt
 *
 * V2.97a.20150601
 */
(function(h,g){function w(gb,w){function Z(b){return c.preferFlash&&A&&!c.ignoreFlash&&c.flash[b]!==g&&c.flash[b]}function r(b){return function(c){var d=this._s;return d&&d._a?b.call(this,c):null}}this.setupOptions={url:gb||null,flashVersion:8,debugMode:!0,debugFlash:!1,useConsole:!0,consoleOnly:!0,waitForWindowLoad:!1,bgColor:"#ffffff",useHighPerformance:!1,flashPollingInterval:null,html5PollingInterval:null,flashLoadTimeout:1E3,wmode:null,allowScriptAccess:"always",useFlashBlock:!1,useHTML5Audio:!0,
forceUseGlobalHTML5Audio:!1,ignoreMobileRestrictions:!1,html5Test:/^(probably|maybe)$/i,preferFlash:!1,noSWFCache:!1,idPrefix:"sound"};this.defaultOptions={autoLoad:!1,autoPlay:!1,from:null,loops:1,onid3:null,onload:null,whileloading:null,onplay:null,onpause:null,onresume:null,whileplaying:null,onposition:null,onstop:null,onfailure:null,onfinish:null,multiShot:!0,multiShotEvents:!1,position:null,pan:0,stream:!0,to:null,type:null,usePolicyFile:!1,volume:100};this.flash9Options={isMovieStar:null,usePeakData:!1,
useWaveformData:!1,useEQData:!1,onbufferchange:null,ondataerror:null};this.movieStarOptions={bufferTime:3,serverURL:null,onconnect:null,duration:null};this.audioFormats={mp3:{type:['audio/mpeg; codecs="mp3"',"audio/mpeg","audio/mp3","audio/MPA","audio/mpa-robust"],required:!0},mp4:{related:["aac","m4a","m4b"],type:['audio/mp4; codecs="mp4a.40.2"',"audio/aac","audio/x-m4a","audio/MP4A-LATM","audio/mpeg4-generic"],required:!1},ogg:{type:["audio/ogg; codecs=vorbis"],required:!1},opus:{type:["audio/ogg; codecs=opus",
"audio/opus"],required:!1},wav:{type:['audio/wav; codecs="1"',"audio/wav","audio/wave","audio/x-wav"],required:!1}};this.movieID="sm2-container";this.id=w||"sm2movie";this.debugID="soundmanager-debug";this.debugURLParam=/([#?&])debug=1/i;this.versionNumber="V2.97a.20150601";this.altURL=this.movieURL=this.version=null;this.enabled=this.swfLoaded=!1;this.oMC=null;this.sounds={};this.soundIDs=[];this.didFlashBlock=this.muted=!1;this.filePattern=null;this.filePatterns={flash8:/\.mp3(\?.*)?$/i,flash9:/\.mp3(\?.*)?$/i};
this.features={buffering:!1,peakData:!1,waveformData:!1,eqData:!1,movieStar:!1};this.sandbox={};this.html5={usingFlash:null};this.flash={};this.ignoreFlash=this.html5Only=!1;var N,c=this,Oa=null,k=null,aa,u=navigator.userAgent,Pa=h.location.href.toString(),p=document,pa,Qa,qa,m,y=[],O=!1,P=!1,l=!1,B=!1,ra=!1,Q,x,sa,ba,ta,F,H,I,Ra,ua,va,ca,J,da,G,wa,R,xa,ea,K,Sa,ya,Ta,za,Ua,S=null,Aa=null,T,Ba,L,fa,ga,q,U=!1,Ca=!1,Va,Wa,Xa,ha=0,V=null,ia,W=[],X,v=null,Ya,ja,Y,D,ka,Da,Za,t,hb=Array.prototype.slice,
z=!1,Ea,A,Fa,$a,C,la,ab=0,Ga,Ha=u.match(/(ipad|iphone|ipod)/i),Ia=u.match(/android/i),E=u.match(/msie/i),ib=u.match(/webkit/i),ma=u.match(/safari/i)&&!u.match(/chrome/i),Ja=u.match(/opera/i),na=u.match(/(mobile|pre\/|xoom)/i)||Ha||Ia,bb=!Pa.match(/usehtml5audio/i)&&!Pa.match(/sm2\-ignorebadua/i)&&ma&&!u.match(/silk/i)&&u.match(/OS X 10_6_([3-7])/i),Ka=p.hasFocus!==g?p.hasFocus():null,oa=ma&&(p.hasFocus===g||!p.hasFocus()),cb=!oa,db=/(mp3|mp4|mpa|m4a|m4b)/i,La=p.location?p.location.protocol.match(/http/i):
null,jb=La?"":"http://",eb=/^\s*audio\/(?:x-)?(?:mpeg4|aac|flv|mov|mp4||m4v|m4a|m4b|mp4v|3gp|3g2)\s*(?:$|;)/i,fb="mpeg4 aac flv mov mp4 m4v f4v m4a m4b mp4v 3gp 3g2".split(" "),kb=new RegExp("\\.("+fb.join("|")+")(\\?.*)?$","i");this.mimePattern=/^\s*audio\/(?:x-)?(?:mp(?:eg|3))\s*(?:$|;)/i;this.useAltURL=!La;var Ma;try{Ma=Audio!==g&&(Ja&&opera!==g&&10>opera.version()?new Audio(null):new Audio).canPlayType!==g}catch(lb){Ma=!1}this.hasHTML5=Ma;this.setup=function(b){var e=!c.url;b!==g&&l&&v&&c.ok();
sa(b);if(!z)if(na){if(!c.setupOptions.ignoreMobileRestrictions||c.setupOptions.forceUseGlobalHTML5Audio)W.push(J.globalHTML5),z=!0}else c.setupOptions.forceUseGlobalHTML5Audio&&(W.push(J.globalHTML5),z=!0);if(!Ga&&na)if(c.setupOptions.ignoreMobileRestrictions)W.push(J.ignoreMobile);else if(c.setupOptions.useHTML5Audio=!0,c.setupOptions.preferFlash=!1,Ha)c.ignoreFlash=!0;else if(Ia&&!u.match(/android\s2\.3/i)||!Ia)z=!0;b&&(e&&R&&b.url!==g&&c.beginDelayedInit(),R||b.url===g||"complete"!==p.readyState||
setTimeout(G,1));Ga=!0;return c};this.supported=this.ok=function(){return v?l&&!B:c.useHTML5Audio&&c.hasHTML5};this.getMovie=function(b){return aa(b)||p[b]||h[b]};this.createSound=function(b,e){function d(){a=fa(a);c.sounds[a.id]=new N(a);c.soundIDs.push(a.id);return c.sounds[a.id]}var a,f=null;if(!l||!c.ok())return!1;e!==g&&(b={id:b,url:e});a=x(b);a.url=ia(a.url);a.id===g&&(a.id=c.setupOptions.idPrefix+ab++);if(q(a.id,!0))return c.sounds[a.id];if(ja(a))f=d(),f._setup_html5(a);else{if(c.html5Only||
c.html5.usingFlash&&a.url&&a.url.match(/data\:/i))return d();8<m&&null===a.isMovieStar&&(a.isMovieStar=!!(a.serverURL||a.type&&a.type.match(eb)||a.url&&a.url.match(kb)));a=ga(a,void 0);f=d();8===m?k._createSound(a.id,a.loops||1,a.usePolicyFile):(k._createSound(a.id,a.url,a.usePeakData,a.useWaveformData,a.useEQData,a.isMovieStar,a.isMovieStar?a.bufferTime:!1,a.loops||1,a.serverURL,a.duration||null,a.autoPlay,!0,a.autoLoad,a.usePolicyFile),a.serverURL||(f.connected=!0,a.onconnect&&a.onconnect.apply(f)));
a.serverURL||!a.autoLoad&&!a.autoPlay||f.load(a)}!a.serverURL&&a.autoPlay&&f.play();return f};this.destroySound=function(b,e){if(!q(b))return!1;var d=c.sounds[b],a;d.stop();d._iO={};d.unload();for(a=0;a<c.soundIDs.length;a++)if(c.soundIDs[a]===b){c.soundIDs.splice(a,1);break}e||d.destruct(!0);delete c.sounds[b];return!0};this.load=function(b,e){return q(b)?c.sounds[b].load(e):!1};this.unload=function(b){return q(b)?c.sounds[b].unload():!1};this.onposition=this.onPosition=function(b,e,d,a){return q(b)?
c.sounds[b].onposition(e,d,a):!1};this.clearOnPosition=function(b,e,d){return q(b)?c.sounds[b].clearOnPosition(e,d):!1};this.start=this.play=function(b,e){var d=null,a=e&&!(e instanceof Object);if(!l||!c.ok())return!1;if(q(b,a))a&&(e={url:e});else{if(!a)return!1;a&&(e={url:e});e&&e.url&&(e.id=b,d=c.createSound(e).play())}null===d&&(d=c.sounds[b].play(e));return d};this.setPosition=function(b,e){return q(b)?c.sounds[b].setPosition(e):!1};this.stop=function(b){return q(b)?c.sounds[b].stop():!1};this.stopAll=
function(){for(var b in c.sounds)c.sounds.hasOwnProperty(b)&&c.sounds[b].stop()};this.pause=function(b){return q(b)?c.sounds[b].pause():!1};this.pauseAll=function(){var b;for(b=c.soundIDs.length-1;0<=b;b--)c.sounds[c.soundIDs[b]].pause()};this.resume=function(b){return q(b)?c.sounds[b].resume():!1};this.resumeAll=function(){var b;for(b=c.soundIDs.length-1;0<=b;b--)c.sounds[c.soundIDs[b]].resume()};this.togglePause=function(b){return q(b)?c.sounds[b].togglePause():!1};this.setPan=function(b,e){return q(b)?
c.sounds[b].setPan(e):!1};this.setVolume=function(b,e){var d,a;if(b===g||isNaN(b)||e!==g)return q(b)?c.sounds[b].setVolume(e):!1;d=0;for(a=c.soundIDs.length;d<a;d++)c.sounds[c.soundIDs[d]].setVolume(b)};this.mute=function(b){var e=0;b instanceof String&&(b=null);if(b)return q(b)?c.sounds[b].mute():!1;for(e=c.soundIDs.length-1;0<=e;e--)c.sounds[c.soundIDs[e]].mute();return c.muted=!0};this.muteAll=function(){c.mute()};this.unmute=function(b){b instanceof String&&(b=null);if(b)return q(b)?c.sounds[b].unmute():
!1;for(b=c.soundIDs.length-1;0<=b;b--)c.sounds[c.soundIDs[b]].unmute();c.muted=!1;return!0};this.unmuteAll=function(){c.unmute()};this.toggleMute=function(b){return q(b)?c.sounds[b].toggleMute():!1};this.getMemoryUse=function(){var b=0;k&&8!==m&&(b=parseInt(k._getMemoryUse(),10));return b};this.disable=function(b){var e;b===g&&(b=!1);if(B)return!1;B=!0;for(e=c.soundIDs.length-1;0<=e;e--)Ta(c.sounds[c.soundIDs[e]]);Q(b);t.remove(h,"load",H);return!0};this.canPlayMIME=function(b){var e;c.hasHTML5&&
(e=Y({type:b}));!e&&v&&(e=b&&c.ok()?!!(8<m&&b.match(eb)||b.match(c.mimePattern)):null);return e};this.canPlayURL=function(b){var e;c.hasHTML5&&(e=Y({url:b}));!e&&v&&(e=b&&c.ok()?!!b.match(c.filePattern):null);return e};this.canPlayLink=function(b){return b.type!==g&&b.type&&c.canPlayMIME(b.type)?!0:c.canPlayURL(b.href)};this.getSoundById=function(b,e){return b?c.sounds[b]:null};this.onready=function(b,c){if("function"===typeof b)c||(c=h),ta("onready",b,c),F();else throw T("needFunction","onready");
return!0};this.ontimeout=function(b,c){if("function"===typeof b)c||(c=h),ta("ontimeout",b,c),F({type:"ontimeout"});else throw T("needFunction","ontimeout");return!0};this._wD=this._writeDebug=function(b,c){return!0};this._debug=function(){};this.reboot=function(b,e){var d,a,f;for(d=c.soundIDs.length-1;0<=d;d--)c.sounds[c.soundIDs[d]].destruct();if(k)try{E&&(Aa=k.innerHTML),S=k.parentNode.removeChild(k)}catch(g){}Aa=S=v=k=null;c.enabled=R=l=U=Ca=O=P=B=z=c.swfLoaded=!1;c.soundIDs=[];c.sounds={};ab=
0;Ga=!1;if(b)y=[];else for(d in y)if(y.hasOwnProperty(d))for(a=0,f=y[d].length;a<f;a++)y[d][a].fired=!1;c.html5={usingFlash:null};c.flash={};c.html5Only=!1;c.ignoreFlash=!1;h.setTimeout(function(){e||c.beginDelayedInit()},20);return c};this.reset=function(){return c.reboot(!0,!0)};this.getMoviePercent=function(){return k&&"PercentLoaded"in k?k.PercentLoaded():null};this.beginDelayedInit=function(){ra=!0;G();setTimeout(function(){if(Ca)return!1;ea();da();return Ca=!0},20);I()};this.destruct=function(){c.disable(!0)};
N=function(b){var e,d,a=this,f,n,h,M,p,r,u=!1,l=[],v=0,y,B,w=null,A;d=e=null;this.sID=this.id=b.id;this.url=b.url;this._iO=this.instanceOptions=this.options=x(b);this.pan=this.options.pan;this.volume=this.options.volume;this.isHTML5=!1;this._a=null;A=this.url?!1:!0;this.id3={};this._debug=function(){};this.load=function(b){var e=null,d;b!==g?a._iO=x(b,a.options):(b=a.options,a._iO=b,w&&w!==a.url&&(a._iO.url=a.url,a.url=null));a._iO.url||(a._iO.url=a.url);a._iO.url=ia(a._iO.url);d=a.instanceOptions=
a._iO;if(!d.url&&!a.url)return a;if(d.url===a.url&&0!==a.readyState&&2!==a.readyState)return 3===a.readyState&&d.onload&&la(a,function(){d.onload.apply(a,[!!a.duration])}),a;a.loaded=!1;a.readyState=1;a.playState=0;a.id3={};if(ja(d))e=a._setup_html5(d),e._called_load||(a._html5_canplay=!1,a.url!==d.url&&(a._a.src=d.url,a.setPosition(0)),a._a.autobuffer="auto",a._a.preload="auto",a._a._called_load=!0);else{if(c.html5Only||a._iO.url&&a._iO.url.match(/data\:/i))return a;try{a.isHTML5=!1,a._iO=ga(fa(d)),
a._iO.autoPlay&&(a._iO.position||a._iO.from)&&(a._iO.autoPlay=!1),d=a._iO,8===m?k._load(a.id,d.url,d.stream,d.autoPlay,d.usePolicyFile):k._load(a.id,d.url,!!d.stream,!!d.autoPlay,d.loops||1,!!d.autoLoad,d.usePolicyFile)}catch(f){K({type:"SMSOUND_LOAD_JS_EXCEPTION",fatal:!0})}}a.url=d.url;return a};this.unload=function(){0!==a.readyState&&(a.isHTML5?(M(),a._a&&(a._a.pause(),w=ka(a._a))):8===m?k._unload(a.id,"about:blank"):k._unload(a.id),f());return a};this.destruct=function(b){a.isHTML5?(M(),a._a&&
(a._a.pause(),ka(a._a),z||h(),a._a._s=null,a._a=null)):(a._iO.onfailure=null,k._destroySound(a.id));b||c.destroySound(a.id,!0)};this.start=this.play=function(b,e){var d,f,n,h,Na;f=!0;f=null;e=e===g?!0:e;b||(b={});a.url&&(a._iO.url=a.url);a._iO=x(a._iO,a.options);a._iO=x(b,a._iO);a._iO.url=ia(a._iO.url);a.instanceOptions=a._iO;if(!a.isHTML5&&a._iO.serverURL&&!a.connected)return a.getAutoPlay()||a.setAutoPlay(!0),a;ja(a._iO)&&(a._setup_html5(a._iO),p());1!==a.playState||a.paused||(d=a._iO.multiShot,
d||(a.isHTML5&&a.setPosition(a._iO.position),f=a));if(null!==f)return f;b.url&&b.url!==a.url&&(a.readyState||a.isHTML5||8!==m||!A?a.load(a._iO):A=!1);a.loaded||(0===a.readyState?(a.isHTML5||c.html5Only?a.isHTML5?a.load(a._iO):f=a:(a._iO.autoPlay=!0,a.load(a._iO)),a.instanceOptions=a._iO):2===a.readyState&&(f=a));if(null!==f)return f;!a.isHTML5&&9===m&&0<a.position&&a.position===a.duration&&(b.position=0);if(a.paused&&0<=a.position&&(!a._iO.serverURL||0<a.position))a.resume();else{a._iO=x(b,a._iO);
if((!a.isHTML5&&null!==a._iO.position&&0<a._iO.position||null!==a._iO.from&&0<a._iO.from||null!==a._iO.to)&&0===a.instanceCount&&0===a.playState&&!a._iO.serverURL){d=function(){a._iO=x(b,a._iO);a.play(a._iO)};a.isHTML5&&!a._html5_canplay?(a.load({_oncanplay:d}),f=!1):a.isHTML5||a.loaded||a.readyState&&2===a.readyState||(a.load({onload:d}),f=!1);if(null!==f)return f;a._iO=B()}(!a.instanceCount||a._iO.multiShotEvents||a.isHTML5&&a._iO.multiShot&&!z||!a.isHTML5&&8<m&&!a.getAutoPlay())&&a.instanceCount++;
a._iO.onposition&&0===a.playState&&r(a);a.playState=1;a.paused=!1;a.position=a._iO.position===g||isNaN(a._iO.position)?0:a._iO.position;a.isHTML5||(a._iO=ga(fa(a._iO)));a._iO.onplay&&e&&(a._iO.onplay.apply(a),u=!0);a.setVolume(a._iO.volume,!0);a.setPan(a._iO.pan,!0);a.isHTML5?2>a.instanceCount?(p(),f=a._setup_html5(),a.setPosition(a._iO.position),f.play()):(n=new Audio(a._iO.url),h=function(){t.remove(n,"ended",h);a._onfinish(a);ka(n);n=null},Na=function(){t.remove(n,"canplay",Na);try{n.currentTime=
a._iO.position/1E3}catch(b){}n.play()},t.add(n,"ended",h),a._iO.volume!==g&&(n.volume=Math.max(0,Math.min(1,a._iO.volume/100))),a.muted&&(n.muted=!0),a._iO.position?t.add(n,"canplay",Na):n.play()):(f=k._start(a.id,a._iO.loops||1,9===m?a.position:a.position/1E3,a._iO.multiShot||!1),9!==m||f||a._iO.onplayerror&&a._iO.onplayerror.apply(a))}return a};this.stop=function(b){var c=a._iO;1===a.playState&&(a._onbufferchange(0),a._resetOnPosition(0),a.paused=!1,a.isHTML5||(a.playState=0),y(),c.to&&a.clearOnPosition(c.to),
a.isHTML5?a._a&&(b=a.position,a.setPosition(0),a.position=b,a._a.pause(),a.playState=0,a._onTimer(),M()):(k._stop(a.id,b),c.serverURL&&a.unload()),a.instanceCount=0,a._iO={},c.onstop&&c.onstop.apply(a));return a};this.setAutoPlay=function(b){a._iO.autoPlay=b;a.isHTML5||(k._setAutoPlay(a.id,b),b&&(a.instanceCount||1!==a.readyState||a.instanceCount++))};this.getAutoPlay=function(){return a._iO.autoPlay};this.setPosition=function(b){b===g&&(b=0);var c=a.isHTML5?Math.max(b,0):Math.min(a.duration||a._iO.duration,
Math.max(b,0));a.position=c;b=a.position/1E3;a._resetOnPosition(a.position);a._iO.position=c;if(!a.isHTML5)b=9===m?a.position:b,a.readyState&&2!==a.readyState&&k._setPosition(a.id,b,a.paused||!a.playState,a._iO.multiShot);else if(a._a){if(a._html5_canplay){if(a._a.currentTime!==b)try{a._a.currentTime=b,(0===a.playState||a.paused)&&a._a.pause()}catch(e){}}else if(b)return a;a.paused&&a._onTimer(!0)}return a};this.pause=function(b){if(a.paused||0===a.playState&&1!==a.readyState)return a;a.paused=!0;
a.isHTML5?(a._setup_html5().pause(),M()):(b||b===g)&&k._pause(a.id,a._iO.multiShot);a._iO.onpause&&a._iO.onpause.apply(a);return a};this.resume=function(){var b=a._iO;if(!a.paused)return a;a.paused=!1;a.playState=1;a.isHTML5?(a._setup_html5().play(),p()):(b.isMovieStar&&!b.serverURL&&a.setPosition(a.position),k._pause(a.id,b.multiShot));!u&&b.onplay?(b.onplay.apply(a),u=!0):b.onresume&&b.onresume.apply(a);return a};this.togglePause=function(){if(0===a.playState)return a.play({position:9!==m||a.isHTML5?
a.position/1E3:a.position}),a;a.paused?a.resume():a.pause();return a};this.setPan=function(b,c){b===g&&(b=0);c===g&&(c=!1);a.isHTML5||k._setPan(a.id,b);a._iO.pan=b;c||(a.pan=b,a.options.pan=b);return a};this.setVolume=function(b,e){b===g&&(b=100);e===g&&(e=!1);a.isHTML5?a._a&&(c.muted&&!a.muted&&(a.muted=!0,a._a.muted=!0),a._a.volume=Math.max(0,Math.min(1,b/100))):k._setVolume(a.id,c.muted&&!a.muted||a.muted?0:b);a._iO.volume=b;e||(a.volume=b,a.options.volume=b);return a};this.mute=function(){a.muted=
!0;a.isHTML5?a._a&&(a._a.muted=!0):k._setVolume(a.id,0);return a};this.unmute=function(){a.muted=!1;var b=a._iO.volume!==g;a.isHTML5?a._a&&(a._a.muted=!1):k._setVolume(a.id,b?a._iO.volume:a.options.volume);return a};this.toggleMute=function(){return a.muted?a.unmute():a.mute()};this.onposition=this.onPosition=function(b,c,e){l.push({position:parseInt(b,10),method:c,scope:e!==g?e:a,fired:!1});return a};this.clearOnPosition=function(a,b){var c;a=parseInt(a,10);if(isNaN(a))return!1;for(c=0;c<l.length;c++)a!==
l[c].position||b&&b!==l[c].method||(l[c].fired&&v--,l.splice(c,1))};this._processOnPosition=function(){var b,c;b=l.length;if(!b||!a.playState||v>=b)return!1;for(--b;0<=b;b--)c=l[b],!c.fired&&a.position>=c.position&&(c.fired=!0,v++,c.method.apply(c.scope,[c.position]));return!0};this._resetOnPosition=function(a){var b,c;b=l.length;if(!b)return!1;for(--b;0<=b;b--)c=l[b],c.fired&&a<=c.position&&(c.fired=!1,v--);return!0};B=function(){var b=a._iO,c=b.from,e=b.to,d,f;f=function(){a.clearOnPosition(e,f);
a.stop()};d=function(){if(null!==e&&!isNaN(e))a.onPosition(e,f)};null===c||isNaN(c)||(b.position=c,b.multiShot=!1,d());return b};r=function(){var b,c=a._iO.onposition;if(c)for(b in c)if(c.hasOwnProperty(b))a.onPosition(parseInt(b,10),c[b])};y=function(){var b,c=a._iO.onposition;if(c)for(b in c)c.hasOwnProperty(b)&&a.clearOnPosition(parseInt(b,10))};p=function(){a.isHTML5&&Va(a)};M=function(){a.isHTML5&&Wa(a)};f=function(b){b||(l=[],v=0);u=!1;a._hasTimer=null;a._a=null;a._html5_canplay=!1;a.bytesLoaded=
null;a.bytesTotal=null;a.duration=a._iO&&a._iO.duration?a._iO.duration:null;a.durationEstimate=null;a.buffered=[];a.eqData=[];a.eqData.left=[];a.eqData.right=[];a.failures=0;a.isBuffering=!1;a.instanceOptions={};a.instanceCount=0;a.loaded=!1;a.metadata={};a.readyState=0;a.muted=!1;a.paused=!1;a.peakData={left:0,right:0};a.waveformData={left:[],right:[]};a.playState=0;a.position=null;a.id3={}};f();this._onTimer=function(b){var c,f=!1,g={};if(a._hasTimer||b)return a._a&&(b||(0<a.playState||1===a.readyState)&&
!a.paused)&&(c=a._get_html5_duration(),c!==e&&(e=c,a.duration=c,f=!0),a.durationEstimate=a.duration,c=1E3*a._a.currentTime||0,c!==d&&(d=c,f=!0),(f||b)&&a._whileplaying(c,g,g,g,g)),f};this._get_html5_duration=function(){var b=a._iO;return(b=a._a&&a._a.duration?1E3*a._a.duration:b&&b.duration?b.duration:null)&&!isNaN(b)&&Infinity!==b?b:null};this._apply_loop=function(a,b){a.loop=1<b?"loop":""};this._setup_html5=function(b){b=x(a._iO,b);var c=z?Oa:a._a,e=decodeURI(b.url),d;z?e===decodeURI(Ea)&&(d=!0):
e===decodeURI(w)&&(d=!0);if(c){if(c._s)if(z)c._s&&c._s.playState&&!d&&c._s.stop();else if(!z&&e===decodeURI(w))return a._apply_loop(c,b.loops),c;d||(w&&f(!1),c.src=b.url,Ea=w=a.url=b.url,c._called_load=!1)}else b.autoLoad||b.autoPlay?(a._a=new Audio(b.url),a._a.load()):a._a=Ja&&10>opera.version()?new Audio(null):new Audio,c=a._a,c._called_load=!1,z&&(Oa=c);a.isHTML5=!0;a._a=c;c._s=a;n();a._apply_loop(c,b.loops);b.autoLoad||b.autoPlay?a.load():(c.autobuffer=!1,c.preload="auto");return c};n=function(){if(a._a._added_events)return!1;
var b;a._a._added_events=!0;for(b in C)C.hasOwnProperty(b)&&a._a&&a._a.addEventListener(b,C[b],!1);return!0};h=function(){var b;a._a._added_events=!1;for(b in C)C.hasOwnProperty(b)&&a._a&&a._a.removeEventListener(b,C[b],!1)};this._onload=function(b){var c=!!b||!a.isHTML5&&8===m&&a.duration;a.loaded=c;a.readyState=c?3:2;a._onbufferchange(0);a._iO.onload&&la(a,function(){a._iO.onload.apply(a,[c])});return!0};this._onbufferchange=function(b){if(0===a.playState||b&&a.isBuffering||!b&&!a.isBuffering)return!1;
a.isBuffering=1===b;a._iO.onbufferchange&&a._iO.onbufferchange.apply(a,[b]);return!0};this._onsuspend=function(){a._iO.onsuspend&&a._iO.onsuspend.apply(a);return!0};this._onfailure=function(b,c,e){a.failures++;if(a._iO.onfailure&&1===a.failures)a._iO.onfailure(b,c,e)};this._onwarning=function(b,c,e){if(a._iO.onwarning)a._iO.onwarning(b,c,e)};this._onfinish=function(){var b=a._iO.onfinish;a._onbufferchange(0);a._resetOnPosition(0);a.instanceCount&&(a.instanceCount--,a.instanceCount||(y(),a.playState=
0,a.paused=!1,a.instanceCount=0,a.instanceOptions={},a._iO={},M(),a.isHTML5&&(a.position=0)),(!a.instanceCount||a._iO.multiShotEvents)&&b&&la(a,function(){b.apply(a)}))};this._whileloading=function(b,c,e,d){var f=a._iO;a.bytesLoaded=b;a.bytesTotal=c;a.duration=Math.floor(e);a.bufferLength=d;a.durationEstimate=a.isHTML5||f.isMovieStar?a.duration:f.duration?a.duration>f.duration?a.duration:f.duration:parseInt(a.bytesTotal/a.bytesLoaded*a.duration,10);a.isHTML5||(a.buffered=[{start:0,end:a.duration}]);
(3!==a.readyState||a.isHTML5)&&f.whileloading&&f.whileloading.apply(a)};this._whileplaying=function(b,c,e,d,f){var n=a._iO;if(isNaN(b)||null===b)return!1;a.position=Math.max(0,b);a._processOnPosition();!a.isHTML5&&8<m&&(n.usePeakData&&c!==g&&c&&(a.peakData={left:c.leftPeak,right:c.rightPeak}),n.useWaveformData&&e!==g&&e&&(a.waveformData={left:e.split(","),right:d.split(",")}),n.useEQData&&f!==g&&f&&f.leftEQ&&(b=f.leftEQ.split(","),a.eqData=b,a.eqData.left=b,f.rightEQ!==g&&f.rightEQ&&(a.eqData.right=
f.rightEQ.split(","))));1===a.playState&&(a.isHTML5||8!==m||a.position||!a.isBuffering||a._onbufferchange(0),n.whileplaying&&n.whileplaying.apply(a));return!0};this._oncaptiondata=function(b){a.captiondata=b;a._iO.oncaptiondata&&a._iO.oncaptiondata.apply(a,[b])};this._onmetadata=function(b,c){var e={},d,f;d=0;for(f=b.length;d<f;d++)e[b[d]]=c[d];a.metadata=e;a._iO.onmetadata&&a._iO.onmetadata.call(a,a.metadata)};this._onid3=function(b,c){var e=[],d,f;d=0;for(f=b.length;d<f;d++)e[b[d]]=c[d];a.id3=x(a.id3,
e);a._iO.onid3&&a._iO.onid3.apply(a)};this._onconnect=function(b){b=1===b;if(a.connected=b)a.failures=0,q(a.id)&&(a.getAutoPlay()?a.play(g,a.getAutoPlay()):a._iO.autoLoad&&a.load()),a._iO.onconnect&&a._iO.onconnect.apply(a,[b])};this._ondataerror=function(b){0<a.playState&&a._iO.ondataerror&&a._iO.ondataerror.apply(a)}};xa=function(){return p.body||p.getElementsByTagName("div")[0]};aa=function(b){return p.getElementById(b)};x=function(b,e){var d=b||{},a,f;a=e===g?c.defaultOptions:e;for(f in a)a.hasOwnProperty(f)&&
d[f]===g&&(d[f]="object"!==typeof a[f]||null===a[f]?a[f]:x(d[f],a[f]));return d};la=function(b,c){b.isHTML5||8!==m?c():h.setTimeout(c,0)};ba={onready:1,ontimeout:1,defaultOptions:1,flash9Options:1,movieStarOptions:1};sa=function(b,e){var d,a=!0,f=e!==g,n=c.setupOptions;for(d in b)if(b.hasOwnProperty(d))if("object"!==typeof b[d]||null===b[d]||b[d]instanceof Array||b[d]instanceof RegExp)f&&ba[e]!==g?c[e][d]=b[d]:n[d]!==g?(c.setupOptions[d]=b[d],c[d]=b[d]):ba[d]===g?a=!1:c[d]instanceof Function?c[d].apply(c,
b[d]instanceof Array?b[d]:[b[d]]):c[d]=b[d];else if(ba[d]===g)a=!1;else return sa(b[d],d);return a};t=function(){function b(a){a=hb.call(a);var b=a.length;d?(a[1]="on"+a[1],3<b&&a.pop()):3===b&&a.push(!1);return a}function c(b,e){var g=b.shift(),h=[a[e]];if(d)g[h](b[0],b[1]);else g[h].apply(g,b)}var d=h.attachEvent,a={add:d?"attachEvent":"addEventListener",remove:d?"detachEvent":"removeEventListener"};return{add:function(){c(b(arguments),"add")},remove:function(){c(b(arguments),"remove")}}}();C={abort:r(function(){}),
canplay:r(function(){var b=this._s,c;if(b._html5_canplay)return!0;b._html5_canplay=!0;b._onbufferchange(0);c=b._iO.position===g||isNaN(b._iO.position)?null:b._iO.position/1E3;if(this.currentTime!==c)try{this.currentTime=c}catch(d){}b._iO._oncanplay&&b._iO._oncanplay()}),canplaythrough:r(function(){var b=this._s;b.loaded||(b._onbufferchange(0),b._whileloading(b.bytesLoaded,b.bytesTotal,b._get_html5_duration()),b._onload(!0))}),durationchange:r(function(){var b=this._s,c;c=b._get_html5_duration();isNaN(c)||
c===b.duration||(b.durationEstimate=b.duration=c)}),ended:r(function(){this._s._onfinish()}),error:r(function(){this._s._onload(!1)}),loadeddata:r(function(){var b=this._s;b._loaded||ma||(b.duration=b._get_html5_duration())}),loadedmetadata:r(function(){}),loadstart:r(function(){this._s._onbufferchange(1)}),play:r(function(){this._s._onbufferchange(0)}),playing:r(function(){this._s._onbufferchange(0)}),progress:r(function(b){var c=this._s,d,a,f=0,f=b.target.buffered;d=b.loaded||0;var g=b.total||1;
c.buffered=[];if(f&&f.length){d=0;for(a=f.length;d<a;d++)c.buffered.push({start:1E3*f.start(d),end:1E3*f.end(d)});f=1E3*(f.end(0)-f.start(0));d=Math.min(1,f/(1E3*b.target.duration))}isNaN(d)||(c._whileloading(d,g,c._get_html5_duration()),d&&g&&d===g&&C.canplaythrough.call(this,b))}),ratechange:r(function(){}),suspend:r(function(b){var c=this._s;C.progress.call(this,b);c._onsuspend()}),stalled:r(function(){}),timeupdate:r(function(){this._s._onTimer()}),waiting:r(function(){this._s._onbufferchange(1)})};
ja=function(b){return b&&(b.type||b.url||b.serverURL)?b.serverURL||b.type&&Z(b.type)?!1:b.type?Y({type:b.type}):Y({url:b.url})||c.html5Only||b.url.match(/data\:/i):!1};ka=function(b){var e;b&&(e=ma?"about:blank":c.html5.canPlayType("audio/wav")?"data:audio/wave;base64,/UklGRiYAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQIAAAD//w==":"about:blank",b.src=e,b._called_unload!==g&&(b._called_load=!1));z&&(Ea=null);return e};Y=function(b){if(!c.useHTML5Audio||!c.hasHTML5)return!1;var e=b.url||null;b=b.type||
null;var d=c.audioFormats,a;if(b&&c.html5[b]!==g)return c.html5[b]&&!Z(b);if(!D){D=[];for(a in d)d.hasOwnProperty(a)&&(D.push(a),d[a].related&&(D=D.concat(d[a].related)));D=new RegExp("\\.("+D.join("|")+")(\\?.*)?$","i")}(a=e?e.toLowerCase().match(D):null)&&a.length?a=a[1]:b&&(e=b.indexOf(";"),a=(-1!==e?b.substr(0,e):b).substr(6));a&&c.html5[a]!==g?e=c.html5[a]&&!Z(a):(b="audio/"+a,e=c.html5.canPlayType({type:b}),e=(c.html5[a]=e)&&c.html5[b]&&!Z(b));return e};Za=function(){function b(a){var b,d=b=
!1;if(!e||"function"!==typeof e.canPlayType)return b;if(a instanceof Array){h=0;for(b=a.length;h<b;h++)if(c.html5[a[h]]||e.canPlayType(a[h]).match(c.html5Test))d=!0,c.html5[a[h]]=!0,c.flash[a[h]]=!!a[h].match(db);b=d}else a=e&&"function"===typeof e.canPlayType?e.canPlayType(a):!1,b=!(!a||!a.match(c.html5Test));return b}if(!c.useHTML5Audio||!c.hasHTML5)return v=c.html5.usingFlash=!0,!1;var e=Audio!==g?Ja&&10>opera.version()?new Audio(null):new Audio:null,d,a,f={},n,h;n=c.audioFormats;for(d in n)if(n.hasOwnProperty(d)&&
(a="audio/"+d,f[d]=b(n[d].type),f[a]=f[d],d.match(db)?(c.flash[d]=!0,c.flash[a]=!0):(c.flash[d]=!1,c.flash[a]=!1),n[d]&&n[d].related))for(h=n[d].related.length-1;0<=h;h--)f["audio/"+n[d].related[h]]=f[d],c.html5[n[d].related[h]]=f[d],c.flash[n[d].related[h]]=f[d];f.canPlayType=e?b:null;c.html5=x(c.html5,f);c.html5.usingFlash=Ya();v=c.html5.usingFlash;return!0};J={};T=function(){};fa=function(b){8===m&&1<b.loops&&b.stream&&(b.stream=!1);return b};ga=function(b,c){b&&!b.usePolicyFile&&(b.onid3||b.usePeakData||
b.useWaveformData||b.useEQData)&&(b.usePolicyFile=!0);return b};pa=function(){return!1};Ta=function(b){for(var c in b)b.hasOwnProperty(c)&&"function"===typeof b[c]&&(b[c]=pa)};za=function(b){b===g&&(b=!1);(B||b)&&c.disable(b)};Ua=function(b){var e=null;if(b)if(b.match(/\.swf(\?.*)?$/i)){if(e=b.substr(b.toLowerCase().lastIndexOf(".swf?")+4))return b}else b.lastIndexOf("/")!==b.length-1&&(b+="/");b=(b&&-1!==b.lastIndexOf("/")?b.substr(0,b.lastIndexOf("/")+1):"./")+c.movieURL;c.noSWFCache&&(b+="?ts="+
(new Date).getTime());return b};va=function(){m=parseInt(c.flashVersion,10);8!==m&&9!==m&&(c.flashVersion=m=8);var b=c.debugMode||c.debugFlash?"_debug.swf":".swf";c.useHTML5Audio&&!c.html5Only&&c.audioFormats.mp4.required&&9>m&&(c.flashVersion=m=9);c.version=c.versionNumber+(c.html5Only?" (HTML5-only mode)":9===m?" (AS3/Flash 9)":" (AS2/Flash 8)");8<m?(c.defaultOptions=x(c.defaultOptions,c.flash9Options),c.features.buffering=!0,c.defaultOptions=x(c.defaultOptions,c.movieStarOptions),c.filePatterns.flash9=
new RegExp("\\.(mp3|"+fb.join("|")+")(\\?.*)?$","i"),c.features.movieStar=!0):c.features.movieStar=!1;c.filePattern=c.filePatterns[8!==m?"flash9":"flash8"];c.movieURL=(8===m?"soundmanager2.swf":"soundmanager2_flash9.swf").replace(".swf",b);c.features.peakData=c.features.waveformData=c.features.eqData=8<m};Sa=function(b,c){if(!k)return!1;k._setPolling(b,c)};ya=function(){};q=this.getSoundById;L=function(){var b=[];c.debugMode&&b.push("sm2_debug");c.debugFlash&&b.push("flash_debug");c.useHighPerformance&&
b.push("high_performance");return b.join(" ")};Ba=function(){T("fbHandler");var b=c.getMoviePercent(),e={type:"FLASHBLOCK"};if(c.html5Only)return!1;c.ok()?c.oMC&&(c.oMC.className=[L(),"movieContainer","swf_loaded"+(c.didFlashBlock?" swf_unblocked":"")].join(" ")):(v&&(c.oMC.className=L()+" movieContainer "+(null===b?"swf_timedout":"swf_error")),c.didFlashBlock=!0,F({type:"ontimeout",ignoreInit:!0,error:e}),K(e))};ta=function(b,c,d){y[b]===g&&(y[b]=[]);y[b].push({method:c,scope:d||null,fired:!1})};
F=function(b){b||(b={type:c.ok()?"onready":"ontimeout"});if(!l&&b&&!b.ignoreInit||"ontimeout"===b.type&&(c.ok()||B&&!b.ignoreInit))return!1;var e={success:b&&b.ignoreInit?c.ok():!B},d=b&&b.type?y[b.type]||[]:[],a=[],f,e=[e],g=v&&!c.ok();b.error&&(e[0].error=b.error);b=0;for(f=d.length;b<f;b++)!0!==d[b].fired&&a.push(d[b]);if(a.length)for(b=0,f=a.length;b<f;b++)a[b].scope?a[b].method.apply(a[b].scope,e):a[b].method.apply(this,e),g||(a[b].fired=!0);return!0};H=function(){h.setTimeout(function(){c.useFlashBlock&&
Ba();F();"function"===typeof c.onload&&c.onload.apply(h);c.waitForWindowLoad&&t.add(h,"load",H)},1)};Fa=function(){if(A!==g)return A;var b=!1,c=navigator,d=c.plugins,a,f=h.ActiveXObject;if(d&&d.length)(c=c.mimeTypes)&&c["application/x-shockwave-flash"]&&c["application/x-shockwave-flash"].enabledPlugin&&c["application/x-shockwave-flash"].enabledPlugin.description&&(b=!0);else if(f!==g&&!u.match(/MSAppHost/i)){try{a=new f("ShockwaveFlash.ShockwaveFlash")}catch(n){a=null}b=!!a}return A=b};Ya=function(){var b,
e,d=c.audioFormats;Ha&&u.match(/os (1|2|3_0|3_1)\s/i)?(c.hasHTML5=!1,c.html5Only=!0,c.oMC&&(c.oMC.style.display="none")):!c.useHTML5Audio||c.html5&&c.html5.canPlayType||(c.hasHTML5=!1);if(c.useHTML5Audio&&c.hasHTML5)for(e in X=!0,d)d.hasOwnProperty(e)&&d[e].required&&(c.html5.canPlayType(d[e].type)?c.preferFlash&&(c.flash[e]||c.flash[d[e].type])&&(b=!0):(X=!1,b=!0));c.ignoreFlash&&(b=!1,X=!0);c.html5Only=c.hasHTML5&&c.useHTML5Audio&&!b;return!c.html5Only};ia=function(b){var e,d,a=0;if(b instanceof
Array){e=0;for(d=b.length;e<d;e++)if(b[e]instanceof Object){if(c.canPlayMIME(b[e].type)){a=e;break}}else if(c.canPlayURL(b[e])){a=e;break}b[a].url&&(b[a]=b[a].url);b=b[a]}return b};Va=function(b){b._hasTimer||(b._hasTimer=!0,!na&&c.html5PollingInterval&&(null===V&&0===ha&&(V=setInterval(Xa,c.html5PollingInterval)),ha++))};Wa=function(b){b._hasTimer&&(b._hasTimer=!1,!na&&c.html5PollingInterval&&ha--)};Xa=function(){var b;if(null!==V&&!ha)return clearInterval(V),V=null,!1;for(b=c.soundIDs.length-1;0<=
b;b--)c.sounds[c.soundIDs[b]].isHTML5&&c.sounds[c.soundIDs[b]]._hasTimer&&c.sounds[c.soundIDs[b]]._onTimer()};K=function(b){b=b!==g?b:{};"function"===typeof c.onerror&&c.onerror.apply(h,[{type:b.type!==g?b.type:null}]);b.fatal!==g&&b.fatal&&c.disable()};$a=function(){if(!bb||!Fa())return!1;var b=c.audioFormats,e,d;for(d in b)if(b.hasOwnProperty(d)&&("mp3"===d||"mp4"===d)&&(c.html5[d]=!1,b[d]&&b[d].related))for(e=b[d].related.length-1;0<=e;e--)c.html5[b[d].related[e]]=!1};this._setSandboxType=function(b){};
this._externalInterfaceOK=function(b){if(c.swfLoaded)return!1;c.swfLoaded=!0;oa=!1;bb&&$a();setTimeout(qa,E?100:1)};ea=function(b,e){function d(a,b){return'<param name="'+a+'" value="'+b+'" />'}if(O&&P)return!1;if(c.html5Only)return va(),c.oMC=aa(c.movieID),qa(),P=O=!0,!1;var a=e||c.url,f=c.altURL||a,h=xa(),k=L(),m=null,m=p.getElementsByTagName("html")[0],l,r,q,m=m&&m.dir&&m.dir.match(/rtl/i);b=b===g?c.id:b;va();c.url=Ua(La?a:f);e=c.url;c.wmode=!c.wmode&&c.useHighPerformance?"transparent":c.wmode;
null!==c.wmode&&(u.match(/msie 8/i)||!E&&!c.useHighPerformance)&&navigator.platform.match(/win32|win64/i)&&(W.push(J.spcWmode),c.wmode=null);h={name:b,id:b,src:e,quality:"high",allowScriptAccess:c.allowScriptAccess,bgcolor:c.bgColor,pluginspage:jb+"www.macromedia.com/go/getflashplayer",title:"JS/Flash audio component (SoundManager 2)",type:"application/x-shockwave-flash",wmode:c.wmode,hasPriority:"true"};c.debugFlash&&(h.FlashVars="debug=1");c.wmode||delete h.wmode;if(E)a=p.createElement("div"),r=
['<object id="'+b+'" data="'+e+'" type="'+h.type+'" title="'+h.title+'" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0">',d("movie",e),d("AllowScriptAccess",c.allowScriptAccess),d("quality",h.quality),c.wmode?d("wmode",c.wmode):"",d("bgcolor",c.bgColor),d("hasPriority","true"),c.debugFlash?d("FlashVars",h.FlashVars):"","</object>"].join("");else for(l in a=p.createElement("embed"),h)h.hasOwnProperty(l)&&
a.setAttribute(l,h[l]);ya();k=L();if(h=xa())if(c.oMC=aa(c.movieID)||p.createElement("div"),c.oMC.id)q=c.oMC.className,c.oMC.className=(q?q+" ":"movieContainer")+(k?" "+k:""),c.oMC.appendChild(a),E&&(l=c.oMC.appendChild(p.createElement("div")),l.className="sm2-object-box",l.innerHTML=r),P=!0;else{c.oMC.id=c.movieID;c.oMC.className="movieContainer "+k;l=k=null;c.useFlashBlock||(c.useHighPerformance?k={position:"fixed",width:"8px",height:"8px",bottom:"0px",left:"0px",overflow:"hidden"}:(k={position:"absolute",
width:"6px",height:"6px",top:"-9999px",left:"-9999px"},m&&(k.left=Math.abs(parseInt(k.left,10))+"px")));ib&&(c.oMC.style.zIndex=1E4);if(!c.debugFlash)for(q in k)k.hasOwnProperty(q)&&(c.oMC.style[q]=k[q]);try{E||c.oMC.appendChild(a),h.appendChild(c.oMC),E&&(l=c.oMC.appendChild(p.createElement("div")),l.className="sm2-object-box",l.innerHTML=r),P=!0}catch(t){throw Error(T("domError")+" \n"+t.toString());}}return O=!0};da=function(){if(c.html5Only)return ea(),!1;if(k||!c.url)return!1;k=c.getMovie(c.id);
k||(S?(E?c.oMC.innerHTML=Aa:c.oMC.appendChild(S),S=null,O=!0):ea(c.id,c.url),k=c.getMovie(c.id));"function"===typeof c.oninitmovie&&setTimeout(c.oninitmovie,1);return!0};I=function(){setTimeout(Ra,1E3)};ua=function(){h.setTimeout(function(){c.setup({preferFlash:!1}).reboot();c.didFlashBlock=!0;c.beginDelayedInit()},1)};Ra=function(){var b,e=!1;if(!c.url||U)return!1;U=!0;t.remove(h,"load",I);if(A&&oa&&!Ka)return!1;l||(b=c.getMoviePercent(),0<b&&100>b&&(e=!0));setTimeout(function(){b=c.getMoviePercent();
if(e)return U=!1,h.setTimeout(I,1),!1;!l&&cb&&(null===b?c.useFlashBlock||0===c.flashLoadTimeout?c.useFlashBlock&&Ba():!c.useFlashBlock&&X?ua():F({type:"ontimeout",ignoreInit:!0,error:{type:"INIT_FLASHBLOCK"}}):0!==c.flashLoadTimeout&&(!c.useFlashBlock&&X?ua():za(!0)))},c.flashLoadTimeout)};ca=function(){if(Ka||!oa)return t.remove(h,"focus",ca),!0;Ka=cb=!0;U=!1;I();t.remove(h,"focus",ca);return!0};Q=function(b){if(l)return!1;if(c.html5Only)return l=!0,H(),!0;var e=!0,d;c.useFlashBlock&&c.flashLoadTimeout&&
!c.getMoviePercent()||(l=!0);d={type:!A&&v?"NO_FLASH":"INIT_TIMEOUT"};if(B||b)c.useFlashBlock&&c.oMC&&(c.oMC.className=L()+" "+(null===c.getMoviePercent()?"swf_timedout":"swf_error")),F({type:"ontimeout",error:d,ignoreInit:!0}),K(d),e=!1;B||(c.waitForWindowLoad&&!ra?t.add(h,"load",H):H());return e};Qa=function(){var b,e=c.setupOptions;for(b in e)e.hasOwnProperty(b)&&(c[b]===g?c[b]=e[b]:c[b]!==e[b]&&(c.setupOptions[b]=c[b]))};qa=function(){if(l)return!1;if(c.html5Only)return l||(t.remove(h,"load",
c.beginDelayedInit),c.enabled=!0,Q()),!0;da();try{k._externalInterfaceTest(!1),Sa(!0,c.flashPollingInterval||(c.useHighPerformance?10:50)),c.debugMode||k._disableDebug(),c.enabled=!0,c.html5Only||t.add(h,"unload",pa)}catch(b){return K({type:"JS_TO_FLASH_EXCEPTION",fatal:!0}),za(!0),Q(),!1}Q();t.remove(h,"load",c.beginDelayedInit);return!0};G=function(){if(R)return!1;R=!0;Qa();ya();!A&&c.hasHTML5&&c.setup({useHTML5Audio:!0,preferFlash:!1});Za();!A&&v&&(W.push(J.needFlash),c.setup({flashLoadTimeout:1}));
p.removeEventListener&&p.removeEventListener("DOMContentLoaded",G,!1);da();return!0};Da=function(){"complete"===p.readyState&&(G(),p.detachEvent("onreadystatechange",Da));return!0};wa=function(){ra=!0;G();t.remove(h,"load",wa)};Fa();t.add(h,"focus",ca);t.add(h,"load",I);t.add(h,"load",wa);p.addEventListener?p.addEventListener("DOMContentLoaded",G,!1):p.attachEvent?p.attachEvent("onreadystatechange",Da):K({type:"NO_DOM2_EVENTS",fatal:!0})}if(!h||!h.document)throw Error("SoundManager requires a browser with window and document objects.");
var N=null;h.SM2_DEFER!==g&&SM2_DEFER||(N=new w);"object"===typeof module&&module&&"object"===typeof module.exports?(module.exports.SoundManager=w,module.exports.soundManager=N):"function"===typeof define&&define.amd&&define(function(){return{constructor:w,getInstance:function(g){!h.soundManager&&g instanceof Function&&(g=g(w),g instanceof w&&(h.soundManager=g));return h.soundManager}}});h.SoundManager=w;h.soundManager=N})(window);

var addToHomeConfig = {
    animationIn: 'fade',
    animationOut: 'fade',
    lifespan: 5000,
    expire:43200,
    returningVisitor: true,
    touchIcon: true,
    message: 'Tap %icon to add AllMusic to your %device\'s home screen.'
};

/*!
 * Add to Homescreen v2.0.7 ~ Copyright (c) 2013 Matteo Spinelli, http://cubiq.org
 * Released under MIT license, http://cubiq.org/license
 */
var addToHome = (function (w) {
	var nav = w.navigator,
		isIDevice = 'platform' in nav && (/iphone|ipod|ipad/gi).test(nav.platform),
		isIPad,
		isRetina,
		isSafari,
		isStandalone,
		OSVersion,
		startX = 0,
		startY = 0,
		lastVisit = 0,
		isExpired,
		isSessionActive,
		isReturningVisitor,
		balloon,
		overrideChecks,

		positionInterval,
		closeTimeout,

		options = {
			autostart: true,			// Automatically open the balloon
			returningVisitor: false,	// Show the balloon to returning visitors only (setting this to true is HIGHLY RECCOMENDED)
			animationIn: 'drop',		// drop || bubble || fade
			animationOut: 'fade',		// drop || bubble || fade
			startDelay: 2000,			// 2 seconds from page load before the balloon appears
			lifespan: 15000,			// 15 seconds before it is automatically destroyed
			bottomOffset: 14,			// Distance of the balloon from bottom
			expire: 0,					// Minutes to wait before showing the popup again (0 = always displayed)
			message: '',				// Customize your message or force a language ('' = automatic)
			touchIcon: false,			// Display the touch icon
			arrow: true,				// Display the balloon arrow
			hookOnLoad: true,			// Should we hook to onload event? (really advanced usage)
			closeButton: true,			// Let the user close the balloon
			iterations: 100				// Internal/debug use
		},

		intl = {
			ar:    '<span dir="rtl">قم بتثبيت هذا التطبيق على <span dir="ltr">%device:</span>انقر<span dir="ltr">%icon</span> ،<strong>ثم اضفه الى الشاشة الرئيسية.</strong></span>',
			ca_es: 'Per instal·lar aquesta aplicació al vostre %device premeu %icon i llavors <strong>Afegir a pantalla d\'inici</strong>.',
			cs_cz: 'Pro instalaci aplikace na Váš %device, stiskněte %icon a v nabídce <strong>Přidat na plochu</strong>.',
			da_dk: 'Tilføj denne side til din %device: tryk på %icon og derefter <strong>Føj til hjemmeskærm</strong>.',
			de_de: 'Installieren Sie diese App auf Ihrem %device: %icon antippen und dann <strong>Zum Home-Bildschirm</strong>.',
			el_gr: 'Εγκαταστήσετε αυτήν την Εφαρμογή στήν συσκευή σας %device: %icon μετά πατάτε <strong>Προσθήκη σε Αφετηρία</strong>.',
			en_us: 'Install this web app on your %device: tap %icon and then <strong>Add to Home Screen</strong>.',
			es_es: 'Para instalar esta app en su %device, pulse %icon y seleccione <strong>Añadir a pantalla de inicio</strong>.',
			fi_fi: 'Asenna tämä web-sovellus laitteeseesi %device: paina %icon ja sen jälkeen valitse <strong>Lisää Koti-valikkoon</strong>.',
			fr_fr: 'Ajoutez cette application sur votre %device en cliquant sur %icon, puis <strong>Ajouter à l\'écran d\'accueil</strong>.',
			he_il: '<span dir="rtl">התקן אפליקציה זו על ה-%device שלך: הקש %icon ואז <strong>הוסף למסך הבית</strong>.</span>',
			hr_hr: 'Instaliraj ovu aplikaciju na svoj %device: klikni na %icon i odaberi <strong>Dodaj u početni zaslon</strong>.',
			hu_hu: 'Telepítse ezt a web-alkalmazást az Ön %device-jára: nyomjon a %icon-ra majd a <strong>Főképernyőhöz adás</strong> gombra.',
			it_it: 'Installa questa applicazione sul tuo %device: premi su %icon e poi <strong>Aggiungi a Home</strong>.',
			ja_jp: 'このウェブアプリをあなたの%deviceにインストールするには%iconをタップして<strong>ホーム画面に追加</strong>を選んでください。',
			ko_kr: '%device에 웹앱을 설치하려면 %icon을 터치 후 "홈화면에 추가"를 선택하세요',
			nb_no: 'Installer denne appen på din %device: trykk på %icon og deretter <strong>Legg til på Hjem-skjerm</strong>',
			nl_nl: 'Installeer deze webapp op uw %device: tik %icon en dan <strong>Voeg toe aan beginscherm</strong>.',
			pl_pl: 'Aby zainstalować tę aplikacje na %device: naciśnij %icon a następnie <strong>Dodaj jako ikonę</strong>.',
			pt_br: 'Instale este aplicativo em seu %device: aperte %icon e selecione <strong>Adicionar à Tela Inicio</strong>.',
			pt_pt: 'Para instalar esta aplicação no seu %device, prima o %icon e depois o <strong>Adicionar ao ecrã principal</strong>.',
			ru_ru: 'Установите это веб-приложение на ваш %device: нажмите %icon, затем <strong>Добавить в «Домой»</strong>.',
			sv_se: 'Lägg till denna webbapplikation på din %device: tryck på %icon och därefter <strong>Lägg till på hemskärmen</strong>.',
			th_th: 'ติดตั้งเว็บแอพฯ นี้บน %device ของคุณ: แตะ %icon และ <strong>เพิ่มที่หน้าจอโฮม</strong>',
			tr_tr: 'Bu uygulamayı %device\'a eklemek için %icon simgesine sonrasında <strong>Ana Ekrana Ekle</strong> düğmesine basın.',
			uk_ua: 'Встановіть цей веб сайт на Ваш %device: натисніть %icon, а потім <strong>На початковий екран</strong>.',
			zh_cn: '您可以将此应用程式安装到您的 %device 上。请按 %icon 然后点选<strong>添加至主屏幕</strong>。',
			zh_tw: '您可以將此應用程式安裝到您的 %device 上。請按 %icon 然後點選<strong>加入主畫面螢幕</strong>。'
		};

	function init () {
		// Preliminary check, all further checks are performed on iDevices only
		if ( !isIDevice ) return;

		var now = Date.now(),
			i;

		// Merge local with global options
		if ( w.addToHomeConfig ) {
			for ( i in w.addToHomeConfig ) {
				options[i] = w.addToHomeConfig[i];
			}
		}
		if ( !options.autostart ) options.hookOnLoad = false;

		isIPad = (/ipad/gi).test(nav.platform);
		isRetina = w.devicePixelRatio && w.devicePixelRatio > 1;
		isSafari = (/Safari/i).test(nav.appVersion) && !(/CriOS/i).test(nav.appVersion);
		isStandalone = nav.standalone;
		OSVersion = nav.appVersion.match(/OS (\d+_\d+)/i);
		OSVersion = OSVersion && OSVersion[1] ? +OSVersion[1].replace('_', '.') : 0;

		lastVisit = +w.localStorage.getItem('addToHome');

		isSessionActive = w.sessionStorage.getItem('addToHomeSession');
		isReturningVisitor = options.returningVisitor ? lastVisit && lastVisit + 28*24*60*60*1000 > now : true;

		if ( !lastVisit ) lastVisit = now;

		// If it is expired we need to reissue a new balloon
		isExpired = isReturningVisitor && lastVisit <= now;

		if ( options.hookOnLoad ) w.addEventListener('load', loaded, false);
		else if ( !options.hookOnLoad && options.autostart ) loaded();
	}

	function loaded () {
		w.removeEventListener('load', loaded, false);

		if ( !isReturningVisitor ) w.localStorage.setItem('addToHome', Date.now());
		else if ( options.expire && isExpired ) w.localStorage.setItem('addToHome', Date.now() + options.expire * 60000);

		if ( !overrideChecks && ( !isSafari || !isExpired || isSessionActive || isStandalone || !isReturningVisitor ) ) return;

		var touchIcon = '',
			platform = nav.platform.split(' ')[0],
			language = nav.language.replace('-', '_');

		balloon = document.createElement('div');
		balloon.id = 'addToHomeScreen';
		balloon.style.cssText += 'left:-9999px;-webkit-transition-property:-webkit-transform,opacity;-webkit-transition-duration:0;-webkit-transform:translate3d(0,0,0);position:' + (OSVersion < 5 ? 'absolute' : 'fixed');

		// Localize message
		if ( options.message in intl ) {		// You may force a language despite the user's locale
			language = options.message;
			options.message = '';
		}
		if ( options.message === '' ) {			// We look for a suitable language (defaulted to en_us)
			options.message = language in intl ? intl[language] : intl['en_us'];
		}

		if ( options.touchIcon ) {
			touchIcon = isRetina ?
				document.querySelector('head link[rel^=apple-touch-icon][sizes="114x114"],head link[rel^=apple-touch-icon][sizes="144x144"],head link[rel^=apple-touch-icon]') :
				document.querySelector('head link[rel^=apple-touch-icon][sizes="57x57"],head link[rel^=apple-touch-icon]');

			if ( touchIcon ) {
				touchIcon = '<span style="background-image:url(' + touchIcon.href + ')" class="addToHomeTouchIcon"></span>';
			}
		}

		balloon.className = (isIPad ? 'addToHomeIpad' : 'addToHomeIphone') + (touchIcon ? ' addToHomeWide' : '');
		balloon.innerHTML = touchIcon +
			options.message.replace('%device', platform).replace('%icon', OSVersion >= 4.2 ? '<span class="addToHomeShare"></span>' : '<span class="addToHomePlus">+</span>') +
			(options.arrow ? '<span class="addToHomeArrow"></span>' : '') +
			(options.closeButton ? '<span class="addToHomeClose">\u00D7</span>' : '');

		document.body.appendChild(balloon);

		// Add the close action
		if ( options.closeButton ) balloon.addEventListener('click', clicked, false);

		if ( !isIPad && OSVersion >= 6 ) window.addEventListener('orientationchange', orientationCheck, false);

		setTimeout(show, options.startDelay);
	}

	function show () {
		var duration,
			iPadXShift = 208;

		// Set the initial position
		if ( isIPad ) {
			if ( OSVersion < 5 ) {
				startY = w.scrollY;
				startX = w.scrollX;
			} else if ( OSVersion < 6 ) {
				iPadXShift = 160;
			}

			balloon.style.top = startY + options.bottomOffset + 'px';
			balloon.style.left = startX + iPadXShift - Math.round(balloon.offsetWidth / 2) + 'px';

			switch ( options.animationIn ) {
				case 'drop':
					duration = '0.6s';
					balloon.style.webkitTransform = 'translate3d(0,' + -(w.scrollY + options.bottomOffset + balloon.offsetHeight) + 'px,0)';
					break;
				case 'bubble':
					duration = '0.6s';
					balloon.style.opacity = '0';
					balloon.style.webkitTransform = 'translate3d(0,' + (startY + 50) + 'px,0)';
					break;
				default:
					duration = '1s';
					balloon.style.opacity = '0';
			}
		} else {
			startY = w.innerHeight + w.scrollY;

			if ( OSVersion < 5 ) {
				startX = Math.round((w.innerWidth - balloon.offsetWidth) / 2) + w.scrollX;
				balloon.style.left = startX + 'px';
				balloon.style.top = startY - balloon.offsetHeight - options.bottomOffset + 'px';
			} else {
				balloon.style.left = '50%';
				balloon.style.marginLeft = -Math.round(balloon.offsetWidth / 2) - ( w.orientation%180 && OSVersion >= 6 ? 40 : 0 ) + 'px';
				balloon.style.bottom = options.bottomOffset + 'px';
			}

			switch (options.animationIn) {
				case 'drop':
					duration = '1s';
					balloon.style.webkitTransform = 'translate3d(0,' + -(startY + options.bottomOffset) + 'px,0)';
					break;
				case 'bubble':
					duration = '0.6s';
					balloon.style.webkitTransform = 'translate3d(0,' + (balloon.offsetHeight + options.bottomOffset + 50) + 'px,0)';
					break;
				default:
					duration = '1s';
					balloon.style.opacity = '0';
			}
		}

		balloon.offsetHeight;	// repaint trick
		balloon.style.webkitTransitionDuration = duration;
		balloon.style.opacity = '1';
		balloon.style.webkitTransform = 'translate3d(0,0,0)';
		balloon.addEventListener('webkitTransitionEnd', transitionEnd, false);

		closeTimeout = setTimeout(close, options.lifespan);
	}

	function manualShow (override) {
		if ( !isIDevice || balloon ) return;

		overrideChecks = override;
		loaded();
	}

	function close () {
		clearInterval( positionInterval );
		clearTimeout( closeTimeout );
		closeTimeout = null;

		// check if the popup is displayed and prevent errors
		if ( !balloon ) return;

		var posY = 0,
			posX = 0,
			opacity = '1',
			duration = '0';

		if ( options.closeButton ) balloon.removeEventListener('click', clicked, false);
		if ( !isIPad && OSVersion >= 6 ) window.removeEventListener('orientationchange', orientationCheck, false);

		if ( OSVersion < 5 ) {
			posY = isIPad ? w.scrollY - startY : w.scrollY + w.innerHeight - startY;
			posX = isIPad ? w.scrollX - startX : w.scrollX + Math.round((w.innerWidth - balloon.offsetWidth)/2) - startX;
		}

		balloon.style.webkitTransitionProperty = '-webkit-transform,opacity';

		switch ( options.animationOut ) {
			case 'drop':
				if ( isIPad ) {
					duration = '0.4s';
					opacity = '0';
					posY += 50;
				} else {
					duration = '0.6s';
					posY += balloon.offsetHeight + options.bottomOffset + 50;
				}
				break;
			case 'bubble':
				if ( isIPad ) {
					duration = '0.8s';
					posY -= balloon.offsetHeight + options.bottomOffset + 50;
				} else {
					duration = '0.4s';
					opacity = '0';
					posY -= 50;
				}
				break;
			default:
				duration = '0.8s';
				opacity = '0';
		}

		balloon.addEventListener('webkitTransitionEnd', transitionEnd, false);
		balloon.style.opacity = opacity;
		balloon.style.webkitTransitionDuration = duration;
		balloon.style.webkitTransform = 'translate3d(' + posX + 'px,' + posY + 'px,0)';
	}


	function clicked () {
		w.sessionStorage.setItem('addToHomeSession', '1');
		isSessionActive = true;
		close();
	}

	function transitionEnd () {
		balloon.removeEventListener('webkitTransitionEnd', transitionEnd, false);

		balloon.style.webkitTransitionProperty = '-webkit-transform';
		balloon.style.webkitTransitionDuration = '0.2s';

		// We reached the end!
		if ( !closeTimeout ) {
			balloon.parentNode.removeChild(balloon);
			balloon = null;
			return;
		}

		// On iOS 4 we start checking the element position
		if ( OSVersion < 5 && closeTimeout ) positionInterval = setInterval(setPosition, options.iterations);
	}

	function setPosition () {
		var matrix = new WebKitCSSMatrix(w.getComputedStyle(balloon, null).webkitTransform),
			posY = isIPad ? w.scrollY - startY : w.scrollY + w.innerHeight - startY,
			posX = isIPad ? w.scrollX - startX : w.scrollX + Math.round((w.innerWidth - balloon.offsetWidth) / 2) - startX;

		// Screen didn't move
		if ( posY == matrix.m42 && posX == matrix.m41 ) return;

		balloon.style.webkitTransform = 'translate3d(' + posX + 'px,' + posY + 'px,0)';
	}

	// Clear local and session storages (this is useful primarily in development)
	function reset () {
		w.localStorage.removeItem('addToHome');
		w.sessionStorage.removeItem('addToHomeSession');
	}

	function orientationCheck () {
		balloon.style.marginLeft = -Math.round(balloon.offsetWidth / 2) - ( w.orientation%180 && OSVersion >= 6 ? 40 : 0 ) + 'px';
	}

	// Bootstrap!
	init();

	return {
		show: manualShow,
		close: close,
		reset: reset
	};
})(window);

;
var Cookie = {

    create: function( name, value, days ) {
        var expires = '';

        if ( days ) {
            var date = new Date();

            date.setTime( date.getTime() + (days * 24 * 60 * 60 * 1000) );

            expires = '; expires=' + date.toGMTString();
        }

        document.cookie = name + '=' + value + expires + '; path=/';
    },

    read: function( name ) {
        var nameEQ = name + '=',
            ca = document.cookie.split( ';' ),
            value = null;

        for ( var i = 0; i < ca.length; i++ ) {
            var c = ca[i];

            while ( c.charAt(0) == ' ' ) {
                c = c.substring( 1, c.length );
            }

            if ( c.indexOf(nameEQ) === 0 ) {
                value = c.substring( nameEQ.length, c.length );
            }
        }

        return value;
    },

    erase: function( name ) {
        this.create( name, '', -1);
    },

    readVar: function( key ) {
        var val,
            sess = decodeURIComponent( this.read('allmusic_session') );

        if ( sess.length > 0 ) {
            var regex = new RegExp( '\\;s\\:' + key.length + '\\:\\"' + key + '"\\;s\\:[0-9]+\\:\\"(.+?)\\"' ),
                matches = regex.exec( sess );

            if ( matches ) {
                val = matches[1];
            }
        }

        return val;
    }
};
;
var User = {

    loggedIn: (function() {
        var returnData;
        var session = Cookie.read('allmusic_session');
        
        if ( session != null ) {
        
            // Session
            session = unescape(session);
            returnData = (session.indexOf('"user"') != -1 && session.indexOf('"user";i:0;') == -1);
            
        } else if ( Cookie.read('remember') != null ) {
        
            // Cookie remember
            returnData = true ;
            
        } else {
        
            // Not logged in
            returnData = false;
        
        }

        // if returnData !== false, renew nag cookie
        if(returnData) {
            Cookie.create('registration_prompt', 'true', '90');
        }

        // If normal
        return returnData;

        // If Degraded
        //return false;
    })()
    
};
;
$(function () {

    // This is to prevent console errors in unsupported browsers
    if (typeof console == 'undefined') {
        var names = ["log", "debug", "info", "warn", "error", "assert", "dir", "dirxml", "group", "groupEnd", "time", "timeEnd", "count", "trace", "profile", "profileEnd"];
        window.console = {};
        for (var i = 0; i < names.length; i++) {
            window.console[names[i]] = function(){};
        }
    }
    
    // IE 8 date.now() polyfill
    Date.now = Date.now || function() { return +new Date; };
    
    // Links handler
    $(document).delegate('a[href^="http"]', 'click', function() {
        var $anchor = $(this);

        if ( $anchor.attr('target') === undefined ) {
            if ( $anchor.is('[data-target]') === true ) {
                $anchor.attr('target', $anchor.data('target'));
            } else if ( $anchor.is('[href^="http://' + document.domain + '"]') === false ) {
                $anchor.attr('target', '_blank');
            }
        }

    });

    $(document).delegate('a', 'click', function() {
        var $anchor = $(this);
        var $autotune = Cookie.readVar('autotune_display');

        if ( $autotune === 'false' ) {
            var _href = $(this).attr("href");
            if ( _href.length > 1  &&
                ($anchor.is('[href^="http://' + document.domain + '"]') === true) ||
                $anchor.is('[href^="/"]') === true ) {
                $anchor.attr("href", _href + '?autotune=false');
            }
        }
    });

    // show/hide profiler
    $('<a href="#" id="show_profiler">show profiler</a>')
        .insertBefore('#codeigniter_profiler')
        .click(function (e) {
            e.preventDefault();

            var $this = $(this);
            var $profiler = $('#codeigniter_profiler');

            $this.hide();
            $profiler.show();
            $('html, body').animate({ scrollTop: $profiler.offset().top - 50 });
        });


    // jquery.lazyload set-up (http://www.appelsiini.net/projects/lazyload)
    $('img.lazy').show().lazyload({
        effect: 'fadeIn',
        failure_limit: 100,
        threshold : 200
    });


    ////
    //  Polyfills

    // If no form placeholders
    if ( ! Modernizr.input.placeholder ) {
        // Load the placeholder polyfill
        Modernizr.load({
            load: cdnURL + '/js/jquery/plugins/jquery.placeholder.js',
            complete: function () {
                $('input, textarea').placeholder();
            }
        });
    }

    // If no CSS box-sizing
    if ( ( ! Modernizr.testAllProps('boxSizing') ) || (document.documentMode !== undefined && document.documentMode <= 7) ) {
        // Load the polyfill
        Modernizr.load({
            load: cdnURL + '/js/lib/borderBoxModel.js',
            complete: function () {
            }
        });
    }

    // check if mobile or non-mobile, don't add pop up if mobile.
    enquire.register("screen and (min-width: " + fullMinWidth + "px)", {
        match : function() {

            $(document).on('click', '.getSatisfactionLink', function(e) {
                if (feedback_widget !== undefined) {
                    e.preventDefault();
                    feedback_widget.show();
                }
            });

        }
    });

    // decode email address
    String.prototype.rot13 = function() {
        return this.replace(/[a-zA-Z]/g, function(c) {
            return String.fromCharCode((c <= "Z" ? 90 : 122) >= (c = c.charCodeAt(0) + 13) ? c : c - 26);
        });
    };

    // Simple e-mail obfuscation
    $('a[href^="mailto:"]').each(function() {
        var $mailto = $(this);
        var address = $mailto.html().rot13();
        $mailto.html(address).attr('href', 'mailto:' + address);
    });

});
;(function( $ ) {

    $.widget( 'allmusic.typeahead', {

        _lastTerm: null,

        options: {
            itemSelector: '.result',
            minLength: 3,
            minPause: 500,
            seeAllLink: true,
            url: '//' + urlSubdomain + '.allmusic.com/search/typeahead/all',
            select: null
        },

        // set up the widget (options & event bindings)
        _create: function() {
            var self = this,
                $dropdown,
                $items;

            self.element.attr( 'autocomplete', 'off' );

            $.manageAjax.create( 'allmusic.typeahead', {
                queue: false,
                cacheResponse: true
            });

            $dropdown = $( '<div class="allmusic-typeahead">' )
                .css({
                    display: 'none',
                    position: 'absolute'
                })
                .append( '<div class="typeahead-results searching"><span class="typeahead-searching-msg" style=""><h3 style="color:#A9A9A9;">Searching<span class="dots"></span></span></h3>');

            if ( self.options.seeAllLink ) {
                $dropdown.append( '<div class="see-all">' );
            }

            $dropdown.on( 'click', '.result', function( e ) {
                e.preventDefault();

                if ( typeof self.options.select == 'function' ) {

                    var $autotune = Cookie.readVar('autotune_display');

                    if ( $autotune === 'false' ) {
                        var _href = $(this).attr('data-url');
                        $(this).attr('data-url', _href+'?autotune=false');
                    }

                    self.options.select.call( self.element, $(this).data() );
                }
            });

            $dropdown.mouseenter(function() {
                $.manageAjax.abort( 'allmusic.typeahead' );
            });

            $dropdown.insertAfter( self.element );

            $(document).click( function() {
                if ( $dropdown.is( ':visible' ) &&
                     $(this).closest( '.allmusic-typeahead').length === 0 ) {
                    $dropdown.hide();
                }
            });

            self.element.keydown( function( e ) {

                var $focused,
                    focusIdx,
                    keyCodes = {
                        DOWN_ARROW: 40,
                        UP_ARROW: 38,
                        ENTER: 13,
                        NUMPAD_ENTER: 108,
                        ESCAPE: 27
                    };

                switch ( e.which ) {

                    case keyCodes.DOWN_ARROW:
                    case keyCodes.UP_ARROW:
                        e.preventDefault();

                        $.manageAjax.abort( 'allmusic.typeahead' );

                        $items = $dropdown.find( self.options.itemSelector );

                        $focused = $items.filter( '.focus' );

                        focusIdx = $items.index( $focused  );

                        $focused.removeClass( 'focus' );

                        if ( e.which == keyCodes.DOWN_ARROW ) {
                            if ( focusIdx == -1 ) {
                                $items.filter( ':first' ).addClass( 'focus' );
                            } else if ( $items.length > focusIdx ) {
                                $items.eq( focusIdx + 1 ).addClass( 'focus' );
                            }
                        } else if ( e.which == keyCodes.UP_ARROW ) {
                            if ( focusIdx == -1 ) {
                                $items.filter( ':last' ).addClass( 'focus' );
                            } else if (focusIdx > 0) {
                                $items.eq( focusIdx - 1 ).addClass( 'focus' );
                            }
                        }
                        break;

                    case keyCodes.ENTER:
                    case keyCodes.NUMPAD_ENTER:
                        $items = $dropdown.find( self.options.itemSelector );

                        $focused = $items.filter( '.focus' );

                        if ( $focused.length > 0 && typeof self.options.select == 'function' ) {
                            e.preventDefault();

                            $focused.click();

                            $dropdown.hide();
                        }
                        break;

                    case keyCodes.ESCAPE:
                        $dropdown.hide();
                        break;

                    default:
                        setTimeout( function() {
                            var term = $.trim(self.element.val().toLowerCase()),
                                $seeAllLink,
                                url;

                            if ( term.length < self.options.minLength ) {
                                $dropdown.hide();
                            } else if ( term != self._lastTerm ) {
                                self._lastTerm = term;

                                if ( self.options.seeAllLink ) {

                                    $seeAllLink = $( '<a>' )
                                        .attr( 'href', '/search/all/' + encodeURIComponent( term ) )
                                        .text( 'See All Results for "' + term + '"' );

                                    $dropdown.find( '.see-all' ).html( $seeAllLink );
                                }

                                $.manageAjax.add( 'allmusic.typeahead', {
                                    url: self.options.url + '/' + encodeURIComponent( term ),
                                    success: function( results ) {
                                        if ( results.length ) {

                                            $dropdown.find( '.typeahead-results' )
                                                .removeClass('searching')
                                                .html( results );

                                            position = self._position();

                                            $dropdown.css({
                                                top: position.top + 'px',
                                                left: position.left + 'px'
                                            });

                                            $dropdown.show();
                                        } else {
                                            position = self._position();

                                            $dropdown.css({
                                                position: 'absolute',
                                                top: position.top + 'px',
                                                left: position.left + 'px',
                                                display: 'block'
                                            });
                                        }
                                    }
                                });
                            }
                        }, self.options.minPause);
                }

            });
        },

        _position: function() {
            var position = this.element.position();

            position.top += this.element.outerHeight();

            return position;
        }

    });


    var dots = 0;

    setInterval(type, 1000);

    // "animate" ellipsis dots in searching message
    function type() {
        if(dots < 3) {
            $('.typeahead-results .dots').append('.');
            dots++;
        } else {
            $('.typeahead-results .dots').html('');
            dots = 0;
        }
    }

}( jQuery ));
;(function( $ ) {

    $.widget( 'allmusic.audioPlayer', {

        // These options will be used as defaults
        options: {
            bgColor: '#24aae1',
            color: '#7e7e7e'
        },

        // first set up the widget
        _create: function() {

            // alias widget reference, so it can be accessed
            // by closures and callback methods
            var widget = this,
                sampleUrl = widget.element.data( 'sample-url' );

            // instanciate an AJAXManager
            $.manageAjax.create( 'allmusic.audioPlayer', {
                cacheResponse: false,
                queue: false
            });

            // only init for non-iOS devices
            if(!is_iDevice_AllMusic) {

                // source audio data array instance var
                widget._audioUrls = [];

                if ( sampleUrl.match(/.*\.json.*/) ) {
                    $.manageAjax.add( 'allmusic.audioPlayer', {
                        async: false,
                        dataType: 'json',
                        url: sampleUrl,
                        success: function( json ) {
                            widget._audioUrls = json;
                        }
                    });
                } else {
                    widget._audioUrls.push({ sample: sampleUrl });
                }

                // sound playlist instance var
                widget._playlist = [];

                var uri, sound;

                for ( var i in widget._audioUrls ) {
                    uri = document.createElement('a');

                    uri.href = widget._audioUrls[ i ].sample;

                    // fix json encoding of &
                    uri.href = uri.href.replace(/&amp;/g, '&');

                    sound = soundManager.createSound( uri.search,  uri.href );

                    widget._playlist.push( sound );

                }

                // set current sound object to first item in instance playlist.
                widget._index = 0;
                widget._sound = widget._playlist[ widget._index ];

            }

            widget.element.click( function( e ) {
                e.preventDefault();

                // init mobile
                if(is_iDevice_AllMusic) {
                    // get the URL etc
                    var sampleURL = widget.element.data('sample-url'),
                        sampleID = sampleURL.match(/(\?.*)/)[1]
                        sound;

                    widget._playlist = [];

                    sound = soundManager.createSound( sampleID,  sampleURL );
                    widget._playlist.push( sound );

                    widget._index = 0;
                    widget._sound = widget._playlist[ widget._index ];
                }


                if ( widget._sound.playState === 0 ) {
                    // if the sound is stopped, start playing.
                    widget.play();
                } else if ( widget._sound.paused ) {
                    // if the sound is paused, resume playback.
                    widget.resume();
                } else {
                    // if the sound is playing, pause it.
                    widget.pause();
                }
            });

            var $canvas = widget.element.find( 'canvas' );

            if ( $canvas.length && $canvas[0].getContext ) {
                widget._canvas = $canvas[0];
            } else {
                widget._canvas = false;
            }
        },

        // handle play action, state, animation
        play: function() {
            var widget = this;

            widget._pauseAll();

            // trigger playback, w/ event binding
            widget._sound.play({
                whileplaying: function() {
                    widget._animate();
                },
                onfinish: function() {
                    if ( widget._index < widget._playlist.length - 1) {
                        widget._index++;
                        widget._sound = widget._playlist[ widget._index ];
                        widget.play();
                    } else {
                        widget._index = 0;
                        widget._sound = widget._playlist[0];
                        widget.element
                            .removeClass( 'playing' )
                            .addClass( 'default' );

                        // if we have a valid canvas...
                        if ( widget._canvas ) {
                            // the canvas context
                            var context = widget._canvas.getContext( '2d' );

                            // clear the canvas
                            context.clearRect( 0, 0, widget._canvas.width, widget._canvas.height );
                        }
                    }
                }
            });

            widget.element
                .removeClass( 'default' )
                .addClass( 'playing' );

            if(!isMobile_AllMusic) {
                // if we have a title for the sample, set the player's title attribute
                if ( 'title' in widget._audioUrls[ widget._index ] ) {
                    widget.element.attr(
                        'title',
                        'Now Playing: ' + widget._audioUrls[ widget._index ].title
                    );
                }
            }
        },

        // handle pause action, state, animation
        pause: function() {
            this._sound.pause();

            this.element
                .removeClass( 'playing' )
                .addClass( 'paused' );
        },

        // handle pause action, state, animation
        resume: function() {
            this._pauseAll();

            this._sound.resume();

            this.element
                .removeClass( 'paused' )
                .addClass( 'playing' );
        },

        // pause all playing audio players
        _pauseAll: function() {
            $( ':allmusic-audioPlayer.playing' ).audioPlayer( 'pause' );
        },

        // draw a frame of the progress bar animation
        _animate: function() {

            // if we have a valid canvas...
            if ( this._canvas ) {

                // alias for readability
                var canvas = this._canvas,

                // turn progress into a percentage
                    percent = this._sound.position / 30000,

                // the canvas context
                    context = canvas.getContext( '2d' ),

                // x position of canvas
                    x = canvas.width / 2,

                // y position of canvas
                    y = canvas.height / 2,

                // radius of progress arc path
                    radius = canvas.width * 0.4,

                // width of progress bar
                    strokeWidth = canvas.width * 0.18;

                // clear the canvas for the new frame
                context.clearRect( 0, 0, canvas.width, canvas.height );

                ////
                // Draw progress bar background

                // create a path
                context.beginPath();

                // describe the shape of the progress bar
                context.arc( x, y, radius, 0, 2 * Math.PI );

                // define the width of the progress bar
                context.lineWidth = strokeWidth;

                // line color
                context.strokeStyle = this.options.bgColor;

                // draw the progress bar frame
                context.stroke();

                // if we have something to draw...
                if ( percent > 0 && percent < 1 ) {

                    // the starting angle/position
                    var start = 1.5 * Math.PI,

                    // the end angle/position
                        end = ( ( 2 * percent ) - 0.5 ) * Math.PI;

                    ////
                    // Draw progress bar

                    // create a path
                    context.beginPath();

                    // describe the shape of the progress bar
                    context.arc( x, y, radius, start, end );

                    // define the width of the progress bar
                    context.lineWidth = strokeWidth;

                    // line color
                    context.strokeStyle = this.options.color;

                    // draw the progress bar frame
                    context.stroke();
                }
            }
        }

    });

    if ( soundManager ) {
        soundManager.setup({
            debugMode: false,
            flashVersion: 9,
            preferFlash: false,
            url: cdnURL + '/swf/soundmanager2/',
            useFlashBlock: false,
            onready: function() {
                $( '.audio-player' ).audioPlayer();
            }
        });
    }

}( jQuery ));
;
var initAverageUserRatings;

(function( $ ) {

    // instanciate an AJAXManager, put here instead of create since we instance on page load
    $.manageAjax.create( 'allmusic.averageUserRatingAJAX', {
        cacheResponse: false,
        queue: false
    });

    $.widget( 'allmusic.averageUserRating', {

        // These options will be used as defaults
        options: {

            // the metadata ID of the rating item
            itemId: '',

            // the current rating score of the item
            score: 0,

            // the current number of user ratings for this item
            count: 0,

            // sprite classes
            spriteClasses: [
                'rating-average-0',
                'rating-average-1',
                'rating-average-2',
                'rating-average-3',
                'rating-average-4',
                'rating-average-5',
                'rating-average-6',
                'rating-average-7',
                'rating-average-8',
                'rating-average-9',
                'rating-average-10'
            ]
        },

        // set up the widget (options & event bindings)
        _create: function() {

            // store id from data attr
            this.options.itemId = this.element.data( 'id' );

            if ( this.element.data( 'score' ) ) {
                this.options.score = this.element.data( 'score' );
            }

            // update sprite class
            this._displayRating( this.options.score );

            // set default value for count (added toLocaleString for thousands comma separator in counts over 1k)
            $( '.average-user-rating-count[data-id="' + this.options.itemId + '"]' ).text( this.options.count.toLocaleString() );

        },

        // handler for whenever options are set
        _setOptions: function( options ) {

            // if score provided, update sprite class
            if ( options.score !== undefined ) {
                this._displayRating( options.score );
            }

            // if count provided
            if ( options.count ) {

                // update count label, if exists (added toLocaleString for thousands comma separator in counts over 1k)
                $( '.average-user-rating-count[data-id="' + this.options.itemId + '"]' ).text( options.count.toLocaleString() );

                // If on a discography page
                if ( this.element.closest('.discography, .appearances, .list-container, .similar-albums').length ) {
                    // update sorting info
                    var $td = this.element.closest( 'td' );

                    // build a sort key
                    var sortVal = ( options.score / 100) +
                                  ( options.count / 100000000) +
                                  '-' + $td.data( 'secondary-sort' );

                    $td.data( 'sort-value', sortVal );
                }

            }

        },

        // replace any sprite score classes, with new score class
        // based on rating score (1-10)
        _displayRating: function( score ) {

            var className = this.options.spriteClasses[0];

            if ( score > 0 ) {
                className = 'rating-average-' + score;
            }

            this.element.removeClass( this.options.spriteClasses.join(' ') )
                        .addClass( className );
        },

        refresh: function() {
            // alias widget reference, so it can be accessed
            // by closures and callback methods
            var self = this;
            $.manageAjax.add( 'allmusic.averageUserRatingAJAX', {
                url: '/rating/average/' + self.options.itemId,
                dataType: 'json',
                cache: false,
                success: function( response ) {
                    if ( response.length ) {
                        var rating = response[0];

                        self._setOptions({
                            score: Math.ceil( rating.average / 10 ),
                            count: rating.count
                        });
                    }
                }
            });
        }

    });

    initAverageUserRatings = function() {
        var ids = [],
            $ratings;

        $ratings = $(this).find( '.average-user-rating' )
                       .not( '.allmusic-averageUserRating' )
                       .each( function() {
                            var $this = $(this),
                                id = $this.data( 'id' ),
                                score = $this.data( 'score' );

                            if ( score !== undefined ) {
                                $this.averageUserRating({ score: Math.ceil( score / 10 ) });
                            } else {
                                $this.averageUserRating();
                                ids.push( id );
                            }
                        });

        while ( ids.length ) {

            $.manageAjax.add( 'allmusic.averageUserRatingAJAX', {
                url: '/rating/average/' + ids.splice(0, 20).join(','),
                dataType: 'json',
                cache: false,
                success: function( ratings ) {
                    if ( ratings.length ) {
                        for ( var i in ratings ) {
                            var rating = ratings[ i ];

                            $ratings.filter( '[data-id="' + rating.itemId + '"]' )
                                .averageUserRating({
                                    score: Math.ceil( rating.average / 10 ),
                                    count: rating.count
                                });
                        }
                    }
                }
            });
        }
    };

    // Widgetize the available user ratings & init them
    initAverageUserRatings.call( document );

}( jQuery ));
;
var initUserRatings;

(function( $ ) {

    // instanciate an AJAXManager, put outside widget as we also use on page load before widget load
    $.manageAjax.create( 'allmusic.userRating', {
        cacheResponse: false,
        queue: false
    });

    $.widget( 'allmusic.userRating', {

        // These options will be used as defaults
        options: {
            // the album artist name(s)
            artist: null,

            // the metadata ID of the rating item
            id: '',

            // the current rating score of the item
            score: 0,

            // sprite classes
            spriteClasses: [
                'rating-user-0',
                'rating-user-1',
                'rating-user-2',
                'rating-user-3',
                'rating-user-4',
                'rating-user-5',
                'rating-user-6',
                'rating-user-7',
                'rating-user-8',
                'rating-user-9',
                'rating-user-10'
            ],

            // the album title
            title: null
        },

        // first set up the widget
        _create: function() {
            // alias widget reference, so it can be accessed
            // by closures and callback methods
            var widget = this;

            // store options from data attrs
            $.extend( widget.options, widget.element.data() );

            // display sprite rating based on score; default to unrated
            widget._displayRating( widget.options.score );

            // set-up interaction for mouse (desktop)
            enquire.register( 'screen and (min-width: ' + fullMinWidth + 'px)', {
                    match: function() {
                        // bind mouse interaction for desktop browsers
                        widget._bindMouseInteraction();
                    },
                    unmatch: function() {
                        // unbind mouse interaction
                        widget.element.unbind( '.userRating.mouse' );
                    }
                });

            // set-up interaction for touch (mobile)
            enquire.register( 'screen and (max-width: ' + mobileMaxWidth + 'px)', {
                    match: function() {
                        // bind touch interaction for mobile browsers
                        widget._bindTouchInteraction();
                    },
                    unmatch: function() {
                        // unbind touch interaction
                        widget.element.unbind( '.userRating.touch' );
                    }
                });
        },

        // handler for whenever options are set
        _setOptions: function( options ) {
            var widget = this;

            // update options
            $.extend( widget.options, options );

            // if score provided
            if ( options.score !== undefined ) {
                // update sprite class
                widget._displayRating( widget.options.score );
            }
        },

        // replace any sprite score classes, with new score class
        // based on rating score (1-10)
        _displayRating: function( score ) {
            var widget = this;

            var className = widget.options.spriteClasses[0];

            if ( score > 0 ) {
                className = 'rating-user-' + score;
            }

            // change styles
            widget.element
                .removeClass( widget.options.spriteClasses.join(' ') )
                .addClass( className );
        },

        // translate mouse position to rating score
        _eventToScore: function( event ) {
            // if we detect touch events, use touch instead of mouse as event
            if ( event.originalEvent.touches || event.originalEvent.changedTouches ) {
                event = event.originalEvent.touches[0] || event.originalEvent.changedTouches[0];
            }

            var $el = $(event.target),

                // get distance of mouse from the left edge of the element
                offset  = event.offsetX || event.pageX - $(event.target).offset().left,

                // turn distance into percentage of element width
                percent = offset / $(event.target).width(),

                // turn percentage into 1-10 score
                score   = Math.min(Math.max(Math.ceil( percent * 10 ), 0), 10);

                return score;
        },

        _showTooltip: function() {
            if ( this.element.closest( '.tooltip' ).length === 0 && $().qtip ) {
                $( '<div>' ).qtip({
                    show: {
                        ready: true,
                        solo: true
                    },
                    position: {
                        my: 'top center', // what part of tip to align
                        at: 'bottom center', // where on target to align
                        viewport: $(window),
                        target: this.element,
                        adjust: {
                        }
                    },
                    style: {
                        classes: 'ratings-signup-tooltip',
                        tip: {
                            corner: true,
                            width: 12,
                            height: 6
                        }
                    },
                    hide: {
                        delay: 200,
                        fixed: true,
                        inactive: 5000,
                        event: 'mouseleave'
                    },
                    content: {
                        text: '<p>Sign up or log in to rate albums and get personalized recommendations.</p>' +
                              '<a class="button sign-up" href="/join">Sign Up</a>' +
                              '<a class="button open-login-modal" href="#">Log In</a>' +
                              '<a class="button facebook-login" href="/oauth/facebook">' +
                                  'Sign Up Using Facebook <span class="icon"></span>' +
                              '</a>'
                    },
                    events: {
                        // destroy the tooltip once it's hidden as we no longer need it!
                        hide: function( event, api ) {
                            api.destroy();
                        }
                    }
                });

                $( document ).on( 'click', '.ratings-signup-tooltip .open-login-modal', function() {
                    $( '.ratings-signup-tooltip' ).qtip( 'hide' );
                });
            }
        },

        _bindMouseInteraction: function() {
            var widget = this;

            // set-up mouse interaction
            widget.element.on({
                'click.userRating.mouse': function( event ) {
                    if ( User.loggedIn ) {
                        // determine score, based on mouse position
                        var score = widget._eventToScore( event );

                        // store new score to widget
                        widget.options.score = score;

                        // set sprite class to display the new score
                        widget._displayRating( widget.options.score );

                        // send new rating to rating API
                        widget._saveRating();
                    } else {

                        if('sessionStorage' in window) { // if browser is HTML5-friendly and supports sessionStorage

                            // get score and pass to sessionStorage
                            var score = widget._eventToScore( event );
                            sessionStorage.setItem('albumRating', score);

                            // get album ID and pass to sessionStorage
                            var albumId = widget.options.id;
                            sessionStorage.setItem('albumId', albumId);

                        }

                        widget._showTooltip();
                    }
                },

                'mousemove.userRating.mouse': function( event ) {
                    // if not on a touch-enabled device...
                    if ( ! Modernizr.touch ) {
                        // determine score, based on mouse position
                        var score = widget._eventToScore(event);

                        // add sprite class to display the current score
                        widget._displayRating( score );
                    }
                },

                'mouseout.userRating.mouse': function( event ) {
                    // if not on a touch-enabled device...
                    if ( ! Modernizr.touch ) {
                        // reset sprite class to display the last selected score
                        if ( widget.options.score > 0 ) {
                            widget._displayRating( widget.options.score );
                        } else {
                            widget._displayRating( 0 );
                        }
                    }
                }
            });
        },

        _bindTouchInteraction: function() {
            var widget = this;

            // set-up mouse interaction
            widget.element.on({
                'click.userRating.touch': function( event ) {
                    event.preventDefault();

                    if ( User.loggedIn ) {
                        widget._openMobileRatingModal();
                    } else {
                        widget._openMobileLoginModal();
                    }
                }
            });
        },

        _openMobileLoginModal: function() {
            var widget = this;

            // remove any other login modals on the page
            widget.element.remove( '.user-rating-mobile-login-modal' );

            // prevent body content from scrolling behind modal
            $( 'body' ).on( 'touchmove.userRating.preventScrolling', function( event ) {
                event.preventDefault();
            });

            // create and append the modal
            $( '<div class="user-rating-mobile-login-modal">' )
                .css({
                    position: 'fixed',
                    top: 0,
                    left: 0,
                    zIndex: 51,
                    width: '100%',
                    height: '100%'
                })
                .html(
                    '<h2>' +
                        'Sign up to log in to your AllMusic account ' +
                        'to rate albums and get personalized recommendations.' +
                    '</h2>' +
                    '<p>' +
                        '<a href="/join" class="button">Sign Up</a>' +
                    '</p>' +
                    '<p>' +
                        '<a href="#" class="button open-login-modal">Log In</a>' +
                    '</p>' +
                    '<p>' +
                        '<a href="/oauth/facebook" class="button facebook-login">' +
                            'Log in using Facebook <span class="icon"></span>' +
                        '</a>' +
                    '</p>' +
                    '<a href="#" class="close">CLOSE [X]</a>'
                )
                .appendTo( 'body' )
                .find( '.close' )
                .click( function( event ) {
                    event.preventDefault();
                    $(this).parent().remove();
                    $( 'body' ).unbind( 'touchmove.userRating.preventScrolling' );
                });

        },

        _openMobileRatingModal: function() {
            var widget = this,
                $modal,
                content;

            // remove any other login modals on the page
            widget.element.remove( '.user-rating-mobile-rating-modal' );

            // prevent body content from scrolling behind modal
            $("body").addClass("modal-open");

            content = '<h1>Your Rating:</h1>';

            if ( widget.options.artist ) {
                content += '<p class="artist">' + widget.options.artist + '</p>';
            }

            if ( widget.options.title ) {
                content += '<p class="title">' + widget.options.title + '</p>';
            }

            content += '<p class="mobile-user-rating"></p>' +
                       '<a href="#" class="close">CLOSE [X]</a>';

            // create and append the modal
            $modal = $( '<div class="user-rating-mobile-rating-modal">' )
                .css({
                    position: 'fixed',
                    top: 0,
                    left: 0,
                    zIndex: 51,
                    width: '100%',
                    height: '100%'
                })
                .html( content );

            $modal.find( '.mobile-user-rating' )
                  .addClass( 'rating-user-' + widget.options.score );

            $modal.find( '.close' ).click( function( event ) {
                    event.preventDefault();

                    // destroy the modal
                    $(this).closest( '.user-rating-mobile-rating-modal' ).remove();

                    // re-enable scrolling
                    $("body").removeClass("modal-open");
                });

            $modal.appendTo( 'body' );

            $modal.find( '.mobile-user-rating' ).on({

                'touchstart.userRating.touch touchmove.userRating.touch': function( event ) {
                    event.preventDefault();

                    // determine score, based on mouse position
                    var score = widget._eventToScore(event);

                    // add sprite class to display the current score
                    $(this).removeClass( widget.options.spriteClasses.join(' ') )
                           .addClass( 'rating-user-' + score );
                },

                'touchend.userRating.touch': function( event ) {
                    event.preventDefault();

                    // determine score, based on mouse position
                    var score = widget._eventToScore(event);

                    // store new score to widget
                    widget.options.score = score;

                    // set sprite class to display the new score
                    widget._displayRating( widget.options.score );

                    // send new rating to rating API
                    widget._saveRating();

                    // close the modal
                    $(this).closest( '.user-rating-mobile-rating-modal' ).remove();

                    // unlock body scrolling
                    $( 'body' ).unbind( 'touchmove.userRating.preventScrolling' );
                },

                'touchcancel.userRating.touch': function( event ) {
                    event.preventDefault();

                    // add sprite class to display the current score
                    $(this).removeClass( widget.options.spriteClasses.join(' ') )
                        .addClass( 'rating-user-' + widget.options.score );
                },

                'click.userRating.touch': function( event ) {
                    event.preventDefault();

                    // determine score, based on mouse position
                    var score = widget._eventToScore(event);

                    // store new score to widget
                    widget.options.score = score;

                    // set sprite class to display the new score
                    widget._displayRating( widget.options.score );

                    // send new rating to rating API
                    widget._saveRating();
                },

                'mousemove.userRating.touch': function( event ) {
                    // if not on a touch-enabled device...
                    if ( ! Modernizr.touch ) {
                        // determine score, based on mouse position
                        var score = widget._eventToScore(event);

                        // add sprite class to display the current score
                        $(this).removeClass( widget.options.spriteClasses.join(' ') )
                            .addClass( 'rating-user-' + score );
                    }
                },

                'mouseout.userRating.touch': function( event ) {
                    // if not on a touch-enabled device...
                    if ( ! Modernizr.touch ) {
                        // reset sprite class to display the last selected score
                        if ( widget.options.score > 0 ) {
                            // add sprite class to display the current score
                            $(this).removeClass( widget.options.spriteClasses.join(' ') )
                                .addClass( 'rating-user-' + widget.options.score );
                        } else {
                            // add sprite class to display the current score
                            $(this).removeClass( widget.options.spriteClasses.join(' ') )
                                .addClass( 'rating-user-' + 0 );
                        }
                    }
                }

            });
        },

        _saveRating: function() {
            var widget = this;

            // send new rating to rating API
            $.post('/rating/save', {
                    id:    widget.options.id,
                    score: widget.options.score * 10
                }, function() {
                    // once the rating has been submitted to the API,
                    // trigger a "change" event to fire any bound logic

                    // Find any user ratings in the tooltip or on the page
                    var $ratings = $(window.parent.document).find('.user-rating').filter( '[data-id="' + widget.options.id + '"]' )
                        .each( function() {
                            var $this = $(this);
                            $this.removeClass('rating-user-0');
                            $this.removeClass('rating-user-1');
                            $this.removeClass('rating-user-2');
                            $this.removeClass('rating-user-3');
                            $this.removeClass('rating-user-4');
                            $this.removeClass('rating-user-5');
                            $this.removeClass('rating-user-6');
                            $this.removeClass('rating-user-7');
                            $this.removeClass('rating-user-8');
                            $this.removeClass('rating-user-9');
                            $this.removeClass('rating-user-10');
                            $this.userRating({ score:  widget.options.score });
                        });

                    // update any average user rating widgets on the page w/ same id
                    if ( $().averageUserRating ) {
                        var $avg = $(window.parent.document).find('.average-user-rating').filter( '[data-id="' + widget.options.id + '"]' );
                        $avg.averageUserRating( 'refresh' );
                    }
                }
            );
        }

    });

    initUserRatings = function() {
        var ids = [],
            $ratings,
            albumRating = sessionStorage.getItem('albumRating'),
            albumId = sessionStorage.getItem('albumId')

        // if browser supports sessionStorage and we have both an albumId and rating stored there,
        // then grab the values from sessionStorage and initialize the widget with them.
        if(albumRating && albumId) {
            // post the rating to the rating API
            $.post('/rating/save', {
                id:    albumId,
                score: albumRating * 10
            }, function() {
                // once the rating has been submitted to the API, we
                // need to apply the rating class to the user rating area
                // so that we can show the user his/her new rating
                $('.user-rating').addClass('rating-user-' + albumRating);

            });

            // clean sessionStorage variable
            sessionStorage.removeItem('albumRating');
            sessionStorage.removeItem('albumId');
        }

        $ratings = $(this).find( '.user-rating' )
                        .not( ':allmusic-userRating' )
                        .each( function() {
                            var $this = $(this),
                                // id = $this.data( 'id' ),
                                score = $this.data( 'score' );

                            if ( score !== undefined ) {
                                $this.userRating({ score: Math.ceil( score / 10 ) });
                            } else {
                                $this.userRating();

                                ids.push( $this.data( 'id' ) );
                            }
                        });

        while ( ids.length ) {
            $.manageAjax.add( 'allmusic.userRating', {
                url: '/rating/user/' + ids.splice( 0, 20 ).join( ',' ),
                dataType: 'json',
                cache: false,
                success: function( ratings ) {
                    if ( ratings.length ) {
                        for ( var i in ratings ) {
                            var rating = ratings[ i ];

                            $ratings.filter( '[data-id="' + rating.itemId + '"]' )
                                .userRating({ score: Math.ceil( rating.score / 10 ) });
                        }
                    }
                }
            });
        }
    };

    // Widgetize the available user ratings & init them
    initUserRatings.call( document );

}( jQuery ));
;(function( $ ) {

    $.widget( 'allmusic.lightbox', {

        // These options will be used as defaults
        options: {
            'class': '',

            // Styles that will be applied
            styles: {

                // Styles for the container
                container: {
                    position: 'fixed',
                    display: 'none',
                    top: '0',
                    left: '0',
                    width: '100%',
                    height: '100%',
                    'background-color': 'rgba(0, 0, 0, .92)',
                    // Z index above the header
                    'z-index': 20001
                },

                modal: {
                    overflow: 'hidden',
                    position: 'absolute',
                    top: '50%',
                    left: '50%',
                    padding: '0',
                    margin: '0 auto',
                    'background-color': 'transparent'
                },

                close: {
                    position: 'absolute',
                    top: '30px',
                    right: '50px',
                    float: 'right',
                    'font-size': '14px',
                    'font-weight': 'bold',
                    'text-decoration': 'none',
                    color: '#00c3ff',
                    cursor: 'pointer'
                },

                // Close button hover on styles
                closeMouseEnter: {
                    color: '#0089c1'
                },

                // Close button hover off styles
                closeMouseLeave: {
                    color: '#00c3ff'
                }

            }

        },

        _create: function() {
        },

        // set up the widget (options & event bindings)
        _init: function() {
            if ( !isMobile_AllMusic ) {
                var self = this;
                // Bind the element on click to open the box
                self.element.on('click.lightbox', function () {
                    // if movie cover - class embiggen, set as true
                    self.open(self.element.hasClass('embiggen'));
                });
            }
        },

        ////
        //  Function to open the box

        open: function(closebox) {
            var self = this;

            if (closebox === true) {
                // Construct lightbox element
                var $lightbox = $(
                    '<div class="lightbox-container ' + self.options['class'] + '">'
                    +   '    <div class="lightbox-modal">'
                    +   '        <div class="lightbox-content"></div>   '
                    +   '    </div>'
                    +   '    <span class="lightbox-close">CLOSE [X]</span>'
                    +   '</div>'
                );
            } else {
                // Construct lightbox element
                var $lightbox = $(
                    '<div class="lightbox-container ' + self.options['class'] + '">'
                    +   '    <div class="lightbox-modal">'
                    +   '        <div class="lightbox-content"></div>   '
                    +   '        <span class="lightbox-close">CLOSE [X]</span>'
                    +   '    </div>'
                    +   '</div>'
                );
            }

            // Append it to overflow container so that the z-index works with the header
            $('.overflow-container').append($lightbox);

            // Apply the basic styles
            var $lightboxContainer = $('.lightbox-container').css( this.options.styles.container );

            // Apply the styles for the modal
            var $lightboxModal = $lightboxContainer.find('.lightbox-modal').css( this.options.styles.modal );

            // Apply the styles for the close button
            var $lightboxClose = $lightboxContainer.find('.lightbox-close').css( this.options.styles.close );

            // Grab the JSON object
            var data = self.element.data('lightbox');


            // If there is an image load it to the content as a img element so we avoid cross browser ish
            if ( data ) {

                if ( data.image ){

                    // Construct an image
                    var html = '<img src="' + data.image.url + '"';

                    // If we have an image width set it
                    if ( data.image.width ) {
                        html += ' width="' + data.image.width + '"';
                    }

                    // If we have an image height set it
                    if ( data.image.height ) {
                        html += ' height="' + data.image.height + '"';
                    }

                    // Close the image tag
                    html += '>';

                    // If there is an author append a div
                    if ( data.image.author ) {
                        html += '<div class="author">photo credit:' + data.image.author + '</div>';
                    }

                    // If there is a copyright append a div
                    if (  data.image.copyrightOwner ) {
                        html += '<div class="copyright">photo credit:' + data.image.copyrightOwner + '</div>';
                    }

                    // Set the contents to the html
                    self.html( html );

                } else if ( data.url ) {

                    // Else if there is a url load it in to the content
                    $lightboxContainer.find('.lightbox-content').load( data.url );

                }

            }

            // Close button binds
            $lightboxClose.on('click.lightbox', function() {

                self.close();

            }).on('mouseenter.lightbox', function() {
                // On mouse enter apply the mouse enter styles
                $(this).css( self.options.styles.closeMouseEnter );

            }).on('mouseleave.lightbox', function() {
                // On mouse leave apply the mouse leave styles
                $(this).css(self.options.styles.closeMouseLeave);
            });

            $(document).on('keyup.lightbox', function(e) {

                if(e.keyCode == 27) {
                    self.close();
                }

            });

            // Lightbox - Click bind to close if not targeting the modal
            $lightboxContainer.on('click.lightbox', function(e){
                // If this (or any ancesctors) are not .lightbox-modal then we have clicked outside of the modal so close it
                if ( $(e.target).closest('.lightbox-modal').length == 0) {
                    self.close();
                }
            });


            // Fade in the lightbox
            $lightboxContainer.fadeIn(100);

            // Center after fade in because the content does not have a size until displayed
            this.center();

        },

        ////
        //  Function to hide the lightbox

        hide: function () {
            $('.lightbox-container').css('display', 'none');
            // Use opacity on modal so that we can have DOM structure for width / height center - then fade in the grey bkg and show the modal with the show function
            $('.lightbox-modal').css('opacity', '0');
        },


        ////
        //  Function to show an already constructed (but hidden) lightbox

        show: function() {
            var self = this;
            $('.lightbox-container').fadeIn(100, function(){
                // Animation complete
                self.center();
                $('.lightbox-modal').css('opacity', '1');
            });
        },


        ////
        //  Function to close the box

        close: function() {
            $('.lightbox-container').fadeOut(100, function(){
                $(this).remove();
            });
        },

        ////
        //  Function to prepend content to the lightbox

        prepend: function (html) {
            $('.lightbox-content').prepend(html);

            // Center after prepending because the content could change the width
            // The center is here in addition to the open method in case the content happens to be changed while already open
            this.center();
        },

        ////
        //  Function to replace the html content of the lightbox

        html: function (html) {
            $('.lightbox-content').html(html);

            // Center after changing html because the content could change the width
            // The center is here in addition to the open method in case the content happens to be changed while already open
            this.center();
        },

        ////
        //  Function to horizontally & vertically center the modal

        center: function () {
            // Grab the modal
            var $lightboxModal = $('.lightbox-modal');

            // Vertical - Adjust it by moving it left half of its entire outer height (height + padding)
            // Adjust for space of the header
            var top = ( $lightboxModal.outerHeight() / 2 ) - ( $('.stripe-container.header-main-nav').outerHeight() / 2 );

            var header = $(document).find('.max-header');
            var adjust = 49
            if($(header).hasClass('fixed')) {
                adjust = 0;
            }

            // Horizontal - Adjust it by moving it left half of its entire outer width (width + padding)
            var left = ( $lightboxModal.outerWidth() / 2 );

            // Reset the css to 50%s
            $lightboxModal.css({

                top: (($(window).height() / 2) - adjust)+'px',
                left: '50%',
                'margin-left': '0',
                'margin-top': '0'

            }).css({

                // Now adjust
                'margin-left': '-=' + left,
                'margin-top': '-=' + top

            });

        }

    });


    // Apply our widget to all .lightbox elements
    $('[data-lightbox]').lightbox();


}( jQuery ));
;(function( $ ) {
    $.widget( 'allmusic.tooltip', {

        // These options will be used as defaults
        options: {
            id: '',
            thumbnail: false,
            position: {
                my: 'left center',
                at: 'right center',
                adjust: {
                    x: 5
                }
            }
        },

        // first set up the widget
        _create: function() {
            var widget = this;

            // qTip's internal iOS sniffer doesn't work any more, so let's write our own
            var isiOS = navigator.userAgent.match(/(iPhone OS)/i) != null;
            // if we're on iOS, don't fire tooltip
            if(isiOS) {return false;}

            if(isMobile_AllMusic) {return false;}

            $.extend( widget.options, widget.element.data( 'tooltip' ) );

            if ( $().qtip ) {
                widget.element.qtip({
                    position: {
                        my: widget.options.position.my,
                        at: widget.options.position.at,
                        viewport: $(window),
                        adjust: widget.options.position.adjust
                    },
                    style: {
                        classes: 'tooltip',
                        tip: {
                            width: 16,
                            height: 8
                        }
                    },
                    show: {
                        solo: true,
                        delay: 800
                    },
                    hide: {
                        delay: 800,
                        fixed: true,
                        inactive: 5000,
                        event: 'mouseleave '
                    },
                    content: {
                        text: function(event, api) {
                            $.ajax({
                                url: widget._url(),
                                data: { thumbnail: widget.options.thumbnail },
                                loading: false,
                                cache: ( User.loggedIn === false )
                            })
                            .then(function(content){
                                if ( content.length ) {
                                    var $content = $(content),
                                        $canvas,
                                        context;

                                    initUserRatings.call( $content );

                                    // log event that user got a toolip of that type
                                    var tooltip_type = widget._type();
                                    if ( tooltip_type.length ) {
                                        allmusic.gaTrackEvent({data: [ "Tooltip", "Interaction", "User Launches " + tooltip_type + " Tooltip" ]});
                                    }

                                    if ( ! User.loggedIn ) {
                                        $canvas = $content.find( 'canvas' );

                                        if ( $canvas.length && $canvas[0].getContext ) {
                                            widget._drawLoggedOutTip( $canvas[0] );
                                        }
                                    }

                                    api.set( 'content.text' , $content);
                                } else {
                                    this.destroy();
                                }
                            });

                            return 'Loading...';
                        }

                    },
                    events: {
                        render: function(e, api) {
                            $.fn.qtip.zindex = 9999;
                        }
                    }
                });
            }
        },

        _type: function() {
            var widget = this,
                tooltip_type = '',
                patterns = {
                    Album:   /^MW[0-9]{10}$/i,
                    Artist:  /^MN[0-9]{10}$/i,
                    Release: /^MR[0-9]{10}$/i
                };

            for ( var type in patterns ) {
                if ( patterns[type].test(widget.options.id) ) {
                    tooltip_type = type;
                }
            }

            return tooltip_type;
        },

        _url: function() {
            var widget = this,
                url = '',
                type = widget._type();

            url = '/tooltip/' + type + '/' + widget.options.id;

            return url;
        },

        _drawLoggedOutTip: function( canvas ) {
            context = canvas.getContext( '2d' );

            // Set properties
            context.fillStyle = 'white';
            context.strokeStyle = '#d3d3d3';
            context.lineWidth = 1;
            context.lineJoin = 'miter';
            context.miterLimit = 100;

            // Draw the tip
            context.beginPath();
            context.moveTo(0, 6);
            context.lineTo(6, 0);
            context.lineTo(12, 6);
            context.closePath();
            context.stroke();
            context.fill();
        }
    });

    $( '[data-tooltip]:visible' ).tooltip();
}( jQuery ));
;$(function() {
    $.getJSON(cdnURL+'/json/gaEvents.json', function(gaEvents) {
        if (gaEvents) {
            for (var scope in gaEvents) {
                if (gaEvents[scope]) {
                    for (var selector in gaEvents[scope]) {
                        var e = gaEvents[scope][selector];
                        $(scope).on(e.event, selector, e.data, allmusic.gaTrackEvent);
                    }
                }
            }
        }
    });
});

// import or init the namespace
;
var allmusic = allmusic || {};

allmusic.gaTrackEvent = function(e) {
    try {
        var $this = $(this);

        // If GA label on link then set label to that
        if ( $this.data('ga-label') ) {
            e.data[2] = e.data[2].concat($this.data('ga-label'));
        }

        ga('send', 'event', e.data[0], e.data[1], e.data[2]);

        if (location.hash == '#ga') {
            console.log('GA Event Fired', e.data);
            if (e.stopPropagation){
                e.stopPropagation();
            }
            return false;
        }
    } catch(err) {
        $.error(err);
    }
}
;
$(function () {
    // instanciate an AJAXManager
    $.manageAjax.create('allmusic.headerJS', {
        cacheResponse: false,
        queue: false
    });

    // on page load, grab 8 new releases for the subnav
    $.manageAjax.add('allmusic.headerJS', {
        url: '//' + urlSubdomain + '.allmusic.com/subnav/get_new_releases/8',
        type: 'GET',
        success: function (data) {
            var contentDiv = $(document).find('.sub-nav-content');
            $(contentDiv).html(data);
            $('div.subnav-featured-new-releases').css('display', 'block');
        }
    });

    // on page load, grab 4 blog images, titles and links for the subnav
    $.manageAjax.add('allmusic.headerJS', {
        url: '//' + urlSubdomain + '.allmusic.com/subnav/get_blog',
        type: 'GET',
        success: function (data) {
            var contentDiv = $(document).find('.sub-nav-blog-content');
            $(contentDiv).html(data);
            $('div.subnav-blog-articles').css('display', 'block');
        }
    });

    ////
    //  Vars used with the fixed header & flag snap interaction

    // Scoped variable to hold the callback in setup
    var headerScrollInteraction;

    //  Vars used with the nav hover
    var navHoverTimeout;

    //  Vars used with the fixed header
    var $mainNav = $('.header-main-nav'),
        $maxNav = $('.max-header');

    //  Vars used with search
    var $searchContainer = $('.search-container'),
        $searchInput = $('.search-container input[type=search]'),
        $searchInputBox;

    // on page load, find the search input box and set it to blank
    // prevents some browsers from "remembering" last term searched
    $($searchInput).val('');

    /* MOBILE HEADER - Hamburger menu bind and nav display */
    enquire.register("screen and (max-width: " + mobileMaxWidth + "px)", {

        // REQUIRED
        // Triggered when the media query transitions
        // from *unmatched* to *matched*
        match: function () {
            // Bind the site nav
            $('.mobile-menu').on('touchstart.mobile click.mobile', function (e) {
                // Prevent default for the touchstart event ( because we bind both click and touchstart )
                // We are also binding touchstart because it fires instantly where the click has a delay on mobile
                e.preventDefault();

                if (!$('.mobile-site-nav').hasClass('active')) {
                    $('.mobile-site-nav').css('top', 0);
                }

                //$('#cmmobadtag_foot').toggle('visability');
                $('.mobile-site-nav').toggleClass('active');
                $('.overflow-container').toggleClass('mobile-nav-fix');

                // testing
                $('.stripe-container.footer-leaderboard').hide();
            });

            // Remove junk ( possible in line style left overs from using .animate )
            $('.logo').removeAttr('style');
        },

        // OPTIONAL
        // Triggered when the media query transitions
        // from a *matched* to *unmatched*
        unmatch: function () {
            // Unbind both .mobile scoped events
            $('.mobile-menu').unbind('.mobile');

            // Remove any possible active class on the nav menu
            $('.mobile-site-nav').removeClass('active');

            // testing
            $('.stripe-container.footer-leaderboard').show();
        },

        // OPTIONAL
        // Triggered once immediately upon registration of handler
        setup: function () {
            // Create a mobile nav menu
            var $menu = $('<ul class="mobile-site-nav"></ul>');
            $('<li class="mobile-site-nav-header clearfix"><div class="mobile-site-nav-logo"></div><div class="mobile-site-nav-close"><a href="javascript:void(0);"></a></div></li>').appendTo($menu);

            // Loop site nav links - Clone and wrap in li - append to the menu
            $('.site-nav > ul > li > a').each(function () {
                if (($(this).attr("class") !== 'advanced-search-link') && ($(this).attr("class") !== 'videos-link')) { // skip advanced search and videos
                    $(this).clone().appendTo($menu).wrap('<li />');
                }
            });

            if (User.loggedIn) {
                $('<li class="mobile-nav-notifications"></li>').appendTo($menu);
                $('<li class="mobile-nav-account-settings"><a href="/user/profile">Account Settings</a></li>').appendTo($menu);
                $('<li><a href="/user/sign-out">Log Out</a></li>').appendTo($menu);
            } else {
                $('<li><a href="#" class="open-login-modal">Log In</a></li>').appendTo($menu);
                $('<li><a href="/join">Sign Up</a></li>').appendTo($menu);
            }

            $('body').append($menu);

            // get notifications count
            $(document).find('.mobile-nav-notifications').load('/user/mobile_nav_notifications');

            $('.mobile-site-nav-close').click(function (e) {
                e.preventDefault();

                // Remove any possible active class on the nav menu
                $('.mobile-site-nav').removeClass('active');
                $('.overflow-container').toggleClass('mobile-nav-fix');
            });
        },

        // OPTIONAL
        // Defaults to false
        // If true, defers execution of the setup function
        // until the first media query is matched (still just once)
        deferSetup: true
    });

    /* LOCKING HEADER - Desktop */
    enquire.register("screen and (min-width: " + fullMinWidth + "px)", {
        match: function () {
            // Bind header unsnapped scroll interaction
            $(window).on('scroll.header-scroll-interaction', headerScrollInteraction);

            // Call window scroll to reset scroll position ( and fix the header in case they size back up after being scrolled down)
            $(window).scroll();
        },

        // Unmatch remove the scroll bind
        unmatch: function () {
            // Unbind header interaction
            $(window).unbind('.header-scroll-interaction');

            // mobile does not have a fixed mainNav, so remove the class
            if ($($mainNav).hasClass('fixed')) {
                $mainNav.removeClass('fixed');
            }

            // mobile does not have a fixed maxNav, so remove the class
            if ($($maxNav).hasClass('fixed')) {
                $maxNav.removeClass('fixed');
            }
        },

        // Determine if we perform any flag interaction and set up vars
        setup: function () {
            // Set window scroll callback for header locking & flag snapping interaction
            headerScrollInteraction = function () {

                // Header leaderboard ad container
                var $leaderboard = $('.header-leaderboard'),
                    $overflowContainer = $('.overflow-container'),
                    $contentContainer = $('.content-container');

                // Position used when scrolling back up ( to unlock nav and ad )
                var scrollBreakpoint = $leaderboard.outerHeight();

                // weirdness happens if there isn't an ad in the leaderboard
                if (scrollBreakpoint == 0) {
                    scrollBreakpoint = 49;
                }

                // Current scroll position
                var currentScroll = $('html').scrollTop() || $('body').scrollTop();

                // If our current scroll is further down than target, make
                if (isMobile_AllMusic) {
                    // if mobile, don't fix header
                    headerIsFixed = false;
                } else {
                    headerIsFixed = ( currentScroll >= scrollBreakpoint );
                }

                $mainNav.toggleClass('fixed', headerIsFixed);
                $maxNav.toggleClass('fixed', headerIsFixed);

                if (headerIsFixed) {
                    // since nav is removed from document flow,
                    // we need to replace move background to keep locked
                    if (($overflowContainer.hasClass('album') || $overflowContainer.hasClass('artist'))) {
                        $overflowContainer.css('background-position', '0 -99px');
                    }

                    if ($overflowContainer.hasClass('collections-cold-start') || $overflowContainer.hasClass('not-logged-in') || $overflowContainer.hasClass('cold-start')) {
                        $overflowContainer.css('background-position', 'center -140px');
                        $contentContainer.css('background-position', 'center top');
                    }

                    if ($mainNav.hasClass('fixed-internal')) {
                        $leaderboard.css('margin-top', $maxNav.outerHeight());
                    } else {
                        $leaderboard.css('margin-bottom', $maxNav.outerHeight());
                    }

                    // find the current position of the search box and position the typeahead results directly below it
                    // if a site skin appears, we need to override the left positioning that's set in the typeahead widget
                    var search_box_position = $(document).find('.search-container').position(),
                        searchBoxLeft = $(window).scrollLeft(),
                        typeahead_result_container = $(document).find('.allmusic-typeahead'),
                        realPositionX = 0;

                    // determine if a site skin has moved the search box
                    if (search_box_position && searchBoxLeft) {
                        realPositionX = search_box_position.left - searchBoxLeft;
                    }

                    // if widget not in right place, offset both axes. Else, just offset from top
                    if (typeahead_result_container && realPositionX) {
                        $(typeahead_result_container).css('top', '39px').css('left', realPositionX + 'px');
                    } else {
                        $(typeahead_result_container).css('top', '39px');
                    }

                } else {
                    // since nav is back,
                    // we need to move background to keep locked
                    if (($overflowContainer.hasClass('album') || $overflowContainer.hasClass('artist'))) {
                        $overflowContainer.css('background-position', '0 0');
                    }

                    if ($overflowContainer.hasClass('collections-cold-start') || $overflowContainer.hasClass('not-logged-in') || $overflowContainer.hasClass('cold-start')) {
                        $overflowContainer.css('background-position', 'center -41px');
                        $contentContainer.css('background-position', 'center top');
                    }

                    // since nav is in the document flow,
                    // we need to remove any replacement margin we may have used
                    $leaderboard.css('margin-bottom', 0);

                    // find the current position of the search box and position the typeahead results directly below it
                    // if a site skin appears, we need to override the left positioning that's set in the typeahead widget
                    var search_box_position = $(document).find('.search-container').position(),
                        searchBoxLeft = $(window).scrollLeft(),
                        typeahead_result_container = $(document).find('.allmusic-typeahead'),
                        realPositionX = 0;

                    // determine if a site skin has moved the search box
                    realPositionX = search_box_position.left - searchBoxLeft;

                    // if we have
                    if (typeahead_result_container && realPositionX) {
                        $(typeahead_result_container).css('top', '53px').css('left', realPositionX + 'px');
                    } else {
                        $(typeahead_result_container).css('top', '53px');
                    }
                }
            };
        },

        // If true, defers execution of the setup function
        // until the first media query is matched (still just once)
        deferSetup: true

    }).listen(500);

    enquire.register("screen and (min-width: " + fullMinWidth + "px)", {
        match: function () {
            //  Hover over the nav menu items - Add some delay before removing the active class
            (function () {
                // Bind header unsnapped scroll interaction
                $('.site-nav > ul > li > a').on('mouseenter.navHoverInteraction', function () {

                    // Remove any actives
                    $('.site-nav li.active').removeClass('active');

                    // Kill the timeout
                    window.clearTimeout(navHoverTimeout);

                    // Show the new active
                    $(this).parent().addClass('active');
                });

                // Bind header hover interaction
                $('.site-nav > ul > li > a').on('mouseleave.navHoverInteraction', function () {
                    navHoverTimeout = setTimeout(function () {
                        // Remove any active menus
                        $('.site-nav li.active').removeClass('active');
                    }, 500);
                });
            })();

            // Animate search box
            (function () {
                // make the search box be normal width on initial switch
                $($searchContainer).css("width", "239px");
                $($searchInput).css("width", "197px");

                // on focus, animate the search box to be larger
                $($searchInput).focus(function () {
                    $($searchContainer).animate({width: '302px'});
                    $($searchInput).animate({width: '262px'});
                });

                // on blur, check the input and reset box if empty
                $($searchInput).blur(function () {
                    var $this = $(this),
                        inputText = $this.val();

                    if (inputText == '') {
                        // empty box, animate search elements back to default width
                        $($searchContainer).animate({width: '239px'});
                        $($searchInput).animate({width: '197px'});
                    }
                });
            })();
        },

        unmatch: function () {
            //  Unbind hover delay
            (function () {
                // Remove any actives
                $('.site-nav li.active').removeClass('active');

                // Kill the timeout
                window.clearTimeout(navHoverTimeout);

                // Unbind the nav hover interactions ( both mouse enter & leave because they are scoped to .navHoverInteraction )
                $('.site-nav > ul > li > a').unbind('.navHoverInteraction');
            })();

            // force the search box to be the mobile width
            (function () {
                $($searchContainer).css('width', '94.5%');
                $($searchInput).css('width', '88%');
            })();
        },

        setup: function () {
            (function () {

            })();
        },
        // If true, defers execution of the setup function
        // until the first media query is matched (still just once)
        deferSetup: true
    });


    /**
     * Discover nav toggles
     */
    $('.site-nav').on({
        mouseenter: function () {
            // start off by hiding arrows for all but genre
            $('.moods-arrow, .themes-arrow').hide();
            $('.genres-arrow').show().css('display', 'inline-block');

            // set listener for hovering over li with class of 'discover-genres', 'discover-moods', and 'discover-themes'
            $('.discover-drop-trigger').on({
                mouseenter: function () {
                    var $this = $(this),
                        $id = $($this).attr('id');
                    // remove currently active, hide arrows, and make current active
                    $('ul.discover-nav').find('li.active').removeClass('active');
                    $('.genres-arrow, .moods-arrow, .themes-arrow').hide();
                    $($this).addClass('active');
                    switch ($id) {
                        case 'discover-moods':
                            $('.moods-arrow').show().css('display', 'inline-block');
                            $('ul.discover-theme-secondary').css('display', 'none');
                            $('ul.discover-genre-secondary').css('display', 'none');
                            $('ul.discover-mood-secondary').css('display', 'block');
                            break;
                        case 'discover-themes':
                            $('.themes-arrow').show().css('display', 'inline-block');
                            $('ul.discover-mood-secondary').css('display', 'none');
                            $('ul.discover-genre-secondary').css('display', 'none');
                            $('ul.discover-theme-secondary').css('display', 'block');
                            break;
                        default:
                            $('.genres-arrow').show().css('display', 'inline-block');
                            $('ul.discover-mood-secondary').css('display', 'none');
                            $('ul.discover-theme-secondary').css('display', 'none');
                            $('ul.discover-genre-secondary').css('display', 'block');
                    }
                }
                // no mouseleave as we want to keep state
            });
        },
        mouseleave: function () {
            $('ul.discover-nav').find('li.active').removeClass('active');
            $('ul.discover-mood-secondary').css('display', 'none');
            $('ul.discover-genre-secondary').css('display', '');
            $('ul.discover-theme-secondary').css('display', 'none');
        }
    });

    // Call the window scroll on setup ( for FF to set proper window scroll position if you refresh 1/2 way down page for example )
    $(window).scroll();

    // User nav/menu; load logged-in or logged out HTML snippet,
    // based on current user state; timestamp appended to prevent browser caching
    $('.user-nav').load('//' + urlSubdomain + '.allmusic.com/user/nav?' + Date.now().toString(), function () {
        if (location.pathname != '/user/paid-subscription') {
            // run after login nav updated
            $.getScript("/js/common/account-expired.js")
        }
    });

    // user nav drop-down menu
    $(document).on('click', '.user-menu', function () {
        var $this = $(this);

        $this.addClass('open');

        $(document).on('click.userMenu', function () {
            if ($(this).closest('.user-menu > ul').length === 0) {
                $('.user-menu').removeClass('open');
                $(document).off('click.userMenu');
            }
        });
    });

    // click action for My Profile in header nav
    $(document).on('click', 'li a.my-profile-link', function (e) {

        e.preventDefault();

        // is user logged in?
        if (User.loggedIn) {

            $.manageAjax.add('allmusic.headerJS', {
                url: '/check_profile',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (response.result) {
                        // user has a public profile, so redirect them to it
                        window.location.href = '/profile/' + response.result;
                    } else {
                        if (isMobile_AllMusic) {
                            // user does not have a public profile set, so display create profile modal
                            var $modal = $('<div class="create-profile-modal">'),
                                $iframe = $('<iframe src="/user/profile-settings/mobile_modal">');

                            $modal.css({
                                position: 'fixed',
                                'overflow-y': 'auto',
                                top: '0px',
                                left: '0px',
                                width: '100%',
                                height: '100%',
                                'background-color': 'rgba(0, 0, 0, 0.93)',
                                'z-index': 20000
                            });

                            $iframe.css({
                                overflow: 'hidden',
                                display: 'block',
                                width: '100%',
                                height: '500px',
                                margin: '0 auto 0',
                                border: 0,
                                'background-color': 'transparent'
                            });
                        } else {
                            // user does not have a public profile set, so display create profile modal
                            var $modal = $('<div class="create-profile-modal">'),
                                $iframe = $('<iframe src="/user/profile-settings/modal">');

                            $modal.css({
                                position: 'fixed',
                                'overflow-y': 'auto',
                                top: '0px',
                                left: '0px',
                                width: '100%',
                                height: '100%',
                                'background-color': 'rgba(0, 0, 0, 0.93)',
                                'z-index': 20000
                            });

                            $iframe.css({
                                overflow: 'hidden',
                                display: 'block',
                                width: '960px',
                                height: '500px',
                                margin: '232px auto 0',
                                border: 0,
                                'background-color': 'transparent'
                            });
                        }

                        $modal.on({
                            click: function () {
                                // if user clicks outside the iframe, close/remove the modal
                                $(this).remove();
                            },
                            keydown: function (e) {
                                // if user hits ESC, close/remove the modal
                                if (e.which == 27) {
                                    $(this).remove();
                                }
                            }
                        });

                        $modal.append($iframe);

                        $('body').append($modal);

                    }
                }
            });

        } else {

            // user not logged in; throw login modal
            var $modal = $('<div class="login-modal">'),
                $iframe = $('<iframe src="/sign-in">');

            $modal.css({
                position: 'fixed',
                'overflow-y': 'auto',
                top: '0px',
                left: '0px',
                width: '100%',
                height: '100%',
                'background-color': 'rgba(0, 0, 0, 0.93)',
                'z-index': 20000
            });

            $iframe.css({
                overflow: 'hidden',
                display: 'block',
                width: '960px',
                height: '500px',
                margin: '232px auto 0',
                border: 0,
                'background-color': 'transparent'
            });

            $modal.on({
                click: function () {
                    // if user clicks outside the iframe, close/remove the modal
                    $(this).remove();
                },
                keydown: function (e) {
                    // if user hits ESC, close/remove the modal
                    if (e.which == 27) {
                        $(this).remove();
                    }
                }
            });

            $modal.append($iframe);

            $('body').append($modal);

        }

    });

    // User notifications; load logged-in or logged out HTML snippet.
    // based on current user state; timestamp appended to prevent browser caching
    if (User.loggedIn) {
        $('.user-notifications').load('//' + urlSubdomain + '.allmusic.com/user/user_nav_notifications?' + Date.now().toString());
    }

    // user notifications drop-down menu
    $(document).on('click', '.user-notification-icon', function () {
        var $this = $(this);

        $this.addClass('open');

        // AJAX call to wipe the number of notifications
        $.manageAjax.add('allmusic.headerJS', {
            url: '/user/update_notified',
            type: 'GET'
        });

        // find the flag item and remove the has-notifications class
        $('.flag').removeClass('has-notifications');

        // clear the number from the notifications-flag-inner class
        $('.notifications-flag-inner').html('');

        $(document).on('click.userNotificationIcon', function () {
            if ($(this).closest('.user-notification-icon > ul').length === 0) {
                $('.user-notification-icon').removeClass('open');
                $(document).off('click.userNotificationIcon');
            }
        });

    });

    // set-up interaction for site search
    $searchInputBox = $('.site-search-input')
        .keydown(function (e) {
            if (e.which == 13) {
                $(this).closest('form').submit();
            }
        })
        .typeahead({
            appendTo: '.search-container',
            select: function (data) {
                window.location = data.url;
            }
        })
        .focus(function () {
            $(this).siblings(':submit').addClass('focus');
        })
        .blur(function () {
            $(this).siblings(':submit').removeClass('focus');
        });

    // prevent search form from submitting with empty text input
    $searchInputBox.closest('form')
        .submit(function () {
            return ( $searchInputBox.val().length > 0 );
        });
});
;$(function() {
    // log-in modal
    $( document ).on( 'click', '.open-login-modal', function(e) {
        e.preventDefault();

        var $modal = $( '<div class="login-modal">' ),
            $iframe = $( '<iframe src="/sign-in">' );

        $modal.css({
            position: 'fixed',
            'overflow-y': 'auto',
            top: '0px',
            left: '0px',
            width: '100%',
            height: '100%',
            'background-color': 'rgba(0, 0, 0, 0.93)',
            'z-index': 20000
        });

        $iframe.css({
            overflow: 'hidden',
            display: 'block',
            width: '960px',
            height: '500px',
            margin: '232px auto 0',
            border: 0,
            'background-color': 'transparent'
        });

        $modal.on({
            click: function() {
                // if user clicks outside the iframe, close/remove the modal
                $(this).remove();
            },
            keydown: function(e) {
                // if user hits ESC, close/remove the modal
                if ( e.which == 27 ) {
                    $(this).remove();
                }
            }
        });

        $modal.append( $iframe );

        $( 'body' ).append( $modal );
    });
});
;(function($) {

    // Default settings
    var defaults = {
        // The text in the box
        'notificationText': 'By using this site, you consent to the use of cookies. <br class="mobile-only"> For more information, please <a href="/cookies">read our cookie policy.</a>',
        // The cookie name to set
        'cookieName': 'policy',
        // The cookie value to set
        'cookieValue': 'notified',
        // Number of days the cookie will expire in
        'cookieDays': '365',
        // Millis before box auto closes
        'timeBeforeClose': 3000,
        // Millis for default fade transition
        'fadeTimeDefault': 1777,
        // Millis for close button fade transition ( faster because clicking the close button should feel faster then a natural fade )
        'fadeTimeClose': 333
    };

    // Available methods
    var methods = {

        // Method to init our plugin
        // Accepts an argument of object - set the defaults
        init: function(options) {

            // Merge default options and passed argument options
            if (options) {
                $.extend(defaults, options);
            }

            // Test if cookie is set
            var cookieCheck = Cookie.read(defaults.cookieName);
            // If the cookie is not set to anything...
            // And not being loaded in an iframe
            if (cookieCheck === null && top === self ){
                // Set the cookie
                Cookie.create(defaults.cookieName, defaults.cookieValue, defaults.cookieDays);
                // Show notification
                $.fn.cookiePolicy('showNotification', defaults);
            }
        },

        // Method to show the notification
        // Accepts an argument of object - set text and transition times
        showNotification: function(settings){

            // Add close button to notification text
            notificationText = '<div class="cookie-policy-inner"><div class="text-wrapper">' + settings.notificationText + '<a href="#" class="cookie-policy-close">CLOSE [X]</a></div></div>';

            // Create cookie policy box element, set html, append to body
            var $notification =
                $('<div class="cookie-policy-box">')
                    .html(notificationText)
                    .appendTo(document.body);

            // Bind the close button after appending new element
            $('.cookie-policy-close').bind('click', function (e){
                e.preventDefault();
                $.fn.cookiePolicy('hideNotification',settings.fadeTimeClose);
            });

            // Fade notification in then...
            $notification.fadeIn(settings.fadeTimeDefault, function(){
                //... Set timeout to call hide notification function
                var closeTimeout = setTimeout(function(){
                    $.fn.cookiePolicy('hideNotification', settings.fadeTimeDefault);
                }, settings.timeBeforeClose);
            });
        },

        // Method to hide the notifiction
        // Accepts an argument of int - fade transition time in millis
        hideNotification: function(fadeTime){
            // Set fade transition time - fadeTime or 0
            fadeTime = typeof fadeTime !== 'undefined' ? fadeTime : 0;
            // Grab notification box
            var $notification = $('.cookie-policy-box');
            // If element exists...
            if ($notification.length !== 0){
                //... Fade out then...
                $notification.fadeOut(fadeTime, function() {
                    //... Remove after fade
                    $notification.remove();
                });
            }
        }
    };

    // Add cookiePolicy to jQuery
    $.fn.cookiePolicy = function(method) {
        if ( methods[method] ) {
            return methods[method].apply( this, Array.prototype.slice.call( arguments, 1 ));
        } else if ( typeof method === 'object' || ! method ) {
            return methods.init.apply( this, arguments );
        } else {
            $.error( 'Method ' +  method + ' does not exist on jQuery.cookiePolicy' );
        }
    };

    if ( ! isMobile_AllMusic ) {
        // Executes when page is fully loaded. Including all frames, objects and images
        // In this situation it provides a smoother feel than document.ready
        $(window).load(function() {
            $.fn.cookiePolicy();
        });
    }

})(jQuery);
;(function($) {

    // Default settings
    var defaults = {
        // The text in the box
        'notificationText': '<span class="heading">Have you signed up for your AllMusic account?</span><br><span class="notification-text">With an AllMusic account you will have the ability to rate albums, receive album recommendations based on your taste, create custom album lists, follow artists for new release notifications and more!</span><br><a href="/join" class="join-link">Sign up for your AllMusic Account</a>',
        // The cookie name to set
        'cookieName': 'registration_prompt',
        // The cookie value to set
        'cookieValue': 'true',
        // Number of days the cookie will expire in
        'cookieDays': '30',
        // Millis before box auto closes
        'timeBeforeClose': 600000,
        // Millis for default fade transition
        'fadeTimeDefault': 1777,
        // Millis for close button fade transition ( faster because clicking the close button should feel faster then a natural fade )
        'fadeTimeClose': 333
    };

    // Available methods
    var methods = {

        // Method to init our plugin
        // Accepts an argument of object - set the defaults
        init: function(options) {

            // Merge default options and passed argument options
            if (options) {
                $.extend(defaults, options);
            }

            // only fire in non-mobile
            if(!isMobile_AllMusic) {

                // Test if cookie is set
                var cookieCheck = Cookie.read(defaults.cookieName);

                // If the cookie is not set to anything...
                // And not being loaded in an iframe
                if (cookieCheck === null && top === self ){

                    // We don't have a cookie, so create one... for now,
                    // it will act as a countercreate counter cookie & set value to 1
                    Cookie.create(defaults.cookieName, '1', defaults.cookieDays);

                } else {

                    // We have a cookie, so it's either going to be "true" or a number

                    // check the count - only show the notification on 3rd, 6th, 9th, etc pageview
                    // if the number is 2, show the prompt.
                    // (we use 2 instead of 3 because cookie is set after page load.. ie 1st is 0, 2nd is 1, 3rd is 2)

                    // if the value is not 'true', increment it and rewrite the cookie
                    // if the value is 'true', don't do anything
                    if(cookieCheck === '3') {
                        // reset counter
                        Cookie.create(defaults.cookieName, '1', defaults.cookieDays);
                        // show notification
                        $.fn.registrationPrompt('showNotification', defaults);
                    }
                    if(cookieCheck === '1' || cookieCheck === '2') {
                        var cookieCount =  parseInt(cookieCheck);
                        ++cookieCount;
                        Cookie.create(defaults.cookieName, cookieCount, defaults.cookieDays);
                    }

                    // fallback - set cookie if user is logged in
                    if(User.loggedIn) {
                        Cookie.create(defaults.cookieName, defaults.cookieValue, defaults.cookieDays);
                    }

                }

            }

        },

        // Method to show the notification
        // Accepts an argument of object - set text and transition times
        showNotification: function(settings){

            // fire GA event
            allmusic.gaTrackEvent({data: [ "Registration Pop-Up", "Interaction", "Pop-Up Launched" ]});

            // Add close button to notification text
            notificationText = '<a href="#" class="registration-prompt-close">X</a><div class="registration-prompt-inner"><div class="text-wrapper">' + settings.notificationText + '</div></div>';

            // Create cookie policy box element, set html, append to body
            var $notification =
                $('<div class="registration-prompt-box">')
                    .html(notificationText)
                    .appendTo(document.body);

            // Bind the close button after appending new element
            $('.registration-prompt-close').bind('click', function (e){
                e.preventDefault();
                allmusic.gaTrackEvent({data: [ "Registration Pop-Up", "Interaction", "Click X to Close" ]});
                $.fn.registrationPrompt('hideNotification',settings.fadeTimeClose);
                Cookie.create(defaults.cookieName, defaults.cookieValue, defaults.cookieDays);
            });

            // if user clicks the join link, set the cookie
            $('.join-link').bind('click', function (e) {
                allmusic.gaTrackEvent({data: [ "Registration Pop-Up", "Interaction", "Click on Join Link" ]});
                Cookie.create(defaults.cookieName, defaults.cookieValue, defaults.cookieDays);
            });

            // Fade notification in then...
            $notification.fadeIn(settings.fadeTimeDefault);

        },

        // Method to hide the notifiction
        // Accepts an argument of int - fade transition time in millis
        hideNotification: function(fadeTime){
            // Set fade transition time - fadeTime or 0
            fadeTime = typeof fadeTime !== 'undefined' ? fadeTime : 0;
            // Grab notification box
            var $notification = $('.registration-prompt-box');
            // If element exists...
            if ($notification.length !== 0){
                //... Fade out then...
                $notification.fadeOut(fadeTime, function() {
                    //... Remove after fade
                    $notification.remove();
                });
            }
        }
    };

    // Add registrationPrompt to jQuery
    $.fn.registrationPrompt = function(method) {
        if ( methods[method] ) {
            return methods[method].apply( this, Array.prototype.slice.call( arguments, 1 ));
        } else if ( typeof method === 'object' || ! method ) {
            return methods.init.apply( this, arguments );
        } else {
            $.error( 'Method ' +  method + ' does not exist on jQuery.registrationPrompt' );
        }
    };

    if ( ! isMobile_AllMusic ) {
        $(function() {
            $.fn.registrationPrompt();
        });
    }

})(jQuery);